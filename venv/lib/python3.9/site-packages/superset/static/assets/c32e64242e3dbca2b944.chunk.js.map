{"version":3,"file":"c32e64242e3dbca2b944.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/MetadataBar/ContentType.ts","webpack://superset/./src/components/MetadataBar/ContentConfig.tsx","webpack://superset/./src/components/MetadataBar/MetadataBar.tsx","webpack://superset/./src/components/MetadataBar/index.tsx","webpack://superset/./src/components/DynamicEditableTitle/index.tsx","webpack://superset/./src/components/PageHeaderWithActions/index.tsx","webpack://superset/./src/components/TableView/TableView.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport enum MetadataType {\n  Dashboards = 'dashboards',\n  Description = 'description',\n  LastModified = 'lastModified',\n  Owner = 'owner',\n  Rows = 'rows',\n  Sql = 'sql',\n  Table = 'table',\n  Tags = 'tags',\n}\n\nexport type Dashboards = {\n  type: MetadataType.Dashboards;\n  title: string;\n  description?: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Description = {\n  type: MetadataType.Description;\n  value: string;\n  onClick?: (type: string) => void;\n};\n\nexport type LastModified = {\n  type: MetadataType.LastModified;\n  value: string;\n  modifiedBy: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Owner = {\n  type: MetadataType.Owner;\n  createdBy: string;\n  owners?: string[];\n  createdOn: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Rows = {\n  type: MetadataType.Rows;\n  title: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Sql = {\n  type: MetadataType.Sql;\n  title: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Table = {\n  type: MetadataType.Table;\n  title: string;\n  onClick?: (type: string) => void;\n};\n\nexport type Tags = {\n  type: MetadataType.Tags;\n  values: string[];\n  onClick?: (type: string) => void;\n};\n\nexport type ContentType =\n  | Dashboards\n  | Description\n  | LastModified\n  | Owner\n  | Rows\n  | Sql\n  | Table\n  | Tags;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, styled, t } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { ContentType, MetadataType } from '.';\n\nconst Header = styled.div`\n  font-weight: ${({ theme }) => theme.typography.weights.bold};\n`;\n\nconst Info = ({\n  text,\n  header,\n}: {\n  text?: string | string[];\n  header?: string;\n}) => {\n  const values = ensureIsArray(text);\n  return (\n    <>\n      {header && <Header>{header}</Header>}\n      {values.map(value => (\n        <div key={value}>{value}</div>\n      ))}\n    </>\n  );\n};\n\nconst config = (contentType: ContentType) => {\n  const { type } = contentType;\n\n  /**\n   * Tooltips are very similar. It's pretty much blocks\n   * of header/text pairs. That's why they are implemented here.\n   * If more complex tooltips emerge, then we should extract the different\n   * types of tooltips to their own components and reference them here.\n   */\n\n  switch (type) {\n    case MetadataType.Dashboards:\n      return {\n        icon: Icons.FundProjectionScreenOutlined,\n        title: contentType.title,\n        tooltip: contentType.description ? (\n          <div>\n            <Info header={contentType.title} text={contentType.description} />\n          </div>\n        ) : undefined,\n      };\n\n    case MetadataType.Description:\n      return {\n        icon: Icons.BookOutlined,\n        title: contentType.value,\n      };\n\n    case MetadataType.LastModified:\n      return {\n        icon: Icons.EditOutlined,\n        title: contentType.value,\n        tooltip: (\n          <div>\n            <Info header={t('Last modified')} text={contentType.value} />\n            <Info header={t('Modified by')} text={contentType.modifiedBy} />\n          </div>\n        ),\n      };\n\n    case MetadataType.Owner:\n      return {\n        icon: Icons.UserOutlined,\n        title: contentType.createdBy,\n        tooltip: (\n          <div>\n            <Info header={t('Created by')} text={contentType.createdBy} />\n            {!!contentType.owners && (\n              <Info header={t('Owners')} text={contentType.owners} />\n            )}\n            <Info header={t('Created on')} text={contentType.createdOn} />\n          </div>\n        ),\n      };\n\n    case MetadataType.Rows:\n      return {\n        icon: Icons.InsertRowBelowOutlined,\n        title: contentType.title,\n        tooltip: contentType.title,\n      };\n\n    case MetadataType.Sql:\n      return {\n        icon: Icons.ConsoleSqlOutlined,\n        title: contentType.title,\n        tooltip: contentType.title,\n      };\n\n    case MetadataType.Table:\n      return {\n        icon: Icons.Table,\n        title: contentType.title,\n        tooltip: contentType.title,\n      };\n\n    case MetadataType.Tags:\n      return {\n        icon: Icons.TagsOutlined,\n        title: contentType.values.join(', '),\n        tooltip: (\n          <div>\n            <Info header={t('Tags')} text={contentType.values} />\n          </div>\n        ),\n      };\n\n    default:\n      throw Error(`Invalid type provided: ${type}`);\n  }\n};\n\nexport { config };\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { uniqWith } from 'lodash';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip, TooltipPlacement } from 'src/components/Tooltip';\nimport { ContentType } from './ContentType';\nimport { config } from './ContentConfig';\n\nexport const MIN_NUMBER_ITEMS = 2;\nexport const MAX_NUMBER_ITEMS = 6;\n\nconst HORIZONTAL_PADDING = 12;\nconst VERTICAL_PADDING = 8;\nconst ICON_PADDING = 8;\nconst SPACE_BETWEEN_ITEMS = 16;\nconst ICON_WIDTH = 16;\nconst TEXT_MIN_WIDTH = 70;\nconst TEXT_MAX_WIDTH = 150;\nconst ORDER = {\n  dashboards: 0,\n  table: 1,\n  sql: 2,\n  rows: 3,\n  tags: 4,\n  description: 5,\n  owner: 6,\n  lastModified: 7,\n};\n\nconst Bar = styled.div<{ count: number }>`\n  ${({ theme, count }) => `\n    display: flex;\n    align-items: center;\n    padding: ${VERTICAL_PADDING}px ${HORIZONTAL_PADDING}px;\n    background-color: ${theme.colors.grayscale.light4};\n    color: ${theme.colors.grayscale.base};\n    font-size: ${theme.typography.sizes.s}px;\n    min-width: ${\n      HORIZONTAL_PADDING * 2 +\n      (ICON_WIDTH + SPACE_BETWEEN_ITEMS) * count -\n      SPACE_BETWEEN_ITEMS\n    }px;\n    border-radius: ${theme.borderRadius}px;\n    line-height: 1;\n  `}\n`;\n\nconst StyledItem = styled.div<{\n  collapsed: boolean;\n  last: boolean;\n  onClick?: () => void;\n}>`\n  ${({ theme, collapsed, last, onClick }) => `\n    display: flex;\n    align-items: center;\n    max-width: ${\n      ICON_WIDTH +\n      ICON_PADDING +\n      TEXT_MAX_WIDTH +\n      (last ? 0 : SPACE_BETWEEN_ITEMS)\n    }px;\n    min-width: ${\n      collapsed\n        ? ICON_WIDTH + (last ? 0 : SPACE_BETWEEN_ITEMS)\n        : ICON_WIDTH +\n          ICON_PADDING +\n          TEXT_MIN_WIDTH +\n          (last ? 0 : SPACE_BETWEEN_ITEMS)\n    }px;\n    padding-right: ${last ? 0 : SPACE_BETWEEN_ITEMS}px;\n    cursor: ${onClick ? 'pointer' : 'default'};\n    & .metadata-icon {\n      color: ${\n        onClick && collapsed\n          ? theme.colors.primary.base\n          : theme.colors.grayscale.base\n      };\n      padding-right: ${collapsed ? 0 : ICON_PADDING}px;\n      & .anticon {\n        line-height: 0;\n      }\n    }\n    & .metadata-text {\n      min-width: ${TEXT_MIN_WIDTH}px;\n      overflow: hidden;\n      text-overflow: ${collapsed ? 'unset' : 'ellipsis'};\n      white-space: nowrap;\n      text-decoration: ${onClick ? 'underline' : 'none'};\n      line-height: 1.4;\n    }\n  `}\n`;\n\n// Make sure big tootips are truncated\nconst TootipContent = styled.div`\n  display: -webkit-box;\n  -webkit-line-clamp: 20;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Item = ({\n  barWidth,\n  contentType,\n  collapsed,\n  last = false,\n  tooltipPlacement,\n}: {\n  barWidth: number | undefined;\n  contentType: ContentType;\n  collapsed: boolean;\n  last?: boolean;\n  tooltipPlacement: TooltipPlacement;\n}) => {\n  const { icon, title, tooltip = title } = config(contentType);\n  const [isTruncated, setIsTruncated] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n  const Icon = icon;\n  const { type, onClick } = contentType;\n\n  useEffect(() => {\n    setIsTruncated(\n      ref.current ? ref.current.scrollWidth > ref.current.clientWidth : false,\n    );\n  }, [barWidth, setIsTruncated, contentType]);\n\n  const content = (\n    <StyledItem\n      collapsed={collapsed}\n      last={last}\n      onClick={onClick ? () => onClick(type) : undefined}\n      role={onClick ? 'button' : undefined}\n    >\n      <Icon iconSize=\"l\" className=\"metadata-icon\" />\n      {!collapsed && (\n        <span ref={ref} className=\"metadata-text\">\n          {title}\n        </span>\n      )}\n    </StyledItem>\n  );\n  return isTruncated || collapsed || (tooltip && tooltip !== title) ? (\n    <Tooltip\n      placement={tooltipPlacement}\n      title={<TootipContent>{tooltip}</TootipContent>}\n    >\n      {content}\n    </Tooltip>\n  ) : (\n    content\n  );\n};\n\nexport interface MetadataBarProps {\n  /**\n   * Array of content type configurations. To see the available properties\n   * for each content type, check {@link ContentType}\n   */\n  items: ContentType[];\n  /**\n   * Antd tooltip placement. To see available values, check {@link TooltipPlacement}.\n   * Defaults to \"top\".\n   */\n  tooltipPlacement?: TooltipPlacement;\n}\n\n/**\n * The metadata bar component is used to display additional information about an entity.\n * Content types are predefined and consistent across the whole app. This means that\n * they will be displayed and behave in a consistent manner, keeping the same ordering,\n * information formatting, and interactions.\n * To extend the list of content types, a developer needs to request the inclusion of the new type in the design system.\n * This process is important to make sure the new type is reviewed by the design team, improving Superset consistency.\n */\nconst MetadataBar = ({ items, tooltipPlacement = 'top' }: MetadataBarProps) => {\n  const [width, setWidth] = useState<number>();\n  const [collapsed, setCollapsed] = useState(false);\n  const uniqueItems = uniqWith(items, (a, b) => a.type === b.type);\n  const sortedItems = uniqueItems.sort((a, b) => ORDER[a.type] - ORDER[b.type]);\n  const count = sortedItems.length;\n  if (count < MIN_NUMBER_ITEMS) {\n    throw Error('The minimum number of items for the metadata bar is 2.');\n  }\n  if (count > MAX_NUMBER_ITEMS) {\n    throw Error('The maximum number of items for the metadata bar is 6.');\n  }\n\n  const onResize = useCallback(\n    width => {\n      // Calculates the breakpoint width to collapse the bar.\n      // The last item does not have a space, so we subtract SPACE_BETWEEN_ITEMS from the total.\n      const breakpoint =\n        (ICON_WIDTH + ICON_PADDING + TEXT_MIN_WIDTH + SPACE_BETWEEN_ITEMS) *\n          count -\n        SPACE_BETWEEN_ITEMS;\n      setWidth(width);\n      setCollapsed(Boolean(width && width < breakpoint));\n    },\n    [count],\n  );\n\n  const { ref } = useResizeDetector({ onResize });\n\n  return (\n    <Bar ref={ref} count={count} data-test=\"metadata-bar\">\n      {sortedItems.map((item, index) => (\n        <Item\n          barWidth={width}\n          key={index}\n          contentType={item}\n          collapsed={collapsed}\n          last={index === count - 1}\n          tooltipPlacement={tooltipPlacement}\n        />\n      ))}\n    </Bar>\n  );\n};\n\nexport default MetadataBar;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport MetadataBar, { MIN_NUMBER_ITEMS, MAX_NUMBER_ITEMS } from './MetadataBar';\n\nexport type { MetadataBarProps } from './MetadataBar';\n\nexport default MetadataBar;\n\nexport { MIN_NUMBER_ITEMS, MAX_NUMBER_ITEMS };\n\nexport * from './ContentType';\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  ChangeEvent,\n  KeyboardEvent,\n  memo,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { css, SupersetTheme, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { useResizeDetector } from 'react-resize-detector';\n\nexport type DynamicEditableTitleProps = {\n  title: string;\n  placeholder: string;\n  onSave: (title: string) => void;\n  canEdit: boolean;\n  label: string | undefined;\n};\n\nconst titleStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  font-size: ${theme.typography.sizes.xl}px;\n  font-weight: ${theme.typography.weights.bold};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  & .dynamic-title,\n  & .dynamic-title-input {\n    display: inline-block;\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  & .dynamic-title {\n    cursor: default;\n  }\n  & .dynamic-title-input {\n    border: none;\n    padding: 0;\n    outline: none;\n\n    &::placeholder {\n      color: ${theme.colors.grayscale.light1};\n    }\n  }\n\n  & .input-sizer {\n    position: absolute;\n    left: -9999px;\n    display: inline-block;\n    white-space: pre;\n  }\n`;\n\nexport const DynamicEditableTitle = memo(\n  ({\n    title,\n    placeholder,\n    onSave,\n    canEdit,\n    label,\n  }: DynamicEditableTitleProps) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [currentTitle, setCurrentTitle] = useState(title || '');\n    const contentRef = useRef<HTMLInputElement>(null);\n    const [showTooltip, setShowTooltip] = useState(false);\n\n    const { width: inputWidth, ref: sizerRef } = useResizeDetector();\n    const { width: containerWidth, ref: containerRef } = useResizeDetector({\n      refreshMode: 'debounce',\n    });\n\n    useEffect(() => {\n      setCurrentTitle(title);\n    }, [title]);\n\n    useEffect(() => {\n      if (isEditing && contentRef?.current) {\n        contentRef.current.focus();\n        // move cursor and scroll to the end\n        if (contentRef.current.setSelectionRange) {\n          const { length } = contentRef.current.value;\n          contentRef.current.setSelectionRange(length, length);\n          contentRef.current.scrollLeft = contentRef.current.scrollWidth;\n        }\n      }\n    }, [isEditing]);\n\n    // a trick to make the input grow when user types text\n    // we make additional span component, place it somewhere out of view and copy input\n    // then we can measure the width of that span to resize the input element\n    useLayoutEffect(() => {\n      if (sizerRef?.current) {\n        sizerRef.current.textContent = currentTitle || placeholder;\n      }\n    }, [currentTitle, placeholder, sizerRef]);\n\n    useEffect(() => {\n      if (\n        contentRef.current &&\n        contentRef.current.scrollWidth > contentRef.current.clientWidth\n      ) {\n        setShowTooltip(true);\n      } else {\n        setShowTooltip(false);\n      }\n    }, [inputWidth, containerWidth]);\n\n    const handleClick = useCallback(() => {\n      if (!canEdit || isEditing) {\n        return;\n      }\n      setIsEditing(true);\n    }, [canEdit, isEditing]);\n\n    const handleBlur = useCallback(() => {\n      if (!canEdit) {\n        return;\n      }\n      const formattedTitle = currentTitle.trim();\n      setCurrentTitle(formattedTitle);\n      if (title !== formattedTitle) {\n        onSave(formattedTitle);\n      }\n      setIsEditing(false);\n    }, [canEdit, currentTitle, onSave, title]);\n\n    const handleChange = useCallback(\n      (ev: ChangeEvent<HTMLInputElement>) => {\n        if (!canEdit || !isEditing) {\n          return;\n        }\n        setCurrentTitle(ev.target.value);\n      },\n      [canEdit, isEditing],\n    );\n\n    const handleKeyPress = useCallback(\n      (ev: KeyboardEvent<HTMLInputElement>) => {\n        if (!canEdit) {\n          return;\n        }\n        if (ev.key === 'Enter') {\n          ev.preventDefault();\n          contentRef.current?.blur();\n        }\n      },\n      [canEdit],\n    );\n\n    return (\n      <div css={titleStyles} ref={containerRef}>\n        <Tooltip\n          id=\"title-tooltip\"\n          title={\n            showTooltip && currentTitle && !isEditing ? currentTitle : null\n          }\n        >\n          {canEdit ? (\n            <input\n              data-test=\"editable-title-input\"\n              className=\"dynamic-title-input\"\n              aria-label={label ?? t('Title')}\n              ref={contentRef}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              onClick={handleClick}\n              onKeyPress={handleKeyPress}\n              placeholder={placeholder}\n              value={currentTitle}\n              css={css`\n                cursor: ${isEditing ? 'text' : 'pointer'};\n\n                ${inputWidth &&\n                inputWidth > 0 &&\n                css`\n                  width: ${inputWidth + 1}px;\n                `}\n              `}\n            />\n          ) : (\n            <span\n              className=\"dynamic-title\"\n              aria-label={label ?? t('Title')}\n              ref={contentRef}\n              data-test=\"editable-title\"\n            >\n              {currentTitle}\n            </span>\n          )}\n        </Tooltip>\n        <span\n          ref={sizerRef}\n          className=\"input-sizer\"\n          aria-hidden\n          tabIndex={-1}\n        />\n      </div>\n    );\n  },\n);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactNode, ReactElement } from 'react';\nimport { css, SupersetTheme, t, useTheme } from '@superset-ui/core';\nimport { AntdDropdown, AntdDropdownProps } from 'src/components';\nimport { TooltipPlacement } from 'src/components/Tooltip';\nimport {\n  DynamicEditableTitle,\n  DynamicEditableTitleProps,\n} from '../DynamicEditableTitle';\nimport CertifiedBadge, { CertifiedBadgeProps } from '../CertifiedBadge';\nimport FaveStar, { FaveStarProps } from '../FaveStar';\nimport Icons from '../Icons';\nimport Button from '../Button';\n\nexport const menuTriggerStyles = (theme: SupersetTheme) => css`\n  width: ${theme.gridUnit * 8}px;\n  height: ${theme.gridUnit * 8}px;\n  padding: 0;\n  border: 1px solid ${theme.colors.primary.dark2};\n\n  &.ant-btn > span.anticon {\n    line-height: 0;\n    transition: inherit;\n  }\n\n  &:hover:not(:focus) > span.anticon {\n    color: ${theme.colors.primary.light1};\n  }\n  &:focus-visible {\n    outline: 2px solid ${theme.colors.primary.dark2};\n  }\n`;\n\nconst headerStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  background-color: ${theme.colors.grayscale.light5};\n  height: ${theme.gridUnit * 16}px;\n  padding: 0 ${theme.gridUnit * 4}px;\n\n  .editable-title {\n    overflow: hidden;\n\n    & > input[type='button'],\n    & > span {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 100%;\n      white-space: nowrap;\n    }\n  }\n\n  span[role='button'] {\n    display: flex;\n    height: 100%;\n  }\n\n  .title-panel {\n    display: flex;\n    align-items: center;\n    min-width: 0;\n    margin-right: ${theme.gridUnit * 12}px;\n  }\n\n  .right-button-panel {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst buttonsStyles = (theme: SupersetTheme) => css`\n  display: flex;\n  align-items: center;\n  padding-left: ${theme.gridUnit * 2}px;\n\n  & .fave-unfave-icon {\n    padding: 0 ${theme.gridUnit}px;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n  }\n`;\n\nconst additionalActionsContainerStyles = (theme: SupersetTheme) => css`\n  margin-left: ${theme.gridUnit * 2}px;\n`;\n\nexport type PageHeaderWithActionsProps = {\n  editableTitleProps: DynamicEditableTitleProps;\n  showTitlePanelItems: boolean;\n  certificatiedBadgeProps?: CertifiedBadgeProps;\n  showFaveStar: boolean;\n  showMenuDropdown?: boolean;\n  faveStarProps: FaveStarProps;\n  titlePanelAdditionalItems: ReactNode;\n  rightPanelAdditionalItems: ReactNode;\n  additionalActionsMenu: ReactElement;\n  menuDropdownProps: Omit<AntdDropdownProps, 'overlay'>;\n  tooltipProps?: {\n    text?: string;\n    placement?: TooltipPlacement;\n  };\n};\n\nexport const PageHeaderWithActions = ({\n  editableTitleProps,\n  showTitlePanelItems,\n  certificatiedBadgeProps,\n  showFaveStar,\n  faveStarProps,\n  titlePanelAdditionalItems,\n  rightPanelAdditionalItems,\n  additionalActionsMenu,\n  menuDropdownProps,\n  showMenuDropdown = true,\n  tooltipProps,\n}: PageHeaderWithActionsProps) => {\n  const theme = useTheme();\n  return (\n    <div css={headerStyles} className=\"header-with-actions\">\n      <div className=\"title-panel\">\n        <DynamicEditableTitle {...editableTitleProps} />\n        {showTitlePanelItems && (\n          <div css={buttonsStyles}>\n            {certificatiedBadgeProps?.certifiedBy && (\n              <CertifiedBadge {...certificatiedBadgeProps} />\n            )}\n            {showFaveStar && <FaveStar {...faveStarProps} />}\n            {titlePanelAdditionalItems}\n          </div>\n        )}\n      </div>\n      <div className=\"right-button-panel\">\n        {rightPanelAdditionalItems}\n        <div css={additionalActionsContainerStyles}>\n          {showMenuDropdown && (\n            <AntdDropdown\n              trigger={['click']}\n              overlay={additionalActionsMenu}\n              {...menuDropdownProps}\n            >\n              <Button\n                css={menuTriggerStyles}\n                buttonStyle=\"tertiary\"\n                aria-label={t('Menu actions trigger')}\n                tooltip={tooltipProps?.text}\n                placement={tooltipProps?.placement}\n                data-test=\"actions-trigger\"\n              >\n                <Icons.MoreHoriz\n                  iconColor={theme.colors.primary.dark2}\n                  iconSize=\"l\"\n                />\n              </Button>\n            </AntdDropdown>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { memo, useEffect, useRef } from 'react';\nimport { isEqual } from 'lodash';\nimport { styled, t } from '@superset-ui/core';\nimport { useFilters, usePagination, useSortBy, useTable } from 'react-table';\nimport { Empty } from 'src/components';\nimport Pagination from 'src/components/Pagination';\nimport TableCollection from 'src/components/TableCollection';\nimport { SortByType, ServerPagination } from './types';\n\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport enum EmptyWrapperType {\n  Default = 'Default',\n  Small = 'Small',\n}\n\nexport interface TableViewProps {\n  columns: any[];\n  data: any[];\n  pageSize?: number;\n  totalCount?: number;\n  serverPagination?: boolean;\n  onServerPagination?: (args: ServerPagination) => void;\n  initialPageIndex?: number;\n  initialSortBy?: SortByType;\n  loading?: boolean;\n  withPagination?: boolean;\n  emptyWrapperType?: EmptyWrapperType;\n  noDataText?: string;\n  className?: string;\n  isPaginationSticky?: boolean;\n  showRowCount?: boolean;\n  scrollTable?: boolean;\n  scrollTopOnPagination?: boolean;\n  small?: boolean;\n  columnsForWrapText?: string[];\n}\n\nconst EmptyWrapper = styled.div`\n  margin: ${({ theme }) => theme.gridUnit * 40}px 0;\n`;\n\nconst TableViewStyles = styled.div<{\n  isPaginationSticky?: boolean;\n  scrollTable?: boolean;\n  small?: boolean;\n}>`\n  ${({ scrollTable, theme }) =>\n    scrollTable &&\n    `\n    flex: 1 1 auto;\n    margin-bottom: ${theme.gridUnit * 4}px;\n    overflow: auto;\n  `}\n\n  .table-row {\n    ${({ theme, small }) => !small && `height: ${theme.gridUnit * 11 - 1}px;`}\n\n    .table-cell {\n      ${({ theme, small }) =>\n        small &&\n        `\n        padding-top: ${theme.gridUnit + 1}px;\n        padding-bottom: ${theme.gridUnit + 1}px;\n        line-height: 1.45;\n      `}\n    }\n  }\n\n  th[role='columnheader'] {\n    z-index: 1;\n    border-bottom: ${({ theme }) =>\n      `${theme.gridUnit - 2}px solid ${theme.colors.grayscale.light2}`};\n    ${({ small }) => small && `padding-bottom: 0;`}\n  }\n`;\n\nconst PaginationStyles = styled.div<{\n  isPaginationSticky?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  ${({ isPaginationSticky }) =>\n    isPaginationSticky &&\n    `\n        position: sticky;\n        bottom: 0;\n        left: 0;\n    `};\n\n  .row-count-container {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nconst TableView = ({\n  columns,\n  data,\n  pageSize: initialPageSize,\n  totalCount = data.length,\n  initialPageIndex,\n  initialSortBy = [],\n  loading = false,\n  withPagination = true,\n  emptyWrapperType = EmptyWrapperType.Default,\n  noDataText,\n  showRowCount = true,\n  serverPagination = false,\n  columnsForWrapText,\n  onServerPagination = () => {},\n  scrollTopOnPagination = false,\n  ...props\n}: TableViewProps) => {\n  const initialState = {\n    pageSize: initialPageSize ?? DEFAULT_PAGE_SIZE,\n    pageIndex: initialPageIndex ?? 0,\n    sortBy: initialSortBy,\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    rows,\n    prepareRow,\n    pageCount,\n    gotoPage,\n    state: { pageIndex, pageSize, sortBy },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState,\n      manualPagination: serverPagination,\n      manualSortBy: serverPagination,\n      pageCount: Math.ceil(totalCount / initialState.pageSize),\n    },\n    useFilters,\n    useSortBy,\n    usePagination,\n  );\n\n  const content = withPagination ? page : rows;\n\n  let EmptyWrapperComponent;\n  switch (emptyWrapperType) {\n    case EmptyWrapperType.Small:\n      EmptyWrapperComponent = ({ children }: any) => <>{children}</>;\n      break;\n    case EmptyWrapperType.Default:\n    default:\n      EmptyWrapperComponent = ({ children }: any) => (\n        <EmptyWrapper>{children}</EmptyWrapper>\n      );\n  }\n\n  const isEmpty = !loading && content.length === 0;\n  const hasPagination = pageCount > 1 && withPagination;\n  const tableRef = useRef<HTMLTableElement>(null);\n  const handleGotoPage = (p: number) => {\n    if (scrollTopOnPagination) {\n      tableRef?.current?.scroll(0, 0);\n    }\n    gotoPage(p);\n  };\n\n  useEffect(() => {\n    if (serverPagination && pageIndex !== initialState.pageIndex) {\n      onServerPagination({\n        pageIndex,\n      });\n    }\n  }, [pageIndex]);\n\n  useEffect(() => {\n    if (serverPagination && !isEqual(sortBy, initialState.sortBy)) {\n      onServerPagination({\n        pageIndex: 0,\n        sortBy,\n      });\n    }\n  }, [sortBy]);\n\n  return (\n    <>\n      <TableViewStyles {...props} ref={tableRef}>\n        <TableCollection\n          getTableProps={getTableProps}\n          getTableBodyProps={getTableBodyProps}\n          prepareRow={prepareRow}\n          headerGroups={headerGroups}\n          rows={content}\n          columns={columns}\n          loading={loading}\n          columnsForWrapText={columnsForWrapText}\n        />\n        {isEmpty && (\n          <EmptyWrapperComponent>\n            {noDataText ? (\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={noDataText}\n              />\n            ) : (\n              <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n            )}\n          </EmptyWrapperComponent>\n        )}\n      </TableViewStyles>\n      {hasPagination && (\n        <PaginationStyles\n          className=\"pagination-container\"\n          isPaginationSticky={props.isPaginationSticky}\n        >\n          <Pagination\n            totalPages={pageCount || 0}\n            currentPage={pageCount ? pageIndex + 1 : 0}\n            onChange={(p: number) => handleGotoPage(p - 1)}\n            hideFirstAndLastPageLinks\n          />\n          {showRowCount && (\n            <div className=\"row-count-container\">\n              {!loading &&\n                t(\n                  '%s-%s of %s',\n                  pageSize * pageIndex + (page.length && 1),\n                  pageSize * pageIndex + page.length,\n                  totalCount,\n                )}\n            </div>\n          )}\n        </PaginationStyles>\n      )}\n    </>\n  );\n};\n\nexport default memo(TableView);\n"],"names":["MetadataType","Header","styled","div","theme","typography","weights","bold","Info","text","header","values","ensureIsArray","_jsxs","_Fragment","children","_jsx","map","value","SPACE_BETWEEN_ITEMS","ORDER","dashboards","table","sql","rows","tags","description","owner","lastModified","Bar","count","colors","grayscale","light4","base","sizes","s","HORIZONTAL_PADDING","borderRadius","StyledItem","collapsed","last","onClick","ICON_WIDTH","primary","TootipContent","Item","barWidth","contentType","tooltipPlacement","icon","title","tooltip","config","type","Dashboards","Icons","FundProjectionScreenOutlined","undefined","Description","BookOutlined","LastModified","EditOutlined","t","modifiedBy","Owner","UserOutlined","createdBy","owners","createdOn","Rows","InsertRowBelowOutlined","Sql","ConsoleSqlOutlined","Table","Tags","TagsOutlined","join","Error","isTruncated","setIsTruncated","useState","ref","useRef","Icon","useEffect","current","scrollWidth","clientWidth","content","role","iconSize","className","Tooltip","placement","MetadataBar","items","width","setWidth","setCollapsed","sortedItems","_uniqWith","a","b","sort","length","onResize","useCallback","breakpoint","Boolean","useResizeDetector","item","index","titleStyles","css","xl","light1","DynamicEditableTitle","memo","placeholder","onSave","canEdit","label","isEditing","setIsEditing","currentTitle","setCurrentTitle","contentRef","showTooltip","setShowTooltip","inputWidth","sizerRef","containerWidth","containerRef","refreshMode","focus","setSelectionRange","scrollLeft","useLayoutEffect","textContent","handleClick","handleBlur","formattedTitle","trim","handleChange","ev","target","handleKeyPress","_contentRef$current","key","preventDefault","blur","id","onChange","onBlur","onKeyPress","tabIndex","menuTriggerStyles","gridUnit","dark2","headerStyles","light5","buttonsStyles","additionalActionsContainerStyles","PageHeaderWithActions","editableTitleProps","showTitlePanelItems","certificatiedBadgeProps","showFaveStar","faveStarProps","titlePanelAdditionalItems","rightPanelAdditionalItems","additionalActionsMenu","menuDropdownProps","showMenuDropdown","tooltipProps","useTheme","certifiedBy","CertifiedBadge","FaveStar","AntdDropdown","trigger","overlay","Button","buttonStyle","MoreHoriz","iconColor","EmptyWrapperType","EmptyWrapper","TableViewStyles","scrollTable","small","light2","PaginationStyles","isPaginationSticky","TableView","columns","data","pageSize","initialPageSize","totalCount","initialPageIndex","initialSortBy","loading","withPagination","emptyWrapperType","Default","noDataText","showRowCount","serverPagination","columnsForWrapText","onServerPagination","scrollTopOnPagination","props","initialState","pageIndex","sortBy","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","pageCount","gotoPage","state","useTable","manualPagination","manualSortBy","Math","ceil","useFilters","useSortBy","usePagination","EmptyWrapperComponent","Small","isEmpty","hasPagination","tableRef","_isEqual","TableCollection","Empty","image","PRESENTED_IMAGE_SIMPLE","Pagination","totalPages","currentPage","p","handleGotoPage","_tableRef$current","scroll","hideFirstAndLastPageLinks"],"sourceRoot":""}