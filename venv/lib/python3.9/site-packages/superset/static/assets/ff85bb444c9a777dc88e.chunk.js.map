{"version":3,"file":"ff85bb444c9a777dc88e.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/AuditInfo/index.tsx","webpack://superset/./src/components/ImportModal/index.tsx","webpack://superset/./src/components/ListView/ActionsBar.tsx","webpack://superset/./src/components/Popover/Popover.tsx","webpack://superset/./src/features/home/commonMenuData.ts","webpack://superset/./src/features/queries/SyntaxHighlighterCopy.tsx","webpack://superset/./src/features/queries/hooks/useQueryPreviewState.ts","webpack://superset/./src/features/queries/SavedQueryPreviewModal.tsx","webpack://superset/./src/pages/SavedQueryList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Owner from 'src/types/Owner';\nimport { Tooltip } from 'src/components/Tooltip';\nimport getOwnerName from 'src/utils/getOwnerName';\nimport { t } from '@superset-ui/core';\n\nexport type ModifiedInfoProps = {\n  user?: Owner;\n  date: string;\n};\n\nexport const ModifiedInfo = ({ user, date }: ModifiedInfoProps) => {\n  const dateSpan = (\n    <span className=\"no-wrap\" data-test=\"audit-info-date\">\n      {date}\n    </span>\n  );\n\n  if (user) {\n    const userName = getOwnerName(user);\n    const title = t('Modified by: %s', userName);\n    return (\n      <Tooltip title={title} placement=\"bottom\">\n        {dateSpan}\n      </Tooltip>\n    );\n  }\n  return dateSpan;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FunctionComponent, useEffect, useState, ChangeEvent } from 'react';\n\nimport { UploadChangeParam, UploadFile } from 'antd/lib/upload/interface';\nimport { styled, t } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport Modal from 'src/components/Modal';\nimport { Upload } from 'src/components';\nimport { useImportResource } from 'src/views/CRUD/hooks';\nimport { ImportResourceName } from 'src/views/CRUD/types';\nimport ErrorAlert from './ErrorAlert';\n\nconst HelperMessage = styled.div`\n  display: block;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n`;\n\nconst StyledInputContainer = styled.div`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-top: ${({ theme }) => theme.gridUnit * 2}px;\n\n  & > div {\n    margin: ${({ theme }) => theme.gridUnit}px 0;\n  }\n\n  &.extra-container {\n    padding-top: 8px;\n  }\n\n  .confirm-overwrite {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  .input-container {\n    display: flex;\n    align-items: center;\n\n    label {\n      display: flex;\n      margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    i {\n      margin: 0 ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  input,\n  textarea {\n    flex: 1 1 auto;\n  }\n\n  textarea {\n    height: 160px;\n    resize: none;\n  }\n\n  input::placeholder,\n  textarea::placeholder {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  textarea,\n  input[type='text'],\n  input[type='number'] {\n    padding: ${({ theme }) => theme.gridUnit * 1.5}px\n      ${({ theme }) => theme.gridUnit * 2}px;\n    border-style: none;\n    border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-radius: ${({ theme }) => theme.gridUnit}px;\n\n    &[name='name'] {\n      flex: 0 1 auto;\n      width: 40%;\n    }\n\n    &[name='sqlalchemy_uri'] {\n      margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    }\n  }\n`;\n\nexport interface ImportModelsModalProps {\n  resourceName: ImportResourceName;\n  resourceLabel: string;\n  passwordsNeededMessage: string;\n  confirmOverwriteMessage: string;\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onModelImport: () => void;\n  show: boolean;\n  onHide: () => void;\n  passwordFields?: string[];\n  setPasswordFields?: (passwordFields: string[]) => void;\n  sshTunnelPasswordFields?: string[];\n  setSSHTunnelPasswordFields?: (sshTunnelPasswordFields: string[]) => void;\n  sshTunnelPrivateKeyFields?: string[];\n  setSSHTunnelPrivateKeyFields?: (sshTunnelPrivateKeyFields: string[]) => void;\n  sshTunnelPrivateKeyPasswordFields?: string[];\n  setSSHTunnelPrivateKeyPasswordFields?: (\n    sshTunnelPrivateKeyPasswordFields: string[],\n  ) => void;\n}\n\nconst ImportModelsModal: FunctionComponent<ImportModelsModalProps> = ({\n  resourceName,\n  resourceLabel,\n  passwordsNeededMessage,\n  confirmOverwriteMessage,\n  onModelImport,\n  show,\n  onHide,\n  passwordFields = [],\n  setPasswordFields = () => {},\n  sshTunnelPasswordFields = [],\n  setSSHTunnelPasswordFields = () => {},\n  sshTunnelPrivateKeyFields = [],\n  setSSHTunnelPrivateKeyFields = () => {},\n  sshTunnelPrivateKeyPasswordFields = [],\n  setSSHTunnelPrivateKeyPasswordFields = () => {},\n}) => {\n  const [isHidden, setIsHidden] = useState<boolean>(true);\n  const [passwords, setPasswords] = useState<Record<string, string>>({});\n  const [needsOverwriteConfirm, setNeedsOverwriteConfirm] =\n    useState<boolean>(false);\n  const [confirmedOverwrite, setConfirmedOverwrite] = useState<boolean>(false);\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [importingModel, setImportingModel] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [sshTunnelPasswords, setSSHTunnelPasswords] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeys, setSSHTunnelPrivateKeys] = useState<\n    Record<string, string>\n  >({});\n  const [sshTunnelPrivateKeyPasswords, setSSHTunnelPrivateKeyPasswords] =\n    useState<Record<string, string>>({});\n\n  const clearModal = () => {\n    setFileList([]);\n    setPasswordFields([]);\n    setPasswords({});\n    setNeedsOverwriteConfirm(false);\n    setConfirmedOverwrite(false);\n    setImportingModel(false);\n    setErrorMessage('');\n    setSSHTunnelPasswordFields([]);\n    setSSHTunnelPrivateKeyFields([]);\n    setSSHTunnelPrivateKeyPasswordFields([]);\n    setSSHTunnelPasswords({});\n    setSSHTunnelPrivateKeys({});\n    setSSHTunnelPrivateKeyPasswords({});\n  };\n\n  const handleErrorMsg = (msg: string) => {\n    setErrorMessage(msg);\n  };\n\n  const {\n    state: {\n      alreadyExists,\n      passwordsNeeded,\n      sshPasswordNeeded,\n      sshPrivateKeyNeeded,\n      sshPrivateKeyPasswordNeeded,\n    },\n    importResource,\n  } = useImportResource(resourceName, resourceLabel, handleErrorMsg);\n\n  useEffect(() => {\n    setPasswordFields(passwordsNeeded);\n    if (passwordsNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [passwordsNeeded, setPasswordFields]);\n\n  useEffect(() => {\n    setNeedsOverwriteConfirm(alreadyExists.length > 0);\n    if (alreadyExists.length > 0) {\n      setImportingModel(false);\n    }\n  }, [alreadyExists, setNeedsOverwriteConfirm]);\n\n  useEffect(() => {\n    setSSHTunnelPasswordFields(sshPasswordNeeded);\n    if (sshPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPasswordNeeded, setSSHTunnelPasswordFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyFields(sshPrivateKeyNeeded);\n    if (sshPrivateKeyNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyNeeded, setSSHTunnelPrivateKeyFields]);\n\n  useEffect(() => {\n    setSSHTunnelPrivateKeyPasswordFields(sshPrivateKeyPasswordNeeded);\n    if (sshPrivateKeyPasswordNeeded.length > 0) {\n      setImportingModel(false);\n    }\n  }, [sshPrivateKeyPasswordNeeded, setSSHTunnelPrivateKeyPasswordFields]);\n\n  // Functions\n  const hide = () => {\n    setIsHidden(true);\n    onHide();\n    clearModal();\n  };\n\n  const onUpload = () => {\n    if (!(fileList[0]?.originFileObj instanceof File)) {\n      return;\n    }\n\n    setImportingModel(true);\n    importResource(\n      fileList[0].originFileObj,\n      passwords,\n      sshTunnelPasswords,\n      sshTunnelPrivateKeys,\n      sshTunnelPrivateKeyPasswords,\n      confirmedOverwrite,\n    ).then(result => {\n      if (result) {\n        clearModal();\n        onModelImport();\n      }\n    });\n  };\n\n  const changeFile = (info: UploadChangeParam) => {\n    setFileList([\n      {\n        ...info.file,\n        status: 'done',\n      },\n    ]);\n  };\n\n  const removeFile = (removedFile: UploadFile) => {\n    setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n    return false;\n  };\n\n  const confirmOverwrite = (event: ChangeEvent<HTMLInputElement>) => {\n    const targetValue = (event.currentTarget?.value as string) ?? '';\n    setConfirmedOverwrite(targetValue.toUpperCase() === t('OVERWRITE'));\n  };\n\n  const renderPasswordFields = () => {\n    if (\n      passwordFields.length === 0 &&\n      sshTunnelPasswordFields.length === 0 &&\n      sshTunnelPrivateKeyFields.length === 0 &&\n      sshTunnelPrivateKeyPasswordFields.length === 0\n    ) {\n      return null;\n    }\n\n    const files = [\n      ...new Set([\n        ...passwordFields,\n        ...sshTunnelPasswordFields,\n        ...sshTunnelPrivateKeyFields,\n        ...sshTunnelPrivateKeyPasswordFields,\n      ]),\n    ];\n\n    return (\n      <>\n        <h5>{t('Database passwords')}</h5>\n        <HelperMessage>{passwordsNeededMessage}</HelperMessage>\n        {files.map(fileName => (\n          <>\n            {passwordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`password-${fileName}`}\n                  autoComplete={`password-${fileName}`}\n                  type=\"password\"\n                  value={passwords[fileName]}\n                  onChange={event =>\n                    setPasswords({\n                      ...passwords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer key={`ssh_tunnel_password-for-${fileName}`}>\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPasswords({\n                      ...sshTunnelPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_password\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <textarea\n                  name={`ssh_tunnel_private_key-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key-${fileName}`}\n                  value={sshTunnelPrivateKeys[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeys({\n                      ...sshTunnelPrivateKeys,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key\"\n                />\n              </StyledInputContainer>\n            )}\n            {sshTunnelPrivateKeyPasswordFields?.indexOf(fileName) >= 0 && (\n              <StyledInputContainer\n                key={`ssh_tunnel_private_key_password-for-${fileName}`}\n              >\n                <div className=\"control-label\">\n                  {t('%s SSH TUNNEL PRIVATE KEY PASSWORD', fileName.slice(10))}\n                  <span className=\"required\">*</span>\n                </div>\n                <input\n                  name={`ssh_tunnel_private_key_password-${fileName}`}\n                  autoComplete={`ssh_tunnel_private_key_password-${fileName}`}\n                  type=\"password\"\n                  value={sshTunnelPrivateKeyPasswords[fileName]}\n                  onChange={event =>\n                    setSSHTunnelPrivateKeyPasswords({\n                      ...sshTunnelPrivateKeyPasswords,\n                      [fileName]: event.target.value,\n                    })\n                  }\n                  data-test=\"ssh_tunnel_private_key_password\"\n                />\n              </StyledInputContainer>\n            )}\n          </>\n        ))}\n      </>\n    );\n  };\n\n  const renderOverwriteConfirmation = () => {\n    if (!needsOverwriteConfirm) {\n      return null;\n    }\n\n    return (\n      <>\n        <StyledInputContainer>\n          <div className=\"confirm-overwrite\">{confirmOverwriteMessage}</div>\n          <div className=\"control-label\">\n            {t('Type \"%s\" to confirm', t('OVERWRITE'))}\n          </div>\n          <input\n            data-test=\"overwrite-modal-input\"\n            id=\"overwrite\"\n            type=\"text\"\n            onChange={confirmOverwrite}\n          />\n        </StyledInputContainer>\n      </>\n    );\n  };\n\n  // Show/hide\n  if (isHidden && show) {\n    setIsHidden(false);\n  }\n\n  return (\n    <Modal\n      name=\"model\"\n      className=\"import-model-modal\"\n      disablePrimaryButton={\n        fileList.length === 0 ||\n        (needsOverwriteConfirm && !confirmedOverwrite) ||\n        importingModel\n      }\n      onHandledPrimaryAction={onUpload}\n      onHide={hide}\n      primaryButtonName={needsOverwriteConfirm ? t('Overwrite') : t('Import')}\n      primaryButtonType={needsOverwriteConfirm ? 'danger' : 'primary'}\n      width=\"750px\"\n      show={show}\n      title={<h4>{t('Import %s', resourceLabel)}</h4>}\n    >\n      <StyledInputContainer>\n        <Upload\n          name=\"modelFile\"\n          id=\"modelFile\"\n          data-test=\"model-file-input\"\n          accept=\".yaml,.json,.yml,.zip\"\n          fileList={fileList}\n          onChange={changeFile}\n          onRemove={removeFile}\n          // upload is handled by hook\n          customRequest={() => {}}\n          disabled={importingModel}\n        >\n          <Button loading={importingModel}>{t('Select file')}</Button>\n        </Upload>\n      </StyledInputContainer>\n      {errorMessage && (\n        <ErrorAlert\n          errorMessage={errorMessage}\n          showDbInstallInstructions={\n            passwordFields.length > 0 ||\n            sshTunnelPasswordFields.length > 0 ||\n            sshTunnelPrivateKeyFields.length > 0 ||\n            sshTunnelPrivateKeyPasswordFields.length > 0\n          }\n        />\n      )}\n      {renderPasswordFields()}\n      {renderOverwriteConfirmation()}\n    </Modal>\n  );\n};\n\nexport default ImportModelsModal;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactElement } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { TooltipPlacement } from 'antd/lib/tooltip';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | ReactElement;\n  placement?: TooltipPlacement;\n  icon: string;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nconst ActionWrapper = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        const ActionIcon = Icons[action.icon];\n        if (action.tooltip) {\n          return (\n            <Tooltip\n              id={`${action.label}-tooltip`}\n              title={action.tooltip}\n              placement={action.placement}\n              key={index}\n            >\n              <ActionWrapper\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <ActionIcon />\n              </ActionWrapper>\n            </Tooltip>\n          );\n        }\n\n        return (\n          <ActionWrapper\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <ActionIcon />\n          </ActionWrapper>\n        );\n      })}\n    </StyledActions>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Popover as AntdPopover } from 'antd';\nimport type { PopoverProps as AntdPopoverProps } from 'antd/lib/popover';\n\nexport interface PopoverProps extends AntdPopoverProps {\n  forceRender?: boolean;\n}\n\nexport const Popover = (props: PopoverProps) => <AntdPopover {...props} />;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const commonMenuData = {\n  name: t('SQL'),\n  tabs: [\n    {\n      name: 'Saved queries',\n      label: t('Saved queries'),\n      url: '/savedqueryview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Query history',\n      label: t('Query history'),\n      url: '/sqllab/history/',\n      usesRouter: true,\n    },\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, t } from '@superset-ui/core';\nimport { SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport sqlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport htmlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/htmlbars';\nimport markdownSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/markdown';\nimport jsonSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/json';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport Icons from 'src/components/Icons';\nimport { ToastProps } from 'src/components/MessageToasts/withToasts';\nimport copyTextToClipboard from 'src/utils/copy';\n\nSyntaxHighlighter.registerLanguage('sql', sqlSyntax);\nSyntaxHighlighter.registerLanguage('markdown', markdownSyntax);\nSyntaxHighlighter.registerLanguage('html', htmlSyntax);\nSyntaxHighlighter.registerLanguage('json', jsonSyntax);\n\nconst SyntaxHighlighterWrapper = styled.div`\n  margin-top: -24px;\n\n  &:hover {\n    svg {\n      visibility: visible;\n    }\n  }\n\n  svg {\n    position: relative;\n    top: 40px;\n    left: 512px;\n    visibility: hidden;\n    margin: -4px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nexport default function SyntaxHighlighterCopy({\n  addDangerToast,\n  addSuccessToast,\n  children,\n  ...syntaxHighlighterProps\n}: SyntaxHighlighterProps & {\n  children: string;\n  addDangerToast?: ToastProps['addDangerToast'];\n  addSuccessToast?: ToastProps['addSuccessToast'];\n  language: 'sql' | 'markdown' | 'html' | 'json';\n}) {\n  function copyToClipboard(textToCopy: string) {\n    copyTextToClipboard(() => Promise.resolve(textToCopy))\n      .then(() => {\n        if (addSuccessToast) {\n          addSuccessToast(t('SQL Copied!'));\n        }\n      })\n      .catch(() => {\n        if (addDangerToast) {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        }\n      });\n  }\n  return (\n    <SyntaxHighlighterWrapper>\n      <Icons.Copy\n        tabIndex={0}\n        role=\"button\"\n        onClick={e => {\n          e.preventDefault();\n          e.currentTarget.blur();\n          copyToClipboard(children);\n        }}\n      />\n      <SyntaxHighlighter style={github} {...syntaxHighlighterProps}>\n        {children}\n      </SyntaxHighlighter>\n    </SyntaxHighlighterWrapper>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\n\ntype BaseQueryObject = {\n  id: number;\n};\n\nexport default function useQueryPreviewState<D extends BaseQueryObject = any>({\n  queries,\n  fetchData,\n  currentQueryId,\n}: {\n  queries: D[];\n  fetchData: (id: number) => any;\n  currentQueryId: number;\n}) {\n  const index = queries.findIndex(query => query.id === currentQueryId);\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const [disablePrevious, setDisablePrevious] = useState(false);\n  const [disableNext, setDisableNext] = useState(false);\n\n  function checkIndex() {\n    setDisablePrevious(currentIndex === 0);\n    setDisableNext(currentIndex === queries.length - 1);\n  }\n\n  function handleDataChange(previous: boolean) {\n    const offset = previous ? -1 : 1;\n    const index = currentIndex + offset;\n    if (index >= 0 && index < queries.length) {\n      fetchData(queries[index].id);\n      setCurrentIndex(index);\n      checkIndex();\n    }\n  }\n\n  function handleKeyPress(ev: any) {\n    if (currentIndex >= 0 && currentIndex < queries.length) {\n      if (ev.key === 'ArrowDown' || ev.key === 'k') {\n        ev.preventDefault();\n        handleDataChange(false);\n      } else if (ev.key === 'ArrowUp' || ev.key === 'j') {\n        ev.preventDefault();\n        handleDataChange(true);\n      }\n    }\n  }\n\n  useEffect(() => {\n    checkIndex();\n  });\n\n  return {\n    handleKeyPress,\n    handleDataChange,\n    disablePrevious,\n    disableNext,\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FunctionComponent } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport Button from 'src/components/Button';\nimport SyntaxHighlighterCopy from 'src/features/queries/SyntaxHighlighterCopy';\nimport withToasts, {\n  ToastProps,\n} from 'src/components/MessageToasts/withToasts';\nimport useQueryPreviewState from 'src/features/queries/hooks/useQueryPreviewState';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  padding: 4px 0 16px 0;\n`;\n\nconst StyledModal = styled(Modal)`\n  .ant-modal-content {\n  }\n\n  .ant-modal-body {\n    padding: 24px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ntype SavedQueryObject = {\n  id: number;\n  label: string;\n  sql: string;\n};\n\ninterface SavedQueryPreviewModalProps extends ToastProps {\n  fetchData: (id: number) => {};\n  onHide: () => void;\n  openInSqlLab: (id: number, openInNewWindow: boolean) => {};\n  queries: Array<SavedQueryObject>;\n  savedQuery: SavedQueryObject;\n  show: boolean;\n}\n\nconst SavedQueryPreviewModal: FunctionComponent<\n  SavedQueryPreviewModalProps\n> = ({\n  fetchData,\n  onHide,\n  openInSqlLab,\n  queries,\n  savedQuery,\n  show,\n  addDangerToast,\n  addSuccessToast,\n}) => {\n  const { handleKeyPress, handleDataChange, disablePrevious, disableNext } =\n    useQueryPreviewState<SavedQueryObject>({\n      queries,\n      currentQueryId: savedQuery.id,\n      fetchData,\n    });\n\n  return (\n    <div role=\"none\" onKeyUp={handleKeyPress}>\n      <StyledModal\n        onHide={onHide}\n        show={show}\n        title={t('Query preview')}\n        footer={\n          <>\n            <Button\n              data-test=\"previous-saved-query\"\n              key=\"previous-saved-query\"\n              disabled={disablePrevious}\n              onClick={() => handleDataChange(true)}\n            >\n              {t('Previous')}\n            </Button>\n            <Button\n              data-test=\"next-saved-query\"\n              key=\"next-saved-query\"\n              disabled={disableNext}\n              onClick={() => handleDataChange(false)}\n            >\n              {t('Next')}\n            </Button>\n            <Button\n              data-test=\"open-in-sql-lab\"\n              key=\"open-in-sql-lab\"\n              buttonStyle=\"primary\"\n              onClick={({ metaKey }) =>\n                openInSqlLab(savedQuery.id, Boolean(metaKey))\n              }\n            >\n              {t('Open in SQL Lab')}\n            </Button>\n          </>\n        }\n      >\n        <QueryTitle>{t('Query name')}</QueryTitle>\n        <QueryLabel>{savedQuery.label}</QueryLabel>\n        <SyntaxHighlighterCopy\n          language=\"sql\"\n          addDangerToast={addDangerToast}\n          addSuccessToast={addSuccessToast}\n        >\n          {savedQuery.sql || ''}\n        </SyntaxHighlighterCopy>\n      </StyledModal>\n    </div>\n  );\n};\n\nexport default withToasts(SavedQueryPreviewModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  FeatureFlag,\n  isFeatureEnabled,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport { useCallback, useMemo, useState, MouseEvent } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport rison from 'rison';\nimport {\n  createErrorHandler,\n  createFetchDistinct,\n  createFetchRelated,\n} from 'src/views/CRUD/utils';\nimport { useSelector } from 'react-redux';\nimport Popover from 'src/components/Popover';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport handleResourceExport from 'src/utils/export';\nimport SubMenu, { ButtonProps, SubMenuProps } from 'src/features/home/SubMenu';\nimport ListView, {\n  FilterOperator,\n  Filters,\n  ListViewProps,\n} from 'src/components/ListView';\nimport Loading from 'src/components/Loading';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport { TagsList } from 'src/components/Tags';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { commonMenuData } from 'src/features/home/commonMenuData';\nimport { QueryObjectColumns, SavedQueryObject } from 'src/views/CRUD/types';\nimport copyTextToClipboard from 'src/utils/copy';\nimport Tag from 'src/types/TagType';\nimport ImportModelsModal from 'src/components/ImportModal/index';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { loadTags } from 'src/components/Tags/utils';\nimport Icons from 'src/components/Icons';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport SavedQueryPreviewModal from 'src/features/queries/SavedQueryPreviewModal';\nimport { findPermission } from 'src/utils/findPermission';\n\nconst PAGE_SIZE = 25;\nconst PASSWORDS_NEEDED_MESSAGE = t(\n  'The passwords for the databases below are needed in order to ' +\n    'import them together with the saved queries. Please note that the ' +\n    '\"Secure Extra\" and \"Certificate\" sections of ' +\n    'the database configuration are not present in export files, and ' +\n    'should be added manually after the import if they are needed.',\n);\nconst CONFIRM_OVERWRITE_MESSAGE = t(\n  'You are importing one or more saved queries that already exist. ' +\n    'Overwriting might cause you to lose some of your work. Are you ' +\n    'sure you want to overwrite?',\n);\n\ninterface SavedQueryListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nfunction SavedQueryList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: SavedQueryListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: queryCount,\n      resourceCollection: queries,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    toggleBulkSelect,\n    refreshData,\n  } = useListViewResource<SavedQueryObject>(\n    'saved_query',\n    t('Saved queries'),\n    addDangerToast,\n  );\n  const { roles } = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const canReadTag = findPermission('can_read', 'Tag', roles);\n  const [queryCurrentlyDeleting, setQueryCurrentlyDeleting] =\n    useState<SavedQueryObject | null>(null);\n  const [savedQueryCurrentlyPreviewing, setSavedQueryCurrentlyPreviewing] =\n    useState<SavedQueryObject | null>(null);\n  const [importingSavedQuery, showImportModal] = useState<boolean>(false);\n  const [passwordFields, setPasswordFields] = useState<string[]>([]);\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const [sshTunnelPasswordFields, setSSHTunnelPasswordFields] = useState<\n    string[]\n  >([]);\n  const [sshTunnelPrivateKeyFields, setSSHTunnelPrivateKeyFields] = useState<\n    string[]\n  >([]);\n  const [\n    sshTunnelPrivateKeyPasswordFields,\n    setSSHTunnelPrivateKeyPasswordFields,\n  ] = useState<string[]>([]);\n  const history = useHistory();\n\n  const openSavedQueryImportModal = () => {\n    showImportModal(true);\n  };\n\n  const closeSavedQueryImportModal = () => {\n    showImportModal(false);\n  };\n\n  const handleSavedQueryImport = () => {\n    showImportModal(false);\n    refreshData();\n    addSuccessToast(t('Query imported'));\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n\n  const handleSavedQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/saved_query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setSavedQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Saved queries',\n    ...commonMenuData,\n  };\n\n  const subMenuButtons: Array<ButtonProps> = [];\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  subMenuButtons.push({\n    name: (\n      <Link to=\"/sqllab?new=true\">\n        <i className=\"fa fa-plus\" /> {t('Query')}\n      </Link>\n    ),\n    buttonStyle: 'primary',\n  });\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <Tooltip\n          id=\"import-tooltip\"\n          title={t('Import queries')}\n          placement=\"bottomRight\"\n          data-test=\"import-tooltip-test\"\n        >\n          <Icons.Import data-test=\"import-icon\" />\n        </Tooltip>\n      ),\n      buttonStyle: 'link',\n      onClick: openSavedQueryImportModal,\n      'data-test': 'import-button',\n    });\n  }\n\n  menuData.buttons = subMenuButtons;\n\n  // Action methods\n  const openInSqlLab = (id: number, openInNewWindow: boolean) => {\n    if (openInNewWindow) {\n      window.open(`/sqllab?savedQueryId=${id}`);\n    } else {\n      history.push(`/sqllab?savedQueryId=${id}`);\n    }\n  };\n\n  const copyQueryLink = useCallback(\n    (id: number) => {\n      copyTextToClipboard(() =>\n        Promise.resolve(`${window.location.origin}/sqllab?savedQueryId=${id}`),\n      )\n        .then(() => {\n          addSuccessToast(t('Link Copied!'));\n        })\n        .catch(() => {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        });\n    },\n    [addDangerToast, addSuccessToast],\n  );\n\n  const handleQueryDelete = ({ id, label }: SavedQueryObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setQueryCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', label));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', label, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkSavedQueryExport = (\n    savedQueriesToExport: SavedQueryObject[],\n  ) => {\n    const ids = savedQueriesToExport.map(({ id }) => id);\n    handleResourceExport('saved_query', ids, () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  };\n\n  const handleBulkQueryDelete = (queriesToDelete: SavedQueryObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/saved_query/?q=${rison.encode(\n        queriesToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected queries: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'label',\n        Header: t('Name'),\n      },\n      {\n        accessor: 'description',\n        Header: t('Description'),\n      },\n      {\n        accessor: 'database.database_name',\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: 'database',\n        hidden: true,\n        disableSortBy: true,\n      },\n      {\n        accessor: 'schema',\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names?.shift() || '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: 'sql_tables',\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        Cell: ({\n          row: {\n            original: { tags = [] },\n          },\n        }: any) => (\n          // Only show custom type tags\n          <TagsList tags={tags.filter((tag: Tag) => tag.type === 1)} />\n        ),\n        Header: t('Tags'),\n        accessor: 'tags',\n        disableSortBy: true,\n        hidden: !isFeatureEnabled(FeatureFlag.TaggingSystem),\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_by: changedBy,\n              changed_on_delta_humanized: changedOn,\n            },\n          },\n        }: any) => <ModifiedInfo user={changedBy} date={changedOn} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handlePreview = () => {\n            handleSavedQueryPreview(original.id);\n          };\n          const handleEdit = ({ metaKey }: MouseEvent) =>\n            openInSqlLab(original.id, Boolean(metaKey));\n          const handleCopy = () => copyQueryLink(original.id);\n          const handleExport = () => handleBulkSavedQueryExport([original]);\n          const handleDelete = () => setQueryCurrentlyDeleting(original);\n\n          const actions = [\n            {\n              label: 'preview-action',\n              tooltip: t('Query preview'),\n              placement: 'bottom',\n              icon: 'Binoculars',\n              onClick: handlePreview,\n            },\n            canEdit && {\n              label: 'edit-action',\n              tooltip: t('Edit query'),\n              placement: 'bottom',\n              icon: 'Edit',\n              onClick: handleEdit,\n            },\n            {\n              label: 'copy-action',\n              tooltip: t('Copy query URL'),\n              placement: 'bottom',\n              icon: 'Copy',\n              onClick: handleCopy,\n            },\n            canExport && {\n              label: 'export-action',\n              tooltip: t('Export query'),\n              placement: 'bottom',\n              icon: 'Share',\n              onClick: handleExport,\n            },\n            canDelete && {\n              label: 'delete-action',\n              tooltip: t('Delete query'),\n              placement: 'bottom',\n              icon: 'Trash',\n              onClick: handleDelete,\n            },\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.ChangedBy,\n        hidden: true,\n      },\n    ],\n    [canDelete, canEdit, canExport, copyQueryLink, handleSavedQueryPreview],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Search'),\n        id: 'label',\n        key: 'search',\n        input: 'search',\n        operator: FilterOperator.AllText,\n        toolTipDescription:\n          'Searches all text fields: Name, Description, Database & Schema',\n      },\n      {\n        Header: t('Database'),\n        key: 'database',\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'saved_query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t(\n                'An error occurred while fetching dataset datasource values: %s',\n                errMsg,\n              ),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Schema'),\n        id: 'schema',\n        key: 'schema',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'saved_query',\n          'schema',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      ...((isFeatureEnabled(FeatureFlag.TaggingSystem) && canReadTag\n        ? [\n            {\n              Header: t('Tag'),\n              id: 'tags',\n              key: 'tags',\n              input: 'select',\n              operator: FilterOperator.SavedQueryTagById,\n              fetchSelects: loadTags,\n            },\n          ]\n        : []) as Filters),\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'saved_query',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyDeleting && (\n        <DeleteModal\n          description={t(\n            'This action will permanently delete the saved query.',\n          )}\n          onConfirm={() => {\n            if (queryCurrentlyDeleting) {\n              handleQueryDelete(queryCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setQueryCurrentlyDeleting(null)}\n          open\n          title={t('Delete Query?')}\n        />\n      )}\n      {savedQueryCurrentlyPreviewing && (\n        <SavedQueryPreviewModal\n          fetchData={handleSavedQueryPreview}\n          onHide={() => setSavedQueryCurrentlyPreviewing(null)}\n          savedQuery={savedQueryCurrentlyPreviewing}\n          queries={queries}\n          openInSqlLab={openInSqlLab}\n          show\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected queries?')}\n        onConfirm={handleBulkQueryDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = [];\n          if (canDelete) {\n            bulkActions.push({\n              key: 'delete',\n              name: t('Delete'),\n              onSelect: confirmDelete,\n              type: 'danger',\n            });\n          }\n          if (canExport) {\n            bulkActions.push({\n              key: 'export',\n              name: t('Export'),\n              type: 'primary',\n              onSelect: handleBulkSavedQueryExport,\n            });\n          }\n          return (\n            <ListView<SavedQueryObject>\n              className=\"saved_query-list-view\"\n              columns={columns}\n              count={queryCount}\n              data={queries}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              addSuccessToast={addSuccessToast}\n              addDangerToast={addDangerToast}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              highlightRowId={savedQueryCurrentlyPreviewing?.id}\n              enableBulkTag\n              bulkTagResourceName=\"query\"\n              refreshData={refreshData}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n\n      <ImportModelsModal\n        resourceName=\"saved_query\"\n        resourceLabel={t('queries')}\n        passwordsNeededMessage={PASSWORDS_NEEDED_MESSAGE}\n        confirmOverwriteMessage={CONFIRM_OVERWRITE_MESSAGE}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onModelImport={handleSavedQueryImport}\n        show={importingSavedQuery}\n        onHide={closeSavedQueryImportModal}\n        passwordFields={passwordFields}\n        setPasswordFields={setPasswordFields}\n        sshTunnelPasswordFields={sshTunnelPasswordFields}\n        setSSHTunnelPasswordFields={setSSHTunnelPasswordFields}\n        sshTunnelPrivateKeyFields={sshTunnelPrivateKeyFields}\n        setSSHTunnelPrivateKeyFields={setSSHTunnelPrivateKeyFields}\n        sshTunnelPrivateKeyPasswordFields={sshTunnelPrivateKeyPasswordFields}\n        setSSHTunnelPrivateKeyPasswordFields={\n          setSSHTunnelPrivateKeyPasswordFields\n        }\n      />\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(SavedQueryList);\n"],"names":["ModifiedInfo","user","date","dateSpan","_jsx","className","children","userName","getOwnerName","title","t","Tooltip","placement","HelperMessage","styled","div","theme","colors","grayscale","base","typography","sizes","s","StyledInputContainer","gridUnit","light1","light2","ImportModelsModal","resourceName","resourceLabel","passwordsNeededMessage","confirmOverwriteMessage","onModelImport","show","onHide","passwordFields","setPasswordFields","sshTunnelPasswordFields","setSSHTunnelPasswordFields","sshTunnelPrivateKeyFields","setSSHTunnelPrivateKeyFields","sshTunnelPrivateKeyPasswordFields","setSSHTunnelPrivateKeyPasswordFields","isHidden","setIsHidden","useState","passwords","setPasswords","needsOverwriteConfirm","setNeedsOverwriteConfirm","confirmedOverwrite","setConfirmedOverwrite","fileList","setFileList","importingModel","setImportingModel","errorMessage","setErrorMessage","sshTunnelPasswords","setSSHTunnelPasswords","sshTunnelPrivateKeys","setSSHTunnelPrivateKeys","sshTunnelPrivateKeyPasswords","setSSHTunnelPrivateKeyPasswords","clearModal","state","alreadyExists","passwordsNeeded","sshPasswordNeeded","sshPrivateKeyNeeded","sshPrivateKeyPasswordNeeded","importResource","useImportResource","msg","useEffect","length","_jsxs","Modal","name","disablePrimaryButton","onHandledPrimaryAction","onUpload","_fileList$","originFileObj","File","then","result","hide","primaryButtonName","primaryButtonType","width","Upload","id","accept","onChange","info","file","status","onRemove","removedFile","filter","uid","customRequest","disabled","Button","loading","ErrorAlert","showDbInstallInstructions","renderPasswordFields","files","Set","_Fragment","map","fileName","indexOf","slice","autoComplete","type","value","event","target","_event$currentTarget$","_event$currentTarget","targetValue","currentTarget","toUpperCase","StyledActions","span","primary","ActionWrapper","ActionsBar","actions","action","index","ActionIcon","Icons","icon","tooltip","label","role","tabIndex","onClick","Popover","props","AntdPopover","commonMenuData","tabs","url","usesRouter","SyntaxHighlighter","registerLanguage","sqlSyntax","markdownSyntax","htmlSyntax","jsonSyntax","SyntaxHighlighterWrapper","SyntaxHighlighterCopy","addDangerToast","addSuccessToast","syntaxHighlighterProps","Copy","e","textToCopy","preventDefault","blur","copyTextToClipboard","Promise","resolve","catch","style","github","useQueryPreviewState","queries","fetchData","currentQueryId","findIndex","query","currentIndex","setCurrentIndex","disablePrevious","setDisablePrevious","disableNext","setDisableNext","checkIndex","handleDataChange","previous","handleKeyPress","ev","key","QueryTitle","secondary","QueryLabel","dark2","m","StyledModal","xs","weights","normal","l","withToasts","SavedQueryPreviewModal","openInSqlLab","savedQuery","onKeyUp","footer","buttonStyle","metaKey","Boolean","language","sql","PASSWORDS_NEEDED_MESSAGE","CONFIRM_OVERWRITE_MESSAGE","StyledTableLabel","StyledPopoverItem","resourceCount","queryCount","resourceCollection","bulkSelectEnabled","hasPerm","toggleBulkSelect","refreshData","useListViewResource","roles","useSelector","canReadTag","findPermission","queryCurrentlyDeleting","setQueryCurrentlyDeleting","savedQueryCurrentlyPreviewing","setSavedQueryCurrentlyPreviewing","importingSavedQuery","showImportModal","preparingExport","setPreparingExport","history","useHistory","canCreate","canEdit","canDelete","canExport","handleSavedQueryPreview","useCallback","SupersetClient","get","endpoint","json","createErrorHandler","errMsg","menuData","activeChild","subMenuButtons","push","Link","to","Import","openSavedQueryImportModal","buttons","openInNewWindow","window","open","copyQueryLink","location","origin","handleBulkSavedQueryExport","savedQueriesToExport","ids","handleResourceExport","initialSort","desc","columns","useMemo","accessor","Header","size","hidden","disableSortBy","Cell","row","original","sql_tables","tables","names","table","main","shift","trigger","content","tags","TagsList","tag","isFeatureEnabled","FeatureFlag","TaggingSystem","changed_by","changedBy","changed_on_delta_humanized","changedOn","handlePreview","handleEdit","handleCopy","handleExport","handleDelete","item","QueryObjectColumns","ChangedBy","filters","input","operator","FilterOperator","AllText","toolTipDescription","RelationOneMany","unfilteredLabel","fetchSelects","createFetchRelated","paginate","Equals","createFetchDistinct","SavedQueryTagById","loadTags","SubMenu","DeleteModal","description","onConfirm","handleQueryDelete","delete","ConfirmStatusChange","queriesToDelete","rison","message","confirmDelete","bulkActions","onSelect","ListView","count","data","pageSize","disableBulkSelect","highlightRowId","enableBulkTag","bulkTagResourceName","handleSavedQueryImport","closeSavedQueryImportModal","Loading"],"sourceRoot":""}