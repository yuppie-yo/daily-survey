{"version":3,"file":"4a0d1ba168919516a59f.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/plugin-chart-echarts/src/MixedTimeseries/EchartsMixedTimeseries.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback } from 'react';\nimport {\n  AxisType,\n  BinaryQueryObjectFilterClause,\n  DTTM_ALIAS,\n  DataRecordValue,\n  getColumnLabel,\n  getNumberFormatter,\n  getTimeFormatter,\n} from '@superset-ui/core';\nimport { EchartsMixedTimeseriesChartTransformedProps } from './types';\nimport Echart from '../components/Echart';\nimport { EventHandlers } from '../types';\nimport { formatSeriesName } from '../utils/series';\n\nexport default function EchartsMixedTimeseries({\n  height,\n  width,\n  echartOptions,\n  setDataMask,\n  labelMap,\n  labelMapB,\n  groupby,\n  groupbyB,\n  selectedValues,\n  formData,\n  emitCrossFilters,\n  seriesBreakdown,\n  onContextMenu,\n  onFocusedSeries,\n  xValueFormatter,\n  xAxis,\n  refs,\n  coltypeMapping,\n}: EchartsMixedTimeseriesChartTransformedProps) {\n  const isFirstQuery = useCallback(\n    (seriesIndex: number) => seriesIndex < seriesBreakdown,\n    [seriesBreakdown],\n  );\n\n  const getCrossFilterDataMask = useCallback(\n    (seriesName, seriesIndex) => {\n      const selected: string[] = Object.values(selectedValues || {});\n      let values: string[];\n      if (selected.includes(seriesName)) {\n        values = selected.filter(v => v !== seriesName);\n      } else {\n        values = [seriesName];\n      }\n\n      const currentGroupBy = isFirstQuery(seriesIndex) ? groupby : groupbyB;\n      const currentLabelMap = isFirstQuery(seriesIndex) ? labelMap : labelMapB;\n      const groupbyValues = values\n        .map(value => currentLabelMap?.[value])\n        .filter(value => !!value);\n\n      return {\n        dataMask: {\n          extraFormData: {\n            // @ts-ignore\n            filters:\n              values.length === 0\n                ? []\n                : [\n                    ...currentGroupBy.map((col, idx) => {\n                      const val: DataRecordValue[] = groupbyValues.map(\n                        v => v[idx],\n                      );\n                      if (val === null || val === undefined)\n                        return {\n                          col,\n                          op: 'IS NULL' as const,\n                        };\n                      return {\n                        col,\n                        op: 'IN' as const,\n                        val: val as (string | number | boolean)[],\n                      };\n                    }),\n                  ],\n          },\n          filterState: {\n            value: !groupbyValues.length ? null : groupbyValues,\n            selectedValues: values.length ? values : null,\n          },\n        },\n        isCurrentValueSelected: selected.includes(seriesName),\n      };\n    },\n    [groupby, groupbyB, isFirstQuery, labelMap, labelMapB, selectedValues],\n  );\n\n  const handleChange = useCallback(\n    (seriesName: string, seriesIndex: number) => {\n      const isFirst = isFirstQuery(seriesIndex);\n      if (\n        !emitCrossFilters ||\n        (isFirst && groupby.length === 0) ||\n        (!isFirst && groupbyB.length === 0)\n      ) {\n        return;\n      }\n\n      setDataMask(getCrossFilterDataMask(seriesName, seriesIndex).dataMask);\n    },\n    [\n      isFirstQuery,\n      emitCrossFilters,\n      groupby.length,\n      groupbyB.length,\n      setDataMask,\n      getCrossFilterDataMask,\n    ],\n  );\n\n  const eventHandlers: EventHandlers = {\n    click: props => {\n      const { seriesName, seriesIndex } = props;\n      handleChange(seriesName, seriesIndex);\n    },\n    mouseout: () => {\n      onFocusedSeries(null);\n    },\n    mouseover: params => {\n      onFocusedSeries(params.seriesName);\n    },\n    contextmenu: async eventParams => {\n      if (onContextMenu) {\n        eventParams.event.stop();\n        const { data, seriesName, seriesIndex } = eventParams;\n        const pointerEvent = eventParams.event.event;\n        const drillToDetailFilters: BinaryQueryObjectFilterClause[] = [];\n        const drillByFilters: BinaryQueryObjectFilterClause[] = [];\n        const isFirst = isFirstQuery(seriesIndex);\n        const values = [\n          ...(eventParams.name ? [eventParams.name] : []),\n          ...((isFirst ? labelMap : labelMapB)[eventParams.seriesName] || []),\n        ];\n        if (data && xAxis.type === AxisType.Time) {\n          drillToDetailFilters.push({\n            col:\n              xAxis.label === DTTM_ALIAS\n                ? formData.granularitySqla\n                : xAxis.label,\n            grain: formData.timeGrainSqla,\n            op: '==',\n            val: data[0],\n            formattedVal: xValueFormatter(data[0]),\n          });\n        }\n        [\n          ...(data && xAxis.type === AxisType.Category ? [xAxis.label] : []),\n          ...(isFirst ? formData.groupby : formData.groupbyB),\n        ].forEach((dimension, i) =>\n          drillToDetailFilters.push({\n            col: dimension,\n            op: '==',\n            val: values[i],\n            formattedVal: String(values[i]),\n          }),\n        );\n\n        [...(isFirst ? formData.groupby : formData.groupbyB)].forEach(\n          (dimension, i) =>\n            drillByFilters.push({\n              col: dimension,\n              op: '==',\n              val: values[i],\n              formattedVal: formatSeriesName(values[i], {\n                timeFormatter: getTimeFormatter(formData.dateFormat),\n                numberFormatter: getNumberFormatter(formData.numberFormat),\n                coltype: coltypeMapping?.[getColumnLabel(dimension)],\n              }),\n            }),\n        );\n        const hasCrossFilter =\n          (isFirst && groupby.length > 0) || (!isFirst && groupbyB.length > 0);\n\n        onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n          drillToDetail: drillToDetailFilters,\n          crossFilter: hasCrossFilter\n            ? getCrossFilterDataMask(seriesName, seriesIndex)\n            : undefined,\n          drillBy: {\n            filters: drillByFilters,\n            groupbyFieldName: isFirst ? 'groupby' : 'groupby_b',\n            adhocFilterFieldName: isFirst ? 'adhoc_filters' : 'adhoc_filters_b',\n          },\n        });\n      }\n    },\n  };\n\n  return (\n    <Echart\n      refs={refs}\n      height={height}\n      width={width}\n      echartOptions={echartOptions}\n      eventHandlers={eventHandlers}\n      selectedValues={selectedValues}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useCallback,\n  Ref,\n} from 'react';\n\nimport { styled } from '@superset-ui/core';\nimport { use, init, EChartsType } from 'echarts/core';\nimport {\n  SankeyChart,\n  PieChart,\n  BarChart,\n  FunnelChart,\n  GaugeChart,\n  GraphChart,\n  LineChart,\n  ScatterChart,\n  RadarChart,\n  BoxplotChart,\n  TreeChart,\n  TreemapChart,\n  HeatmapChart,\n  SunburstChart,\n} from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport {\n  TooltipComponent,\n  GridComponent,\n  VisualMapComponent,\n  LegendComponent,\n  DataZoomComponent,\n  ToolboxComponent,\n  GraphicComponent,\n  AriaComponent,\n  MarkAreaComponent,\n  MarkLineComponent,\n} from 'echarts/components';\nimport { LabelLayout } from 'echarts/features';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nuse([\n  CanvasRenderer,\n  BarChart,\n  BoxplotChart,\n  FunnelChart,\n  GaugeChart,\n  GraphChart,\n  HeatmapChart,\n  LineChart,\n  PieChart,\n  RadarChart,\n  SankeyChart,\n  ScatterChart,\n  SunburstChart,\n  TreeChart,\n  TreemapChart,\n  AriaComponent,\n  DataZoomComponent,\n  GraphicComponent,\n  GridComponent,\n  MarkAreaComponent,\n  MarkLineComponent,\n  LegendComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  VisualMapComponent,\n  LabelLayout,\n]);\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n    refs,\n  }: EchartsProps,\n  ref: Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef<EChartsType>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (chartRef.current) {\n        chartRef.current.resize({ width, height });\n      }\n    },\n    [],\n  );\n\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => chartRef.current?.dispose();\n  }, []);\n\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"],"names":["EchartsMixedTimeseries","height","width","echartOptions","setDataMask","labelMap","labelMapB","groupby","groupbyB","selectedValues","formData","emitCrossFilters","seriesBreakdown","onContextMenu","onFocusedSeries","xValueFormatter","xAxis","refs","coltypeMapping","isFirstQuery","useCallback","seriesIndex","getCrossFilterDataMask","seriesName","selected","Object","values","includes","filter","v","currentGroupBy","currentLabelMap","groupbyValues","map","value","dataMask","extraFormData","filters","length","col","idx","val","op","filterState","isCurrentValueSelected","handleChange","isFirst","eventHandlers","click","props","mouseout","mouseover","params","contextmenu","async","eventParams","event","stop","data","pointerEvent","drillToDetailFilters","drillByFilters","name","type","AxisType","Time","push","label","DTTM_ALIAS","granularitySqla","grain","timeGrainSqla","formattedVal","Category","forEach","dimension","i","String","formatSeriesName","timeFormatter","getTimeFormatter","dateFormat","numberFormatter","getNumberFormatter","numberFormat","coltype","getColumnLabel","hasCrossFilter","clientX","clientY","drillToDetail","crossFilter","undefined","drillBy","groupbyFieldName","adhocFilterFieldName","_jsx","Echart","Styles","styled","div","zrEventHandlers","ref","divRef","useRef","chartRef","currentSelection","useMemo","keys","previousSelection","useImperativeHandle","getEchartInstance","current","useEffect","init","entries","handler","_chartRef$current","_chartRef$current2","off","on","_chartRef$current3","_chartRef$current4","getZr","setOption","dispatchAction","dataIndex","handleSizeChange","resize","_chartRef$current5","dispose","useLayoutEffect","use","CanvasRenderer","BarChart","BoxplotChart","FunnelChart","GaugeChart","GraphChart","HeatmapChart","LineChart","PieChart","RadarChart","SankeyChart","ScatterChart","SunburstChart","TreeChart","TreemapChart","AriaComponent","DataZoomComponent","GraphicComponent","GridComponent","MarkAreaComponent","MarkLineComponent","LegendComponent","ToolboxComponent","TooltipComponent","VisualMapComponent","LabelLayout","forwardRef"],"sourceRoot":""}