{"version":3,"file":"083f726dbe041f51a988.chunk.js","mappings":"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","sources":["webpack://superset/./packages/superset-ui-core/src/chart/components/SuperChartCore.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/NoResultsComponent.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/SuperChart.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/FallbackComponent.tsx","webpack://superset/./packages/superset-ui-core/src/chart/components/createLoadableRenderer.ts","webpack://superset/./packages/superset-ui-core/src/chart/models/ChartProps.ts","webpack://superset/./packages/superset-ui-core/src/dimension/parseLength.ts","webpack://superset/./packages/superset-ui-core/src/hooks/useChangeEffect/useChangeEffect.ts","webpack://superset/./packages/superset-ui-core/src/utils/convertKeysToCamelCase.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* eslint-disable react/jsx-sort-default-props */\nimport { PureComponent } from 'react';\nimport { t } from '@superset-ui/core';\nimport { createSelector } from 'reselect';\nimport getChartComponentRegistry from '../registries/ChartComponentRegistrySingleton';\nimport getChartTransformPropsRegistry from '../registries/ChartTransformPropsRegistrySingleton';\nimport ChartProps from '../models/ChartProps';\nimport createLoadableRenderer from './createLoadableRenderer';\nimport { ChartType } from '../models/ChartPlugin';\nimport {\n  PreTransformProps,\n  TransformProps,\n  PostTransformProps,\n} from '../types/TransformFunction';\nimport { HandlerFunction } from '../types/Base';\n\nfunction IDENTITY<T>(x: T) {\n  return x;\n}\n\nconst EMPTY = () => null;\n\nconst defaultProps = {\n  id: '',\n  className: '',\n  preTransformProps: IDENTITY,\n  overrideTransformProps: undefined,\n  postTransformProps: IDENTITY,\n  onRenderSuccess() {},\n  onRenderFailure() {},\n};\n\ninterface LoadingProps {\n  error: { toString(): string };\n}\n\ninterface LoadedModules {\n  Chart: ChartType;\n  transformProps: TransformProps;\n}\n\ninterface RenderProps {\n  chartProps: ChartProps;\n  preTransformProps?: PreTransformProps;\n  postTransformProps?: PostTransformProps;\n}\n\nconst BLANK_CHART_PROPS = new ChartProps();\n\nexport type Props = {\n  id?: string;\n  className?: string;\n  chartProps?: ChartProps | null;\n  chartType: string;\n  preTransformProps?: PreTransformProps;\n  overrideTransformProps?: TransformProps;\n  postTransformProps?: PostTransformProps;\n  onRenderSuccess?: HandlerFunction;\n  onRenderFailure?: HandlerFunction;\n};\n\nexport default class SuperChartCore extends PureComponent<Props, {}> {\n  /**\n   * The HTML element that wraps all chart content\n   */\n  container?: HTMLElement | null;\n\n  /**\n   * memoized function so it will not recompute\n   * and return previous value\n   * unless one of\n   * - preTransformProps\n   * - transformProps\n   * - postTransformProps\n   * - chartProps\n   * is changed.\n   */\n  processChartProps = createSelector(\n    [\n      (input: {\n        chartProps: ChartProps;\n        preTransformProps?: PreTransformProps;\n        transformProps?: TransformProps;\n        postTransformProps?: PostTransformProps;\n      }) => input.chartProps,\n      input => input.preTransformProps,\n      input => input.transformProps,\n      input => input.postTransformProps,\n    ],\n    (chartProps, pre = IDENTITY, transform = IDENTITY, post = IDENTITY) =>\n      post(transform(pre(chartProps))),\n  );\n\n  /**\n   * memoized function so it will not recompute\n   * and return previous value\n   * unless one of\n   * - chartType\n   * - overrideTransformProps\n   * is changed.\n   */\n  private createLoadableRenderer = createSelector(\n    [\n      (input: { chartType: string; overrideTransformProps?: TransformProps }) =>\n        input.chartType,\n      input => input.overrideTransformProps,\n    ],\n    (chartType, overrideTransformProps) => {\n      if (chartType) {\n        const Renderer = createLoadableRenderer({\n          loader: {\n            Chart: () => getChartComponentRegistry().getAsPromise(chartType),\n            transformProps: overrideTransformProps\n              ? () => Promise.resolve(overrideTransformProps)\n              : () => getChartTransformPropsRegistry().getAsPromise(chartType),\n          },\n          loading: (loadingProps: LoadingProps) =>\n            this.renderLoading(loadingProps, chartType),\n          render: this.renderChart,\n        });\n\n        // Trigger preloading.\n        Renderer.preload();\n\n        return Renderer;\n      }\n\n      return EMPTY;\n    },\n  );\n\n  static defaultProps = defaultProps;\n\n  private renderChart = (loaded: LoadedModules, props: RenderProps) => {\n    const { Chart, transformProps } = loaded;\n    const { chartProps, preTransformProps, postTransformProps } = props;\n\n    return (\n      <Chart\n        {...this.processChartProps({\n          chartProps,\n          preTransformProps,\n          transformProps,\n          postTransformProps,\n        })}\n      />\n    );\n  };\n\n  private renderLoading = (loadingProps: LoadingProps, chartType: string) => {\n    const { error } = loadingProps;\n\n    if (error) {\n      return (\n        <div className=\"alert alert-warning\" role=\"alert\">\n          <strong>{t('ERROR')}</strong>&nbsp;\n          <code>chartType=&quot;{chartType}&quot;</code> &mdash;\n          {error.toString()}\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  private setRef = (container: HTMLElement | null) => {\n    this.container = container;\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      preTransformProps,\n      postTransformProps,\n      chartProps = BLANK_CHART_PROPS,\n      onRenderSuccess,\n      onRenderFailure,\n    } = this.props;\n\n    // Create LoadableRenderer and start preloading\n    // the lazy-loaded Chart components\n    const Renderer = this.createLoadableRenderer(this.props);\n\n    // Do not render if chartProps is set to null.\n    // but the pre-loading has been started in this.createLoadableRenderer\n    // to prepare for rendering once chartProps becomes available.\n    if (chartProps === null) {\n      return null;\n    }\n\n    const containerProps: {\n      id?: string;\n      className?: string;\n    } = {};\n    if (id) {\n      containerProps.id = id;\n    }\n    if (className) {\n      containerProps.className = className;\n    }\n\n    return (\n      <div {...containerProps} ref={this.setRef}>\n        <Renderer\n          preTransformProps={preTransformProps}\n          postTransformProps={postTransformProps}\n          chartProps={chartProps}\n          onRenderSuccess={onRenderSuccess}\n          onRenderFailure={onRenderFailure}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { CSSProperties } from 'react';\nimport { css, styled } from '../../style';\nimport { t } from '../../translation';\n\nconst MESSAGE_STYLES: CSSProperties = { maxWidth: 800 };\nconst MIN_WIDTH_FOR_BODY = 250;\n\nconst Container = styled.div<{\n  width: number | string;\n  height: number | string;\n}>`\n  ${({ theme, width, height }) => css`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    height: ${height}px;\n    width: ${width}px;\n    padding: ${theme.gridUnit * 4}px;\n\n    & .no-results-title {\n      font-size: ${theme.typography.sizes.l}px;\n      font-weight: ${theme.typography.weights.bold};\n      padding-bottom: ${theme.gridUnit * 2};\n    }\n\n    & .no-results-body {\n      font-size: ${theme.typography.sizes.m}px;\n    }\n  `}\n`;\n\ntype Props = {\n  className?: string;\n  height: number | string;\n  id?: string;\n  width: number | string;\n};\n\nconst NoResultsComponent = ({ className, height, id, width }: Props) => {\n  // render the body if the width is auto/100% or greater than 250 pixels\n  const shouldRenderBody =\n    typeof width === 'string' || width > MIN_WIDTH_FOR_BODY;\n\n  const BODY_STRING = t(\n    'No results were returned for this query. If you expected results to be returned, ensure any filters are configured properly and the datasource contains data for the selected time range.',\n  );\n\n  return (\n    <Container\n      height={height}\n      width={width}\n      className={className}\n      id={id}\n      title={shouldRenderBody ? undefined : BODY_STRING}\n    >\n      <div style={MESSAGE_STYLES}>\n        <div className=\"no-results-title\">{t('No Results')}</div>\n        {shouldRenderBody && (\n          <div className=\"no-results-body\">{BODY_STRING}</div>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default NoResultsComponent;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  ReactNode,\n  RefObject,\n  ComponentType,\n  PureComponent,\n  Fragment,\n} from 'react';\n\nimport ErrorBoundary, {\n  ErrorBoundaryProps,\n  FallbackProps,\n} from 'react-error-boundary';\nimport { ParentSize } from '@vx/responsive';\nimport { createSelector } from 'reselect';\nimport { withTheme } from '@emotion/react';\nimport { parseLength, Dimension } from '../../dimension';\nimport getChartMetadataRegistry from '../registries/ChartMetadataRegistrySingleton';\nimport SuperChartCore, { Props as SuperChartCoreProps } from './SuperChartCore';\nimport DefaultFallbackComponent from './FallbackComponent';\nimport ChartProps, { ChartPropsConfig } from '../models/ChartProps';\nimport NoResultsComponent from './NoResultsComponent';\n\nconst defaultProps = {\n  FallbackComponent: DefaultFallbackComponent,\n  height: 400 as string | number,\n  width: '100%' as string | number,\n  enableNoResults: true,\n};\n\nexport type FallbackPropsWithDimension = FallbackProps & Partial<Dimension>;\n\nexport type WrapperProps = Dimension & {\n  children: ReactNode;\n};\n\nexport type Props = Omit<SuperChartCoreProps, 'chartProps'> &\n  Omit<ChartPropsConfig, 'width' | 'height'> & {\n    /**\n     * Set this to true to disable error boundary built-in in SuperChart\n     * and let the error propagate to upper level\n     * and handle by yourself\n     */\n    disableErrorBoundary?: boolean;\n    /** debounceTime to check for container resize */\n    debounceTime?: number;\n    /** enable \"No Results\" message if empty result set */\n    enableNoResults?: boolean;\n    /** Component to render when there are unexpected errors */\n    FallbackComponent?: ComponentType<FallbackPropsWithDimension>;\n    /** Event listener for unexpected errors from chart */\n    onErrorBoundary?: ErrorBoundaryProps['onError'];\n    /** Prop for form plugins using superchart */\n    showOverflow?: boolean;\n    /** Prop for popovercontainer ref */\n    parentRef?: RefObject<any>;\n    /** Prop for chart ref */\n    inputRef?: RefObject<any>;\n    /** Chart width */\n    height?: number | string;\n    /** Chart height */\n    width?: number | string;\n    /**\n     * Component to wrap the actual chart\n     * after the dynamic width and height are determined.\n     * This can be useful for handling tooltip z-index, etc.\n     * e.g. <div style={{ position: 'fixed' }} />\n     * You cannot just wrap this same component outside of SuperChart\n     * when using dynamic width or height\n     * because it will clash with auto-sizing.\n     */\n    Wrapper?: ComponentType<WrapperProps>;\n    /**\n     * Component to display when query returns no results.\n     * If not defined, NoResultsComponent is used\n     */\n    noResults?: ReactNode;\n    /**\n     * Determines is the context menu related to the chart is open\n     */\n    inContextMenu?: boolean;\n  };\n\ntype PropsWithDefault = Props & Readonly<typeof defaultProps>;\n\nclass SuperChart extends PureComponent<Props, {}> {\n  /**\n   * SuperChart's core\n   */\n  core?: SuperChartCore | null;\n\n  private createChartProps = ChartProps.createSelector();\n\n  private parseDimension = createSelector(\n    [\n      ({ width }: { width: string | number; height: string | number }) => width,\n      ({ height }) => height,\n    ],\n    (width, height) => {\n      // Parse them in case they are % or 'auto'\n      const widthInfo = parseLength(width);\n      const heightInfo = parseLength(height);\n      const boxHeight = heightInfo.isDynamic\n        ? `${heightInfo.multiplier * 100}%`\n        : heightInfo.value;\n      const boxWidth = widthInfo.isDynamic\n        ? `${widthInfo.multiplier * 100}%`\n        : widthInfo.value;\n      const style = {\n        height: boxHeight,\n        width: boxWidth,\n      };\n\n      // bounding box will ensure that when one dimension is not dynamic\n      // e.g. height = 300\n      // the auto size will be bound to that value instead of being 100% by default\n      // e.g. height: 300 instead of height: '100%'\n      const BoundingBox =\n        widthInfo.isDynamic &&\n        heightInfo.isDynamic &&\n        widthInfo.multiplier === 1 &&\n        heightInfo.multiplier === 1\n          ? Fragment\n          : ({ children }: { children: ReactNode }) => (\n              <div style={style}>{children}</div>\n            );\n\n      return { BoundingBox, heightInfo, widthInfo };\n    },\n  );\n\n  static defaultProps = defaultProps;\n\n  private setRef = (core: SuperChartCore | null) => {\n    this.core = core;\n  };\n\n  private getQueryCount = () =>\n    getChartMetadataRegistry().get(this.props.chartType)?.queryObjectCount ?? 1;\n\n  renderChart(width: number, height: number) {\n    const {\n      id,\n      className,\n      chartType,\n      preTransformProps,\n      overrideTransformProps,\n      postTransformProps,\n      onRenderSuccess,\n      onRenderFailure,\n      disableErrorBoundary,\n      FallbackComponent,\n      onErrorBoundary,\n      Wrapper,\n      queriesData,\n      enableNoResults,\n      noResults,\n      theme,\n      ...rest\n    } = this.props as PropsWithDefault;\n\n    const chartProps = this.createChartProps({\n      ...rest,\n      queriesData,\n      height,\n      width,\n      theme,\n    });\n\n    let chart;\n    // Render the no results component if the query data is null or empty\n    const noResultQueries =\n      enableNoResults &&\n      (!queriesData ||\n        queriesData\n          .slice(0, this.getQueryCount())\n          .every(\n            ({ data }) => !data || (Array.isArray(data) && data.length === 0),\n          ));\n    if (noResultQueries) {\n      chart = noResults || (\n        <NoResultsComponent\n          id={id}\n          className={className}\n          height={height}\n          width={width}\n        />\n      );\n    } else {\n      const chartWithoutWrapper = (\n        <SuperChartCore\n          ref={this.setRef}\n          id={id}\n          className={className}\n          chartType={chartType}\n          chartProps={chartProps}\n          preTransformProps={preTransformProps}\n          overrideTransformProps={overrideTransformProps}\n          postTransformProps={postTransformProps}\n          onRenderSuccess={onRenderSuccess}\n          onRenderFailure={onRenderFailure}\n        />\n      );\n      chart = Wrapper ? (\n        <Wrapper width={width} height={height}>\n          {chartWithoutWrapper}\n        </Wrapper>\n      ) : (\n        chartWithoutWrapper\n      );\n    }\n    // Include the error boundary by default unless it is specifically disabled.\n    return disableErrorBoundary === true ? (\n      chart\n    ) : (\n      <ErrorBoundary\n        FallbackComponent={(props: FallbackProps) => (\n          <FallbackComponent width={width} height={height} {...props} />\n        )}\n        onError={onErrorBoundary}\n      >\n        {chart}\n      </ErrorBoundary>\n    );\n  }\n\n  render() {\n    const { heightInfo, widthInfo, BoundingBox } = this.parseDimension(\n      this.props as PropsWithDefault,\n    );\n\n    // If any of the dimension is dynamic, get parent's dimension\n    if (widthInfo.isDynamic || heightInfo.isDynamic) {\n      const { debounceTime } = this.props;\n\n      return (\n        <BoundingBox>\n          <ParentSize debounceTime={debounceTime}>\n            {({ width, height }) =>\n              this.renderChart(\n                widthInfo.isDynamic ? Math.floor(width) : widthInfo.value,\n                heightInfo.isDynamic ? Math.floor(height) : heightInfo.value,\n              )\n            }\n          </ParentSize>\n        </BoundingBox>\n      );\n    }\n\n    return this.renderChart(widthInfo.value, heightInfo.value);\n  }\n}\n\nexport default withTheme(SuperChart);\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { t } from '@superset-ui/core';\nimport { SupersetTheme } from '../../style';\nimport { FallbackPropsWithDimension } from './SuperChart';\n\nexport type Props = FallbackPropsWithDimension;\n\nexport default function FallbackComponent({\n  componentStack,\n  error,\n  height,\n  width,\n}: Props) {\n  return (\n    <div\n      css={(theme: SupersetTheme) => ({\n        backgroundColor: theme.colors.grayscale.dark2,\n        color: theme.colors.grayscale.light5,\n        overflow: 'auto',\n        padding: 32,\n      })}\n      style={{ height, width }}\n    >\n      <div>\n        <div>\n          <b>{t('Oops! An error occurred!')}</b>\n        </div>\n        <code>{error ? error.toString() : 'Unknown Error'}</code>\n      </div>\n      {componentStack && (\n        <div>\n          <b>{t('Stack Trace:')}</b>\n          <code>\n            {componentStack.split('\\n').map((row: string) => (\n              <div key={row}>{row}</div>\n            ))}\n          </code>\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Loadable from 'react-loadable';\nimport { ComponentClass } from 'react';\n\nexport type LoadableRendererProps = {\n  onRenderFailure?: Function;\n  onRenderSuccess?: Function;\n};\n\nconst defaultProps = {\n  onRenderFailure() {},\n  onRenderSuccess() {},\n};\n\nexport interface LoadableRenderer<Props>\n  extends ComponentClass<Props & LoadableRendererProps>,\n    Loadable.LoadableComponent {}\n\nexport default function createLoadableRenderer<\n  Props,\n  Exports extends { [key: string]: any },\n>(options: Loadable.OptionsWithMap<Props, Exports>): LoadableRenderer<Props> {\n  const LoadableRenderer = Loadable.Map<Props, Exports>(\n    options,\n  ) as LoadableRenderer<Props>;\n\n  // Extends the behavior of LoadableComponent to provide post-render listeners\n  class CustomLoadableRenderer extends LoadableRenderer {\n    static defaultProps: object;\n\n    componentDidMount() {\n      this.afterRender();\n    }\n\n    componentDidUpdate() {\n      this.afterRender();\n    }\n\n    afterRender() {\n      const { loaded, loading, error } = this.state;\n      const { onRenderFailure, onRenderSuccess } = this.props;\n      if (!loading) {\n        if (error) {\n          (onRenderFailure as Function)(error);\n        } else if (loaded && Object.keys(loaded).length > 0) {\n          (onRenderSuccess as Function)();\n        }\n      }\n    }\n  }\n\n  CustomLoadableRenderer.defaultProps = defaultProps;\n  CustomLoadableRenderer.preload = LoadableRenderer.preload;\n\n  return CustomLoadableRenderer;\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/** Type checking is disabled for this file due to reselect only supporting\n * TS declarations for selectors with up to 12 arguments. */\n// @ts-nocheck\nimport { RefObject } from 'react';\nimport { createSelector } from 'reselect';\nimport {\n  AppSection,\n  Behavior,\n  convertKeysToCamelCase,\n  Datasource,\n  FilterState,\n  JsonObject,\n} from '../..';\nimport {\n  HandlerFunction,\n  LegendState,\n  PlainObject,\n  SetDataMaskHook,\n} from '../types/Base';\nimport { QueryData, DataRecordFilters } from '..';\nimport { SupersetTheme } from '../../style';\n\n// TODO: more specific typing for these fields of ChartProps\ntype AnnotationData = PlainObject;\ntype SnakeCaseDatasource = PlainObject;\ntype CamelCaseFormData = PlainObject;\ntype SnakeCaseFormData = PlainObject;\ntype RawFormData = CamelCaseFormData | SnakeCaseFormData;\n\ntype ChartPropsSelector = (c: ChartPropsConfig) => ChartProps;\n\n/** Optional field for event handlers, renderers */\ntype Hooks = {\n  /**\n   * sync active filters between chart and dashboard, \"add\" actually\n   * also handles \"change\" and \"remove\".\n   */\n  onAddFilter?: (newFilters: DataRecordFilters, merge?: boolean) => void;\n  /** handle right click */\n  onContextMenu?: HandlerFunction;\n  /** handle errors */\n  onError?: HandlerFunction;\n  /** handle legend state changes */\n  onLegendStateChanged?: HandlerFunction;\n  /** use the vis as control to update state */\n  setControlValue?: HandlerFunction;\n  /** handle external filters */\n  setDataMask?: SetDataMaskHook;\n  /** handle tooltip */\n  setTooltip?: HandlerFunction;\n} & PlainObject;\n\n/**\n * Preferred format for ChartProps config\n */\nexport interface ChartPropsConfig {\n  annotationData?: AnnotationData;\n  /** Datasource metadata */\n  datasource?: SnakeCaseDatasource;\n  initialValues?: DataRecordFilters;\n  /** Main configuration of the chart */\n  formData?: RawFormData;\n  /** Chart height */\n  height?: number;\n  /** Programmatic overrides such as event handlers, renderers */\n  hooks?: Hooks;\n  /** The data returned for all queries objects in the request */\n  queriesData?: QueryData[];\n  /** Chart width */\n  width?: number;\n  /** Own chart state that saved in dashboard */\n  ownState?: JsonObject;\n  /** Filter state that saved in dashboard */\n  filterState?: FilterState;\n  /** Legend state */\n  legendState?: LegendState;\n  /** Set of actual behaviors that this instance of chart should use */\n  behaviors?: Behavior[];\n  /** Chart display settings related to current view context */\n  displaySettings?: JsonObject;\n  /** Application section of the chart on the screen (in what components/screen it placed) */\n  appSection?: AppSection;\n  /** is the chart refreshing its contents */\n  isRefreshing?: boolean;\n  /** chart ref */\n  inputRef?: RefObject<any>;\n  /** Theme object */\n  theme: SupersetTheme;\n}\n\nconst DEFAULT_WIDTH = 800;\nconst DEFAULT_HEIGHT = 600;\n\nexport default class ChartProps<FormData extends RawFormData = RawFormData> {\n  static createSelector: () => ChartPropsSelector;\n\n  annotationData: AnnotationData;\n\n  datasource: Datasource;\n\n  rawDatasource: SnakeCaseDatasource;\n\n  initialValues: DataRecordFilters;\n\n  formData: CamelCaseFormData;\n\n  rawFormData: FormData;\n\n  height: number;\n\n  hooks: Hooks;\n\n  ownState: JsonObject;\n\n  filterState: FilterState;\n\n  legendState?: LegendState;\n\n  queriesData: QueryData[];\n\n  width: number;\n\n  behaviors: Behavior[];\n\n  displaySettings?: JsonObject;\n\n  appSection?: AppSection;\n\n  isRefreshing?: boolean;\n\n  inputRef?: RefObject<any>;\n\n  inContextMenu?: boolean;\n\n  emitCrossFilters?: boolean;\n\n  theme: SupersetTheme;\n\n  constructor(config: ChartPropsConfig & { formData?: FormData } = {}) {\n    const {\n      annotationData = {},\n      datasource = {},\n      formData = {} as FormData,\n      hooks = {},\n      ownState = {},\n      filterState = {},\n      legendState,\n      initialValues = {},\n      queriesData = [],\n      behaviors = [],\n      displaySettings = {},\n      width = DEFAULT_WIDTH,\n      height = DEFAULT_HEIGHT,\n      appSection,\n      isRefreshing,\n      inputRef,\n      inContextMenu = false,\n      emitCrossFilters = false,\n      theme,\n    } = config;\n    this.width = width;\n    this.height = height;\n    this.annotationData = annotationData;\n    this.datasource = convertKeysToCamelCase(datasource) as Datasource;\n    this.rawDatasource = datasource;\n    this.formData = convertKeysToCamelCase(formData);\n    this.rawFormData = formData;\n    this.hooks = hooks;\n    this.initialValues = initialValues;\n    this.queriesData = queriesData;\n    this.ownState = ownState;\n    this.filterState = filterState;\n    this.legendState = legendState;\n    this.behaviors = behaviors;\n    this.displaySettings = displaySettings;\n    this.appSection = appSection;\n    this.isRefreshing = isRefreshing;\n    this.inputRef = inputRef;\n    this.inContextMenu = inContextMenu;\n    this.emitCrossFilters = emitCrossFilters;\n    this.theme = theme;\n  }\n}\n\n// eslint-disable-next-line func-name-matching\nChartProps.createSelector = function create(): ChartPropsSelector {\n  return createSelector(\n    (input: ChartPropsConfig) => input.annotationData,\n    input => input.datasource,\n    input => input.formData,\n    input => input.height,\n    input => input.hooks,\n    input => input.initialValues,\n    input => input.queriesData,\n    input => input.width,\n    input => input.ownState,\n    input => input.filterState,\n    input => input.legendState,\n    input => input.behaviors,\n    input => input.displaySettings,\n    input => input.appSection,\n    input => input.isRefreshing,\n    input => input.inputRef,\n    input => input.inContextMenu,\n    input => input.emitCrossFilters,\n    input => input.theme,\n    (\n      annotationData,\n      datasource,\n      formData,\n      height,\n      hooks,\n      initialValues,\n      queriesData,\n      width,\n      ownState,\n      filterState,\n      legendState,\n      behaviors,\n      displaySettings,\n      appSection,\n      isRefreshing,\n      inputRef,\n      inContextMenu,\n      emitCrossFilters,\n      theme,\n    ) =>\n      new ChartProps({\n        annotationData,\n        datasource,\n        formData,\n        height,\n        hooks,\n        initialValues,\n        queriesData,\n        ownState,\n        filterState,\n        legendState,\n        width,\n        behaviors,\n        displaySettings,\n        appSection,\n        isRefreshing,\n        inputRef,\n        inContextMenu,\n        emitCrossFilters,\n        theme,\n      }),\n  );\n};\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst HUNDRED_PERCENT = { isDynamic: true, multiplier: 1 } as const;\n\nexport default function parseLength(\n  input: string | number,\n):\n  | { isDynamic: true; multiplier: number }\n  | { isDynamic: false; value: number } {\n  if (input === 'auto' || input === '100%') {\n    return HUNDRED_PERCENT;\n  }\n\n  if (\n    typeof input === 'string' &&\n    input.length > 0 &&\n    input[input.length - 1] === '%'\n  ) {\n    return { isDynamic: true, multiplier: parseFloat(input) / 100 };\n  }\n  const value = typeof input === 'number' ? input : parseFloat(input);\n\n  return { isDynamic: false, value };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useEffect } from 'react';\nimport { usePrevious } from '../usePrevious';\n\n/**\n * Calls the callback when the value changes.\n *\n * Passes the previous and current values to the callback\n */\nexport function useChangeEffect<T>(\n  value: T,\n  callback: (previous: T | undefined, current: T) => void,\n) {\n  const previous = usePrevious(value);\n  useEffect(() => {\n    if (value !== previous) {\n      callback(previous, value);\n    }\n  }, [value, previous, callback]);\n}\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { camelCase, isPlainObject, mapKeys } from 'lodash';\n\nexport default function convertKeysToCamelCase<T>(object: T) {\n  if (object === null || object === undefined) {\n    return object;\n  }\n  if (isPlainObject(object)) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return mapKeys(object as { [key: string]: any }, (_, k) =>\n      camelCase(k),\n    ) as T;\n  }\n  throw new Error(`Cannot convert input that is not a plain object: ${object}`);\n}\n"],"names":["IDENTITY","x","EMPTY","defaultProps","id","className","preTransformProps","overrideTransformProps","undefined","postTransformProps","onRenderSuccess","onRenderFailure","BLANK_CHART_PROPS","ChartProps","SuperChartCore","PureComponent","constructor","args","container","processChartProps","createSelector","input","chartProps","transformProps","pre","transform","post","createLoadableRenderer","chartType","Renderer","loader","Chart","getChartComponentRegistry","getAsPromise","Promise","resolve","getChartTransformPropsRegistry","loading","loadingProps","this","renderLoading","render","renderChart","preload","loaded","props","_jsx","error","_jsxs","role","children","t","toString","setRef","containerProps","ref","MESSAGE_STYLES","maxWidth","Container","styled","div","theme","width","height","css","gridUnit","typography","sizes","l","weights","bold","m","NoResultsComponent","shouldRenderBody","BODY_STRING","title","style","FallbackComponent","componentStack","backgroundColor","colors","grayscale","dark2","color","light5","overflow","padding","split","map","row","enableNoResults","SuperChart","core","createChartProps","parseDimension","widthInfo","parseLength","heightInfo","isDynamic","multiplier","value","BoundingBox","Fragment","getQueryCount","_getChartMetadataRegi","_getChartMetadataRegi2","getChartMetadataRegistry","get","queryObjectCount","disableErrorBoundary","onErrorBoundary","Wrapper","queriesData","noResults","rest","chart","slice","every","data","Array","isArray","length","chartWithoutWrapper","ErrorBoundary","onError","debounceTime","ParentSize","Math","floor","withTheme","options","LoadableRenderer","Loadable","CustomLoadableRenderer","componentDidMount","afterRender","componentDidUpdate","state","Object","keys","DEFAULT_WIDTH","DEFAULT_HEIGHT","config","annotationData","datasource","rawDatasource","initialValues","formData","rawFormData","hooks","ownState","filterState","legendState","behaviors","displaySettings","appSection","isRefreshing","inputRef","inContextMenu","emitCrossFilters","convertKeysToCamelCase","HUNDRED_PERCENT","parseFloat","useChangeEffect","callback","previous","usePrevious","useEffect","object","_isPlainObject","_mapKeys","_","k","_camelCase","Error"],"sourceRoot":""}