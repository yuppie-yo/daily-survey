{"version":3,"file":"93b7ffb2ada15fe2ddc4.chunk.js","mappings":"oPA0BA,SAASA,EAAkBC,GAAS,IAAHC,EAAAC,EAC/B,OACEC,EAAAA,EAAAA,IAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,IAACC,EAAAA,EAAU,CACTC,OAAOC,EAAAA,EAAAA,GAAE,uCACTC,MAAO,IAAK,MAADV,OAAC,EAADA,EAAGW,WAAW,OAAQ,MAADX,OAAC,EAADA,EAAGW,WAAW,SAEhDL,EAAAA,EAAAA,IAACC,EAAAA,EAAU,CACTC,OAAOC,EAAAA,EAAAA,GAAE,eACTC,MAAO,GAAI,MAADV,GAAS,OAARC,EAADD,EAAGY,SAAe,OAATV,EAATD,EAAWY,cAAV,EAADX,EAAoBY,gBAItC,CACO,MAAMC,EAAkC,SAC7CC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAKJ,GACL,YACJK,EAAc,MACdC,gBAAiBC,EACjBC,SAAUC,EAAW,SACrBC,EAAW,OACTN,EACJ,IAAIO,EAAOV,EAAQU,KAAKC,SAExB,MAAMJ,EAAsB,MAAXC,OAAW,EAAXA,EAAaI,KAC3BhB,IAMC,MAAM,eAAEiB,EAAc,eAAEC,EAAc,MAAEC,EAAK,YAAEC,GAAgBpB,EAC/D,OAAIkB,EAEK,CACLjB,UAAW,CAACgB,EAAgBC,GAC5BC,MAAO,CAACA,EAAME,EAAGF,EAAMG,EAAGH,EAAMI,IAI7B,CACLtB,UAAWgB,EACXE,MAAO,CAACA,EAAME,EAAGF,EAAMG,EAAGH,EAAMI,GAChCH,cACD,IAUL,OANIV,IAGFI,GAD4BU,EAAAA,EAAAA,GAAcjB,EAAGE,gBACtCgB,CAAoBX,IAGtB,IAAIY,EAAAA,EAAa,CACtBC,GAAI,gBAAgBpB,EAAGqB,WACvBd,OACAH,WACAE,SAAUgB,OAAOhB,GAAY,OAC7BL,YAAaA,EAAYsB,cACzBC,YAAcC,GAA8CA,EAAEC,SAC9DC,UAAYF,GAA0BA,EAAEG,QAAU,MAC/CC,EAAAA,EAAAA,GAAiB7B,EAAID,EAAYpB,IAExC,EAMA,GAAemD,EAAAA,EAAAA,GAAsBnC,GAJrC,SAAmBY,GACjB,OAAOA,EAAKE,KAAIgB,GAAKA,EAAEC,UACzB,G","sources":["webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Contour/Contour.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ContourLayer } from 'deck.gl';\nimport { t } from '@superset-ui/core';\nimport { commonLayerProps } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { createDeckGLComponent, getLayerType } from '../../factory';\nimport { ColorType } from '../../types';\nimport TooltipRow from '../../TooltipRow';\n\nfunction setTooltipContent(o: any) {\n  return (\n    <div className=\"deckgl-tooltip\">\n      <TooltipRow\n        label={t('Centroid (Longitude and Latitude): ')}\n        value={`(${o?.coordinate[0]}, ${o?.coordinate[1]})`}\n      />\n      <TooltipRow\n        label={t('Threshold: ')}\n        value={`${o?.object?.contour?.threshold}`}\n      />\n    </div>\n  );\n}\nexport const getLayer: getLayerType<unknown> = function (\n  formData,\n  payload,\n  onAddFilter,\n  setTooltip,\n) {\n  const fd = formData;\n  const {\n    aggregation = 'SUM',\n    js_data_mutator: jsFnMutator,\n    contours: rawContours,\n    cellSize = '200',\n  } = fd;\n  let data = payload.data.features;\n\n  const contours = rawContours?.map(\n    (contour: {\n      color: ColorType;\n      lowerThreshold: number;\n      upperThreshold?: number;\n      strokeWidth?: number;\n    }) => {\n      const { lowerThreshold, upperThreshold, color, strokeWidth } = contour;\n      if (upperThreshold) {\n        // Isoband format\n        return {\n          threshold: [lowerThreshold, upperThreshold],\n          color: [color.r, color.g, color.b],\n        };\n      }\n      // Isoline format\n      return {\n        threshold: lowerThreshold,\n        color: [color.r, color.g, color.b],\n        strokeWidth,\n      };\n    },\n  );\n\n  if (jsFnMutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutatorFunction = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutatorFunction(data);\n  }\n\n  return new ContourLayer({\n    id: `contourLayer-${fd.slice_id}`,\n    data,\n    contours,\n    cellSize: Number(cellSize || '200'),\n    aggregation: aggregation.toUpperCase(),\n    getPosition: (d: { position: number[]; weight: number }) => d.position,\n    getWeight: (d: { weight: number }) => d.weight || 0,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n};\n\nfunction getPoints(data: any[]) {\n  return data.map(d => d.position);\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n"],"names":["setTooltipContent","o","_o$object","_o$object$contour","_jsxs","className","children","_jsx","TooltipRow","label","t","value","coordinate","object","contour","threshold","getLayer","formData","payload","onAddFilter","setTooltip","fd","aggregation","js_data_mutator","jsFnMutator","contours","rawContours","cellSize","data","features","map","lowerThreshold","upperThreshold","color","strokeWidth","r","g","b","sandboxedEval","jsFnMutatorFunction","ContourLayer","id","slice_id","Number","toUpperCase","getPosition","d","position","getWeight","weight","commonLayerProps","createDeckGLComponent"],"sourceRoot":""}