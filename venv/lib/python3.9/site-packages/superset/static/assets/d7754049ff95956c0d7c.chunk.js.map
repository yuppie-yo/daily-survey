{"version":3,"file":"d7754049ff95956c0d7c.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/plugin-chart-echarts/src/Sunburst/EchartsSunburst.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback } from 'react';\nimport {\n  BinaryQueryObjectFilterClause,\n  getColumnLabel,\n  getNumberFormatter,\n  getTimeFormatter,\n} from '@superset-ui/core';\nimport { SunburstTransformedProps } from './types';\nimport Echart from '../components/Echart';\nimport { EventHandlers, TreePathInfo } from '../types';\nimport { formatSeriesName } from '../utils/series';\n\nexport const extractTreePathInfo = (treePathInfo: TreePathInfo[] | undefined) =>\n  (treePathInfo ?? [])\n    .map(pathInfo => pathInfo?.name || '')\n    .filter(path => path !== '');\n\nexport default function EchartsSunburst(props: SunburstTransformedProps) {\n  const {\n    height,\n    width,\n    echartOptions,\n    setDataMask,\n    labelMap,\n    selectedValues,\n    formData,\n    onContextMenu,\n    refs,\n    emitCrossFilters,\n    coltypeMapping,\n  } = props;\n  const { columns } = formData;\n\n  const getCrossFilterDataMask = useCallback(\n    (treePathInfo: TreePathInfo[]) => {\n      const treePath = extractTreePathInfo(treePathInfo);\n      const name = treePath.join(',');\n      const selected = Object.values(selectedValues);\n      let values: string[];\n      if (selected.includes(name)) {\n        values = selected.filter(v => v !== name);\n      } else {\n        values = [name];\n      }\n      const labels = values.map(value => labelMap[value]);\n\n      return {\n        dataMask: {\n          extraFormData: {\n            filters:\n              values.length === 0 || !columns\n                ? []\n                : columns.slice(0, treePath.length).map((col, idx) => {\n                    const val = labels.map(v => v[idx]);\n                    if (val === null || val === undefined)\n                      return {\n                        col,\n                        op: 'IS NULL' as const,\n                      };\n                    return {\n                      col,\n                      op: 'IN' as const,\n                      val: val as (string | number | boolean)[],\n                    };\n                  }),\n          },\n          filterState: {\n            value: labels.length ? labels : null,\n            selectedValues: values.length ? values : null,\n          },\n        },\n        isCurrentValueSelected: selected.includes(name),\n      };\n    },\n    [columns, labelMap, selectedValues],\n  );\n\n  const handleChange = useCallback(\n    (treePathInfo: TreePathInfo[]) => {\n      if (!emitCrossFilters || !columns?.length) {\n        return;\n      }\n\n      setDataMask(getCrossFilterDataMask(treePathInfo).dataMask);\n    },\n    [emitCrossFilters, setDataMask, getCrossFilterDataMask],\n  );\n\n  const eventHandlers: EventHandlers = {\n    click: props => {\n      const { treePathInfo } = props;\n      handleChange(treePathInfo);\n    },\n    contextmenu: async eventParams => {\n      if (onContextMenu) {\n        eventParams.event.stop();\n        const { data, treePathInfo } = eventParams;\n        const { records } = data;\n        const treePath = extractTreePathInfo(eventParams.treePathInfo);\n        const pointerEvent = eventParams.event.event;\n        const drillToDetailFilters: BinaryQueryObjectFilterClause[] = [];\n        const drillByFilters: BinaryQueryObjectFilterClause[] = [];\n        if (columns?.length) {\n          treePath.forEach((path, i) =>\n            drillToDetailFilters.push({\n              col: columns[i],\n              op: '==',\n              val: records[i],\n              formattedVal: path,\n            }),\n          );\n          const val = treePath[treePath.length - 1];\n          drillByFilters.push({\n            col: columns[treePath.length - 1],\n            op: '==',\n            val,\n            formattedVal: formatSeriesName(val, {\n              timeFormatter: getTimeFormatter(formData.dateFormat),\n              numberFormatter: getNumberFormatter(formData.numberFormat),\n              coltype:\n                coltypeMapping?.[getColumnLabel(columns[treePath.length - 1])],\n            }),\n          });\n        }\n        onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n          drillToDetail: drillToDetailFilters,\n          crossFilter: columns?.length\n            ? getCrossFilterDataMask(treePathInfo)\n            : undefined,\n          drillBy: { filters: drillByFilters, groupbyFieldName: 'columns' },\n        });\n      }\n    },\n  };\n\n  return (\n    <Echart\n      refs={refs}\n      height={height}\n      width={width}\n      echartOptions={echartOptions}\n      eventHandlers={eventHandlers}\n      selectedValues={selectedValues}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useCallback,\n  Ref,\n} from 'react';\n\nimport { styled } from '@superset-ui/core';\nimport { use, init, EChartsType } from 'echarts/core';\nimport {\n  SankeyChart,\n  PieChart,\n  BarChart,\n  FunnelChart,\n  GaugeChart,\n  GraphChart,\n  LineChart,\n  ScatterChart,\n  RadarChart,\n  BoxplotChart,\n  TreeChart,\n  TreemapChart,\n  HeatmapChart,\n  SunburstChart,\n} from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport {\n  TooltipComponent,\n  GridComponent,\n  VisualMapComponent,\n  LegendComponent,\n  DataZoomComponent,\n  ToolboxComponent,\n  GraphicComponent,\n  AriaComponent,\n  MarkAreaComponent,\n  MarkLineComponent,\n} from 'echarts/components';\nimport { LabelLayout } from 'echarts/features';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nuse([\n  CanvasRenderer,\n  BarChart,\n  BoxplotChart,\n  FunnelChart,\n  GaugeChart,\n  GraphChart,\n  HeatmapChart,\n  LineChart,\n  PieChart,\n  RadarChart,\n  SankeyChart,\n  ScatterChart,\n  SunburstChart,\n  TreeChart,\n  TreemapChart,\n  AriaComponent,\n  DataZoomComponent,\n  GraphicComponent,\n  GridComponent,\n  MarkAreaComponent,\n  MarkLineComponent,\n  LegendComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  VisualMapComponent,\n  LabelLayout,\n]);\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n    refs,\n  }: EchartsProps,\n  ref: Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef<EChartsType>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (chartRef.current) {\n        chartRef.current.resize({ width, height });\n      }\n    },\n    [],\n  );\n\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => chartRef.current?.dispose();\n  }, []);\n\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"],"names":["extractTreePathInfo","treePathInfo","map","pathInfo","name","filter","path","EchartsSunburst","props","height","width","echartOptions","setDataMask","labelMap","selectedValues","formData","onContextMenu","refs","emitCrossFilters","coltypeMapping","columns","getCrossFilterDataMask","useCallback","treePath","join","selected","Object","values","includes","v","labels","value","dataMask","extraFormData","filters","length","slice","col","idx","val","op","filterState","isCurrentValueSelected","handleChange","eventHandlers","click","contextmenu","async","eventParams","event","stop","data","records","pointerEvent","drillToDetailFilters","drillByFilters","forEach","i","push","formattedVal","formatSeriesName","timeFormatter","getTimeFormatter","dateFormat","numberFormatter","getNumberFormatter","numberFormat","coltype","getColumnLabel","clientX","clientY","drillToDetail","crossFilter","undefined","drillBy","groupbyFieldName","_jsx","Echart","Styles","styled","div","zrEventHandlers","ref","divRef","useRef","chartRef","currentSelection","useMemo","keys","previousSelection","useImperativeHandle","getEchartInstance","current","useEffect","init","entries","handler","_chartRef$current","_chartRef$current2","off","on","_chartRef$current3","_chartRef$current4","getZr","setOption","dispatchAction","type","dataIndex","handleSizeChange","resize","_chartRef$current5","dispose","useLayoutEffect","use","CanvasRenderer","BarChart","BoxplotChart","FunnelChart","GaugeChart","GraphChart","HeatmapChart","LineChart","PieChart","RadarChart","SankeyChart","ScatterChart","SunburstChart","TreeChart","TreemapChart","AriaComponent","DataZoomComponent","GraphicComponent","GridComponent","MarkAreaComponent","MarkLineComponent","LegendComponent","ToolboxComponent","TooltipComponent","VisualMapComponent","LabelLayout","forwardRef"],"sourceRoot":""}