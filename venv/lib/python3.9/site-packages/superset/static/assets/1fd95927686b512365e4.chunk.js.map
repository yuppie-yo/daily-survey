{"version":3,"file":"1fd95927686b512365e4.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/plugin-chart-echarts/src/components/ExtraControls.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/Timeseries/EchartsTimeseries.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport { HandlerFunction, JsonValue, styled } from '@superset-ui/core';\nimport {\n  RadioButtonOption,\n  sharedControlComponents,\n} from '@superset-ui/chart-controls';\nimport { AreaChartStackControlOptions } from '../constants';\n\nconst { RadioButtonControl } = sharedControlComponents;\n\nconst ExtraControlsWrapper = styled.div`\n  text-align: center;\n`;\n\nexport function useExtraControl<\n  F extends {\n    stack: any;\n    area: boolean;\n  },\n>({\n  formData,\n  setControlValue,\n}: {\n  formData: F;\n  setControlValue?: HandlerFunction;\n}) {\n  const { stack, area } = formData;\n  const [extraValue, setExtraValue] = useState<JsonValue | undefined>(\n    stack ?? undefined,\n  );\n\n  useEffect(() => {\n    setExtraValue(stack);\n  }, [stack]);\n\n  const extraControlsOptions = useMemo(() => {\n    if (area) {\n      return AreaChartStackControlOptions;\n    }\n    return [];\n  }, [area]);\n\n  const extraControlsHandler = useCallback(\n    (value: RadioButtonOption[0]) => {\n      if (area) {\n        if (setControlValue) {\n          setControlValue('stack', value);\n          setExtraValue(value);\n        }\n      }\n    },\n    [area, setControlValue],\n  );\n\n  return {\n    extraControlsOptions,\n    extraControlsHandler,\n    extraValue,\n  };\n}\n\nexport function ExtraControls<\n  F extends {\n    stack: any;\n    area: boolean;\n    showExtraControls: boolean;\n  },\n>({\n  formData,\n  setControlValue,\n}: {\n  formData: F;\n  setControlValue?: HandlerFunction;\n}) {\n  const { extraControlsOptions, extraControlsHandler, extraValue } =\n    useExtraControl<F>({\n      formData,\n      setControlValue,\n    });\n\n  if (!formData.showExtraControls) {\n    return null;\n  }\n\n  return (\n    <ExtraControlsWrapper>\n      <RadioButtonControl\n        options={extraControlsOptions}\n        onChange={extraControlsHandler}\n        value={extraValue}\n      />\n    </ExtraControlsWrapper>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  DTTM_ALIAS,\n  BinaryQueryObjectFilterClause,\n  AxisType,\n  getTimeFormatter,\n  getColumnLabel,\n  getNumberFormatter,\n  LegendState,\n  ensureIsArray,\n} from '@superset-ui/core';\nimport type { ViewRootGroup } from 'echarts/types/src/util/types';\nimport type GlobalModel from 'echarts/types/src/model/Global';\nimport type ComponentModel from 'echarts/types/src/model/Component';\nimport { EchartsHandler, EventHandlers } from '../types';\nimport Echart from '../components/Echart';\nimport { TimeseriesChartTransformedProps } from './types';\nimport { formatSeriesName } from '../utils/series';\nimport { ExtraControls } from '../components/ExtraControls';\n\nconst TIMER_DURATION = 300;\n\nexport default function EchartsTimeseries({\n  formData,\n  height,\n  width,\n  echartOptions,\n  groupby,\n  labelMap,\n  selectedValues,\n  setDataMask,\n  setControlValue,\n  legendData = [],\n  onContextMenu,\n  onLegendStateChanged,\n  onFocusedSeries,\n  xValueFormatter,\n  xAxis,\n  refs,\n  emitCrossFilters,\n  coltypeMapping,\n}: TimeseriesChartTransformedProps) {\n  const { stack } = formData;\n  const echartRef = useRef<EchartsHandler | null>(null);\n  // eslint-disable-next-line no-param-reassign\n  refs.echartRef = echartRef;\n  const clickTimer = useRef<ReturnType<typeof setTimeout>>();\n  const extraControlRef = useRef<HTMLDivElement>(null);\n  const [extraControlHeight, setExtraControlHeight] = useState(0);\n  useEffect(() => {\n    const updatedHeight = extraControlRef.current?.offsetHeight || 0;\n    setExtraControlHeight(updatedHeight);\n  }, [formData.showExtraControls]);\n\n  const hasDimensions = ensureIsArray(groupby).length > 0;\n\n  const getModelInfo = (target: ViewRootGroup, globalModel: GlobalModel) => {\n    let el = target;\n    let model: ComponentModel | null = null;\n    while (el) {\n      // eslint-disable-next-line no-underscore-dangle\n      const modelInfo = el.__ecComponentInfo;\n      if (modelInfo != null) {\n        model = globalModel.getComponent(modelInfo.mainType, modelInfo.index);\n        break;\n      }\n      el = el.parent;\n    }\n    return model;\n  };\n\n  const getCrossFilterDataMask = useCallback(\n    (value: string) => {\n      const selected: string[] = Object.values(selectedValues);\n      let values: string[];\n      if (selected.includes(value)) {\n        values = selected.filter(v => v !== value);\n      } else {\n        values = [value];\n      }\n      const groupbyValues = values.map(value => labelMap[value]);\n      return {\n        dataMask: {\n          extraFormData: {\n            filters:\n              values.length === 0\n                ? []\n                : groupby.map((col, idx) => {\n                    const val = groupbyValues.map(v => v[idx]);\n                    if (val === null || val === undefined)\n                      return {\n                        col,\n                        op: 'IS NULL' as const,\n                      };\n                    return {\n                      col,\n                      op: 'IN' as const,\n                      val: val as (string | number | boolean)[],\n                    };\n                  }),\n          },\n          filterState: {\n            label: groupbyValues.length ? groupbyValues : undefined,\n            value: groupbyValues.length ? groupbyValues : null,\n            selectedValues: values.length ? values : null,\n          },\n        },\n        isCurrentValueSelected: selected.includes(value),\n      };\n    },\n    [groupby, labelMap, selectedValues],\n  );\n\n  const handleChange = useCallback(\n    (value: string) => {\n      if (!emitCrossFilters) {\n        return;\n      }\n      setDataMask(getCrossFilterDataMask(value).dataMask);\n    },\n    [emitCrossFilters, setDataMask, getCrossFilterDataMask],\n  );\n\n  const eventHandlers: EventHandlers = {\n    click: props => {\n      if (!hasDimensions) {\n        return;\n      }\n      if (clickTimer.current) {\n        clearTimeout(clickTimer.current);\n      }\n      // Ensure that double-click events do not trigger single click event. So we put it in the timer.\n      clickTimer.current = setTimeout(() => {\n        const { seriesName: name } = props;\n        handleChange(name);\n      }, TIMER_DURATION);\n    },\n    mouseout: () => {\n      onFocusedSeries(null);\n    },\n    mouseover: params => {\n      onFocusedSeries(params.seriesName);\n    },\n    legendselectchanged: payload => {\n      onLegendStateChanged?.(payload.selected);\n    },\n    legendselectall: payload => {\n      onLegendStateChanged?.(payload.selected);\n    },\n    legendinverseselect: payload => {\n      onLegendStateChanged?.(payload.selected);\n    },\n    contextmenu: async eventParams => {\n      if (onContextMenu) {\n        eventParams.event.stop();\n        const { data, seriesName } = eventParams;\n        const drillToDetailFilters: BinaryQueryObjectFilterClause[] = [];\n        const drillByFilters: BinaryQueryObjectFilterClause[] = [];\n        const pointerEvent = eventParams.event.event;\n        const values = [\n          ...(eventParams.name ? [eventParams.name] : []),\n          ...(labelMap[seriesName] ?? []),\n        ];\n        const groupBy = ensureIsArray(formData.groupby);\n        if (data && xAxis.type === AxisType.Time) {\n          drillToDetailFilters.push({\n            col:\n              // if the xAxis is '__timestamp', granularity_sqla will be the column of filter\n              xAxis.label === DTTM_ALIAS\n                ? formData.granularitySqla\n                : xAxis.label,\n            grain: formData.timeGrainSqla,\n            op: '==',\n            val: data[0],\n            formattedVal: xValueFormatter(data[0]),\n          });\n        }\n        [\n          ...(xAxis.type === AxisType.Category && data ? [xAxis.label] : []),\n          ...groupBy,\n        ].forEach((dimension, i) =>\n          drillToDetailFilters.push({\n            col: dimension,\n            op: '==',\n            val: values[i],\n            formattedVal: String(values[i]),\n          }),\n        );\n        groupBy.forEach((dimension, i) => {\n          const val = labelMap[seriesName][i];\n          drillByFilters.push({\n            col: dimension,\n            op: '==',\n            val,\n            formattedVal: formatSeriesName(values[i], {\n              timeFormatter: getTimeFormatter(formData.dateFormat),\n              numberFormatter: getNumberFormatter(formData.numberFormat),\n              coltype: coltypeMapping?.[getColumnLabel(dimension)],\n            }),\n          });\n        });\n\n        onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n          drillToDetail: drillToDetailFilters,\n          drillBy: { filters: drillByFilters, groupbyFieldName: 'groupby' },\n          crossFilter: hasDimensions\n            ? getCrossFilterDataMask(seriesName)\n            : undefined,\n        });\n      }\n    },\n  };\n\n  const zrEventHandlers: EventHandlers = {\n    dblclick: params => {\n      // clear single click timer\n      if (clickTimer.current) {\n        clearTimeout(clickTimer.current);\n      }\n      const pointInPixel = [params.offsetX, params.offsetY];\n      const echartInstance = echartRef.current?.getEchartInstance();\n      if (echartInstance?.containPixel('grid', pointInPixel)) {\n        // do not trigger if click unstacked chart's blank area\n        if (!stack && params.target?.type === 'ec-polygon') return;\n        // @ts-ignore\n        const globalModel = echartInstance.getModel();\n        const model = getModelInfo(params.target, globalModel);\n        if (model) {\n          const { name } = model;\n          const legendState: LegendState = legendData.reduce(\n            (previous, datum) => ({\n              ...previous,\n              [datum]: datum === name,\n            }),\n            {},\n          );\n          onLegendStateChanged?.(legendState);\n        }\n      }\n    },\n  };\n\n  return (\n    <>\n      <div ref={extraControlRef}>\n        <ExtraControls formData={formData} setControlValue={setControlValue} />\n      </div>\n      <Echart\n        ref={echartRef}\n        refs={refs}\n        height={height - extraControlHeight}\n        width={width}\n        echartOptions={echartOptions}\n        eventHandlers={eventHandlers}\n        zrEventHandlers={zrEventHandlers}\n        selectedValues={selectedValues}\n      />\n    </>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useCallback,\n  Ref,\n} from 'react';\n\nimport { styled } from '@superset-ui/core';\nimport { use, init, EChartsType } from 'echarts/core';\nimport {\n  SankeyChart,\n  PieChart,\n  BarChart,\n  FunnelChart,\n  GaugeChart,\n  GraphChart,\n  LineChart,\n  ScatterChart,\n  RadarChart,\n  BoxplotChart,\n  TreeChart,\n  TreemapChart,\n  HeatmapChart,\n  SunburstChart,\n} from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport {\n  TooltipComponent,\n  GridComponent,\n  VisualMapComponent,\n  LegendComponent,\n  DataZoomComponent,\n  ToolboxComponent,\n  GraphicComponent,\n  AriaComponent,\n  MarkAreaComponent,\n  MarkLineComponent,\n} from 'echarts/components';\nimport { LabelLayout } from 'echarts/features';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nuse([\n  CanvasRenderer,\n  BarChart,\n  BoxplotChart,\n  FunnelChart,\n  GaugeChart,\n  GraphChart,\n  HeatmapChart,\n  LineChart,\n  PieChart,\n  RadarChart,\n  SankeyChart,\n  ScatterChart,\n  SunburstChart,\n  TreeChart,\n  TreemapChart,\n  AriaComponent,\n  DataZoomComponent,\n  GraphicComponent,\n  GridComponent,\n  MarkAreaComponent,\n  MarkLineComponent,\n  LegendComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  VisualMapComponent,\n  LabelLayout,\n]);\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n    refs,\n  }: EchartsProps,\n  ref: Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef<EChartsType>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (chartRef.current) {\n        chartRef.current.resize({ width, height });\n      }\n    },\n    [],\n  );\n\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => chartRef.current?.dispose();\n  }, []);\n\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"],"names":["RadioButtonControl","sharedControlComponents","ExtraControlsWrapper","styled","div","ExtraControls","formData","setControlValue","extraControlsOptions","extraControlsHandler","extraValue","stack","area","setExtraValue","useState","undefined","useEffect","useMemo","AreaChartStackControlOptions","useCallback","value","useExtraControl","showExtraControls","_jsx","children","options","onChange","TIMER_DURATION","EchartsTimeseries","height","width","echartOptions","groupby","labelMap","selectedValues","setDataMask","legendData","onContextMenu","onLegendStateChanged","onFocusedSeries","xValueFormatter","xAxis","refs","emitCrossFilters","coltypeMapping","echartRef","useRef","clickTimer","extraControlRef","extraControlHeight","setExtraControlHeight","_extraControlRef$curr","updatedHeight","current","offsetHeight","hasDimensions","ensureIsArray","length","getCrossFilterDataMask","selected","Object","values","includes","filter","v","groupbyValues","map","dataMask","extraFormData","filters","col","idx","val","op","filterState","label","isCurrentValueSelected","handleChange","eventHandlers","click","props","clearTimeout","setTimeout","seriesName","name","mouseout","mouseover","params","legendselectchanged","payload","legendselectall","legendinverseselect","contextmenu","async","eventParams","_labelMap$seriesName","event","stop","data","drillToDetailFilters","drillByFilters","pointerEvent","groupBy","type","AxisType","Time","push","DTTM_ALIAS","granularitySqla","grain","timeGrainSqla","formattedVal","Category","forEach","dimension","i","String","formatSeriesName","timeFormatter","getTimeFormatter","dateFormat","numberFormatter","getNumberFormatter","numberFormat","coltype","getColumnLabel","clientX","clientY","drillToDetail","drillBy","groupbyFieldName","crossFilter","zrEventHandlers","dblclick","_echartRef$current","pointInPixel","offsetX","offsetY","echartInstance","getEchartInstance","containPixel","_params$target","target","globalModel","getModel","model","getModelInfo","el","modelInfo","__ecComponentInfo","getComponent","mainType","index","parent","legendState","reduce","previous","datum","_jsxs","_Fragment","ref","Echart","Styles","divRef","chartRef","currentSelection","keys","previousSelection","useImperativeHandle","init","entries","handler","_chartRef$current","_chartRef$current2","off","on","_chartRef$current3","_chartRef$current4","getZr","setOption","dispatchAction","dataIndex","handleSizeChange","resize","_chartRef$current5","dispose","useLayoutEffect","use","CanvasRenderer","BarChart","BoxplotChart","FunnelChart","GaugeChart","GraphChart","HeatmapChart","LineChart","PieChart","RadarChart","SankeyChart","ScatterChart","SunburstChart","TreeChart","TreemapChart","AriaComponent","DataZoomComponent","GraphicComponent","GridComponent","MarkAreaComponent","MarkLineComponent","LegendComponent","ToolboxComponent","TooltipComponent","VisualMapComponent","LabelLayout","forwardRef"],"sourceRoot":""}