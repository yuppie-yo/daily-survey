{"version":3,"file":"ebef8b838c218a09ba2a.chunk.js","mappings":"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","sources":["webpack://superset/./plugins/plugin-chart-echarts/src/Graph/EchartsGraph.tsx","webpack://superset/./plugins/plugin-chart-echarts/src/components/Echart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  getColumnLabel,\n  getNumberFormatter,\n  getTimeFormatter,\n} from '@superset-ui/core';\nimport { EventHandlers } from '../types';\nimport Echart from '../components/Echart';\nimport { GraphChartTransformedProps } from './types';\nimport { formatSeriesName } from '../utils/series';\n\ntype DataRow = {\n  source?: string;\n  target?: string;\n  id?: string;\n  col: string;\n  name: string;\n};\ntype Data = DataRow[];\ntype Event = {\n  name: string;\n  event: { stop: () => void; event: PointerEvent };\n  data: DataRow;\n  dataType: 'node' | 'edge';\n};\n\nexport default function EchartsGraph({\n  height,\n  width,\n  echartOptions,\n  formData,\n  onContextMenu,\n  setDataMask,\n  filterState,\n  emitCrossFilters,\n  refs,\n  coltypeMapping,\n}: GraphChartTransformedProps) {\n  const getCrossFilterDataMask = (node: DataRow | undefined) => {\n    if (!node?.name || !node?.col) {\n      return undefined;\n    }\n    const { name, col } = node;\n    const selected = Object.values(\n      filterState?.selectedValues || {},\n    ) as string[];\n    let values: string[];\n    if (selected.includes(name)) {\n      values = selected.filter(v => v !== name);\n    } else {\n      values = [name];\n    }\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: values.length\n            ? [\n                {\n                  col,\n                  op: 'IN' as const,\n                  val: values,\n                },\n              ]\n            : [],\n        },\n        filterState: {\n          value: values.length ? values : null,\n          selectedValues: values.length ? values : null,\n        },\n      },\n      isCurrentValueSelected: selected.includes(name),\n    };\n  };\n  const eventHandlers: EventHandlers = {\n    click: (e: Event) => {\n      if (!emitCrossFilters || !setDataMask) {\n        return;\n      }\n      e.event.stop();\n      const data = (echartOptions as any).series[0].data as Data;\n      const node = data.find(item => item.id === e.data.id);\n      const dataMask = getCrossFilterDataMask(node)?.dataMask;\n      if (dataMask) {\n        setDataMask(dataMask);\n      }\n    },\n    contextmenu: (e: Event) => {\n      const handleNodeClick = (data: Data) => {\n        const node = data.find(item => item.id === e.data.id);\n        if (node?.name) {\n          return [\n            {\n              col: node.col,\n              op: '==' as const,\n              val: node.name,\n              formattedVal: node.name,\n            },\n          ];\n        }\n        return undefined;\n      };\n      const handleEdgeClick = (data: Data) => {\n        const sourceValue = data.find(item => item.id === e.data.source)?.name;\n        const targetValue = data.find(item => item.id === e.data.target)?.name;\n        if (sourceValue && targetValue) {\n          return [\n            {\n              col: formData.source,\n              op: '==' as const,\n              val: sourceValue,\n              formattedVal: sourceValue,\n            },\n            {\n              col: formData.target,\n              op: '==' as const,\n              val: targetValue,\n              formattedVal: targetValue,\n            },\n          ];\n        }\n        return undefined;\n      };\n      if (onContextMenu) {\n        e.event.stop();\n        const pointerEvent = e.event.event;\n        const data = (echartOptions as any).series[0].data as Data;\n        const drillToDetailFilters =\n          e.dataType === 'node' ? handleNodeClick(data) : handleEdgeClick(data);\n        const node = data.find(item => item.id === e.data.id);\n\n        onContextMenu(pointerEvent.clientX, pointerEvent.clientY, {\n          drillToDetail: drillToDetailFilters,\n          crossFilter: getCrossFilterDataMask(node),\n          drillBy: node && {\n            filters: [\n              {\n                col: node.col,\n                op: '==',\n                val: node.name,\n                formattedVal: formatSeriesName(node.name, {\n                  timeFormatter: getTimeFormatter(formData.dateFormat),\n                  numberFormatter: getNumberFormatter(formData.numberFormat),\n                  coltype: coltypeMapping?.[getColumnLabel(node.col)],\n                }),\n              },\n            ],\n            groupbyFieldName:\n              node.col === formData.source ? 'source' : 'target',\n          },\n        });\n      }\n    },\n  };\n  return (\n    <Echart\n      refs={refs}\n      height={height}\n      width={width}\n      echartOptions={echartOptions}\n      eventHandlers={eventHandlers}\n    />\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  useRef,\n  useEffect,\n  useMemo,\n  forwardRef,\n  useImperativeHandle,\n  useLayoutEffect,\n  useCallback,\n  Ref,\n} from 'react';\n\nimport { styled } from '@superset-ui/core';\nimport { use, init, EChartsType } from 'echarts/core';\nimport {\n  SankeyChart,\n  PieChart,\n  BarChart,\n  FunnelChart,\n  GaugeChart,\n  GraphChart,\n  LineChart,\n  ScatterChart,\n  RadarChart,\n  BoxplotChart,\n  TreeChart,\n  TreemapChart,\n  HeatmapChart,\n  SunburstChart,\n} from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport {\n  TooltipComponent,\n  GridComponent,\n  VisualMapComponent,\n  LegendComponent,\n  DataZoomComponent,\n  ToolboxComponent,\n  GraphicComponent,\n  AriaComponent,\n  MarkAreaComponent,\n  MarkLineComponent,\n} from 'echarts/components';\nimport { LabelLayout } from 'echarts/features';\nimport { EchartsHandler, EchartsProps, EchartsStylesProps } from '../types';\n\nconst Styles = styled.div<EchartsStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nuse([\n  CanvasRenderer,\n  BarChart,\n  BoxplotChart,\n  FunnelChart,\n  GaugeChart,\n  GraphChart,\n  HeatmapChart,\n  LineChart,\n  PieChart,\n  RadarChart,\n  SankeyChart,\n  ScatterChart,\n  SunburstChart,\n  TreeChart,\n  TreemapChart,\n  AriaComponent,\n  DataZoomComponent,\n  GraphicComponent,\n  GridComponent,\n  MarkAreaComponent,\n  MarkLineComponent,\n  LegendComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  VisualMapComponent,\n  LabelLayout,\n]);\n\nfunction Echart(\n  {\n    width,\n    height,\n    echartOptions,\n    eventHandlers,\n    zrEventHandlers,\n    selectedValues = {},\n    refs,\n  }: EchartsProps,\n  ref: Ref<EchartsHandler>,\n) {\n  const divRef = useRef<HTMLDivElement>(null);\n  if (refs) {\n    // eslint-disable-next-line no-param-reassign\n    refs.divRef = divRef;\n  }\n  const chartRef = useRef<EChartsType>();\n  const currentSelection = useMemo(\n    () => Object.keys(selectedValues) || [],\n    [selectedValues],\n  );\n  const previousSelection = useRef<string[]>([]);\n\n  useImperativeHandle(ref, () => ({\n    getEchartInstance: () => chartRef.current,\n  }));\n\n  useEffect(() => {\n    if (!divRef.current) return;\n    if (!chartRef.current) {\n      chartRef.current = init(divRef.current);\n    }\n\n    Object.entries(eventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.off(name);\n      chartRef.current?.on(name, handler);\n    });\n\n    Object.entries(zrEventHandlers || {}).forEach(([name, handler]) => {\n      chartRef.current?.getZr().off(name);\n      chartRef.current?.getZr().on(name, handler);\n    });\n\n    chartRef.current.setOption(echartOptions, true);\n  }, [echartOptions, eventHandlers, zrEventHandlers]);\n\n  // highlighting\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.dispatchAction({\n      type: 'downplay',\n      dataIndex: previousSelection.current.filter(\n        value => !currentSelection.includes(value),\n      ),\n    });\n    if (currentSelection.length) {\n      chartRef.current.dispatchAction({\n        type: 'highlight',\n        dataIndex: currentSelection,\n      });\n    }\n    previousSelection.current = currentSelection;\n  }, [currentSelection]);\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      if (chartRef.current) {\n        chartRef.current.resize({ width, height });\n      }\n    },\n    [],\n  );\n\n  // did mount\n  useEffect(() => {\n    handleSizeChange({ width, height });\n    return () => chartRef.current?.dispose();\n  }, []);\n\n  useLayoutEffect(() => {\n    handleSizeChange({ width, height });\n  }, [width, height, handleSizeChange]);\n\n  return <Styles ref={divRef} height={height} width={width} />;\n}\n\nexport default forwardRef(Echart);\n"],"names":["EchartsGraph","height","width","echartOptions","formData","onContextMenu","setDataMask","filterState","emitCrossFilters","refs","coltypeMapping","getCrossFilterDataMask","node","name","col","selected","Object","values","selectedValues","includes","filter","v","dataMask","extraFormData","filters","length","op","val","value","isCurrentValueSelected","eventHandlers","click","e","_getCrossFilterDataMa","event","stop","series","data","find","item","id","contextmenu","pointerEvent","drillToDetailFilters","dataType","handleNodeClick","formattedVal","handleEdgeClick","_data$find","_data$find2","sourceValue","source","targetValue","target","clientX","clientY","drillToDetail","crossFilter","drillBy","formatSeriesName","timeFormatter","getTimeFormatter","dateFormat","numberFormatter","getNumberFormatter","numberFormat","coltype","getColumnLabel","groupbyFieldName","_jsx","Echart","Styles","styled","div","zrEventHandlers","ref","divRef","useRef","chartRef","currentSelection","useMemo","keys","previousSelection","useImperativeHandle","getEchartInstance","current","useEffect","init","entries","forEach","handler","_chartRef$current","_chartRef$current2","off","on","_chartRef$current3","_chartRef$current4","getZr","setOption","dispatchAction","type","dataIndex","handleSizeChange","useCallback","resize","_chartRef$current5","dispose","useLayoutEffect","use","CanvasRenderer","BarChart","BoxplotChart","FunnelChart","GaugeChart","GraphChart","HeatmapChart","LineChart","PieChart","RadarChart","SankeyChart","ScatterChart","SunburstChart","TreeChart","TreemapChart","AriaComponent","DataZoomComponent","GraphicComponent","GridComponent","MarkAreaComponent","MarkLineComponent","LegendComponent","ToolboxComponent","TooltipComponent","VisualMapComponent","LabelLayout","forwardRef"],"sourceRoot":""}