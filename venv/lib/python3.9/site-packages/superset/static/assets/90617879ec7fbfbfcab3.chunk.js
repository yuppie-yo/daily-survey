"use strict";(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[2254],{295644:(t,i,e)=>{e.d(i,{N:()=>c,s:()=>u});const n="#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\n\nstruct AmbientLight {\n vec3 color;\n};\n\nstruct PointLight {\n vec3 color;\n vec3 position;\n vec3 attenuation;\n};\n\nstruct DirectionalLight {\n  vec3 color;\n  vec3 direction;\n};\n\nuniform AmbientLight lighting_uAmbientLight;\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\nuniform int lighting_uPointLightCount;\nuniform int lighting_uDirectionalLightCount;\n\nuniform bool lighting_uEnabled;\n\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\n  return pointLight.attenuation.x\n       + pointLight.attenuation.y * distance\n       + pointLight.attenuation.z * distance * distance;\n}\n\n#endif\n",o={lightSources:{}};function r(){let{color:t=[0,0,0],intensity:i=1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return t.map((t=>t*i/255))}const a={name:"lights",vs:n,fs:n,getUniforms:function t(){let i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o;if("lightSources"in i){const{ambientLight:t,pointLights:e,directionalLights:n}=i.lightSources||{};return t||e&&e.length>0||n&&n.length>0?Object.assign({},function(t){let{ambientLight:i,pointLights:e=[],directionalLights:n=[]}=t;const o={};return o["lighting_uAmbientLight.color"]=i?r(i):[0,0,0],e.forEach(((t,i)=>{o["lighting_uPointLight[".concat(i,"].color")]=r(t),o["lighting_uPointLight[".concat(i,"].position")]=t.position,o["lighting_uPointLight[".concat(i,"].attenuation")]=t.attenuation||[1,0,0]})),o.lighting_uPointLightCount=e.length,n.forEach(((t,i)=>{o["lighting_uDirectionalLight[".concat(i,"].color")]=r(t),o["lighting_uDirectionalLight[".concat(i,"].direction")]=t.direction})),o.lighting_uDirectionalLightCount=n.length,o}({ambientLight:t,pointLights:e,directionalLights:n}),{lighting_uEnabled:!0}):{lighting_uEnabled:!1}}if("lights"in i){const e={pointLights:[],directionalLights:[]};for(const t of i.lights||[])switch(t.type){case"ambient":e.ambientLight=t;break;case"directional":e.directionalLights.push(t);break;case"point":e.pointLights.push(t)}return t({lightSources:e})}return{}},defines:{MAX_LIGHTS:3}},l="\nuniform float lighting_uAmbient;\nuniform float lighting_uDiffuse;\nuniform float lighting_uShininess;\nuniform vec3  lighting_uSpecularColor;\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\n    vec3 halfway_direction = normalize(light_direction + view_direction);\n    float lambertian = dot(light_direction, normal_worldspace);\n    float specular = 0.0;\n    if (lambertian > 0.0) {\n      float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\n      specular = pow(specular_angle, lighting_uShininess);\n    }\n    lambertian = max(lambertian, 0.0);\n    return (lambertian * lighting_uDiffuse * surfaceColor + specular * lighting_uSpecularColor) * color;\n}\n\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = surfaceColor;\n\n  if (lighting_uEnabled) {\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\n    lightColor = lighting_uAmbient * surfaceColor * lighting_uAmbientLight.color;\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting_uPointLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_uPointLight[i];\n      vec3 light_position_worldspace = pointLight.position;\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n    }\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting_uDirectionalLightCount) {\n        break;\n      }\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n    }\n  }\n  return lightColor;\n}\n\nvec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\n  vec3 lightColor = vec3(0, 0, 0);\n  vec3 surfaceColor = vec3(0, 0, 0);\n\n  if (lighting_uEnabled) {\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting_uPointLightCount) {\n        break;\n      }\n      PointLight pointLight = lighting_uPointLight[i];\n      vec3 light_position_worldspace = pointLight.position;\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\n    }\n\n    for (int i = 0; i < MAX_LIGHTS; i++) {\n      if (i >= lighting_uDirectionalLightCount) {\n        break;\n      }\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\n    }\n  }\n  return lightColor;\n}\n",g={};function s(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:g;if(!("material"in t))return{};const{material:i}=t;return i?function(t){const{ambient:i=.35,diffuse:e=.6,shininess:n=32,specularColor:o=[30,30,30]}=t;return{lighting_uAmbient:i,lighting_uDiffuse:e,lighting_uShininess:n,lighting_uSpecularColor:o.map((t=>t/255))}}(i):{lighting_uEnabled:!1}}const c={name:"gouraud-lighting",dependencies:[a],vs:l,defines:{LIGHTING_VERTEX:1},getUniforms:s},u={name:"phong-lighting",dependencies:[a],fs:l,defines:{LIGHTING_FRAGMENT:1},getUniforms:s}},58125:(t,i,e)=>{e.r(i),e.d(i,{default:()=>P,getLayer:()=>A});var n=e(204942),o=e(541576),r=e(643444),a=e(579543),l=Math.PI/3,g=[0,l,2*l,3*l,4*l,5*l];function s(t){return t[0]}function c(t){return t[1]}var u=e(260930),h=e(311959),d=e(389033);function p(){}const f={colorDomain:null,colorRange:a.K,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",value:0,min:0,max:100},upperPercentile:{type:"number",value:100,min:0,max:100},colorScaleType:"quantize",onSetColorDomain:p,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationLowerPercentile:{type:"number",value:0,min:0,max:100},elevationUpperPercentile:{type:"number",value:100,min:0,max:100},elevationScale:{type:"number",min:0,value:1},elevationScaleType:"linear",onSetElevationDomain:p,radius:{type:"number",value:1e3,min:1},coverage:{type:"number",min:0,max:1,value:1},extruded:!1,hexagonAggregator:function(t,i){const{data:e,radius:n}=t,{viewport:r,attributes:a}=i,h=e.length?function(t,i){const{attributes:e}=i,n=e.positions.value,{size:o}=e.positions.getAccessor();let r,a=1/0,l=1/0,g=-1/0,s=-1/0;for(r=0;r<o*t.length;r+=o){const t=n[r],i=n[r+1];Number.isFinite(t)&&Number.isFinite(i)&&(a=Math.min(t,a),g=Math.max(t,g),l=Math.min(i,l),s=Math.max(i,s))}return[a,l,g,s].every(Number.isFinite)?[(a+g)/2,(l+s)/2]:null}(e,i):null,d=function(t,i,e){const{unitsPerMeter:n}=i.getDistanceScales(e);return t*n[0]}(n,r,h),p=[],{iterable:f,objectInfo:_}=(0,u.jB)(e),v=a.positions.value,{size:m}=a.positions.getAccessor();for(const t of f){_.index++;const i=_.index*m,e=[v[i],v[i+1]];Number.isFinite(e[0])&&Number.isFinite(e[1])?p.push({screenCoord:r.projectFlat(e),source:t,index:_.index}):o.Z.warn("HexagonLayer: invalid position")()}const L=function(){var t,i,e,n=0,o=0,r=1,a=1,u=s,h=c;function d(t){var n,o={},r=[],a=t.length;for(n=0;n<a;++n)if(!isNaN(g=+u.call(null,l=t[n],n,t))&&!isNaN(s=+h.call(null,l,n,t))){var l,g,s,c=Math.round(s/=e),d=Math.round(g=g/i-(1&c)/2),p=s-c;if(3*Math.abs(p)>1){var f=g-d,_=d+(g<d?-1:1)/2,v=c+(s<c?-1:1),m=g-_,L=s-v;f*f+p*p>m*m+L*L&&(d=_+(1&c?1:-1)/2,c=v)}var b=d+"-"+c,C=o[b];C?C.push(l):(r.push(C=o[b]=[l]),C.x=(d+(1&c)/2)*i,C.y=c*e)}return r}function p(t){var i=0,e=0;return g.map((function(n){var o=Math.sin(n)*t,r=-Math.cos(n)*t,a=o-i,l=r-e;return i=o,e=r,[a,l]}))}return d.hexagon=function(i){return"m"+p(null==i?t:+i).join("l")+"z"},d.centers=function(){for(var l=[],g=Math.round(o/e),s=Math.round(n/i),c=g*e;c<a+t;c+=e,++g)for(var u=s*i+(1&g)*i/2;u<r+i/2;u+=i)l.push([u,c]);return l},d.mesh=function(){var i=p(t).slice(0,4).join("l");return d.centers().map((function(t){return"M"+t+"m"+i})).join("")},d.x=function(t){return arguments.length?(u=t,d):u},d.y=function(t){return arguments.length?(h=t,d):h},d.radius=function(n){return arguments.length?(i=2*(t=+n)*Math.sin(l),e=1.5*t,d):t},d.size=function(t){return arguments.length?(n=o=0,r=+t[0],a=+t[1],d):[r-n,a-o]},d.extent=function(t){return arguments.length?(n=+t[0][0],o=+t[0][1],r=+t[1][0],a=+t[1][1],d):[[n,o],[r,a]]},d.radius(1)}().radius(d).x((t=>t.screenCoord[0])).y((t=>t.screenCoord[1]));return{hexagons:L(p).map(((t,i)=>({position:r.unprojectFlat([t.x,t.y]),points:t,index:i}))),radiusCommon:d}},getPosition:{type:"accessor",value:t=>t.position},material:!0,_filterData:{type:"function",value:null,optional:!0}};class _ extends d.Z{constructor(...t){super(...t),(0,n.Z)(this,"state",void 0)}initializeState(){const t=new h.Z({getAggregator:t=>t.hexagonAggregator,getCellSize:t=>t.radius});this.state={cpuAggregator:t,aggregatorState:t.state,vertices:null},this.getAttributeManager().add({positions:{size:3,type:5130,accessor:"getPosition"}})}updateState(t){if(super.updateState(t),t.changeFlags.propsOrDataChanged){const i=this.state.cpuAggregator.updateState(t,{viewport:this.context.viewport,attributes:this.getAttributes()});if(this.state.aggregatorState.layerData!==i.layerData){const{hexagonVertices:t}=i.layerData||{};this.setState({vertices:t&&this.convertLatLngToMeterOffset(t)})}this.setState({aggregatorState:i})}}convertLatLngToMeterOffset(t){const{viewport:i}=this.context;if(Array.isArray(t)&&6===t.length){const e=t[0],n=t[3],o=[(e[0]+n[0])/2,(e[1]+n[1])/2],r=i.projectFlat(o),{metersPerUnit:a}=i.getDistanceScales(o);return t.map((t=>{const e=i.projectFlat(t);return[(e[0]-r[0])*a[0],(e[1]-r[1])*a[1]]}))}return o.Z.error("HexagonLayer: hexagonVertices needs to be an array of 6 points")(),null}getPickingInfo({info:t}){return this.state.cpuAggregator.getPickingInfo({info:t})}_onGetSublayerColor(t){return this.state.cpuAggregator.getAccessor("fillColor")(t)}_onGetSublayerElevation(t){return this.state.cpuAggregator.getAccessor("elevation")(t)}_getSublayerUpdateTriggers(){return this.state.cpuAggregator.getUpdateTriggers(this.props)}renderLayers(){const{elevationScale:t,extruded:i,coverage:e,material:n,transitions:o}=this.props,{aggregatorState:a,vertices:l}=this.state,g=this.getSubLayerClass("hexagon-cell",r.Z),s=this._getSublayerUpdateTriggers();return new g({...l?{vertices:l,radius:1}:{radius:a.layerData.radiusCommon||1,radiusUnits:"common",angle:90},diskResolution:6,elevationScale:t,extruded:i,coverage:e,material:n,getFillColor:this._onGetSublayerColor.bind(this),getElevation:this._onGetSublayerElevation.bind(this),transitions:o&&{getFillColor:o.getColorValue||o.getColorWeight,getElevation:o.getElevationValue||o.getElevationWeight}},this.getSubLayerProps({id:"hexagon-cell",updateTriggers:s}),{data:a.layerData.data})}}(0,n.Z)(_,"layerName","HexagonLayer"),(0,n.Z)(_,"defaultProps",f);var v=e(61988),m=e(328062),L=e(58371),b=e(363241),C=e(889503),S=e(589691),y=e(51805),w=e(135944);function x(t){return(0,w.BX)("div",{className:"deckgl-tooltip",children:[(0,w.tZ)(y.Z,{label:(0,v.t)("Centroid (Longitude and Latitude): "),value:`(${t.coordinate[0]}, ${t.coordinate[1]})`}),(0,w.tZ)(y.Z,{label:(0,v.t)("Height")+": ",value:`${t.object.elevationValue}`})]})}function A(t,i,e,n){const o=t,r=o.color_scheme,a=m.getScale(r).range().map((t=>(0,C.hexToRGB)(t)));let l=i.data.features;o.js_data_mutator&&(l=(0,b.Z)(o.js_data_mutator)(l));const g=(0,L.Z)(o.js_agg_function,(t=>null==t?void 0:t.weight));return new _({id:`hex-layer-${o.slice_id}`,data:l,radius:o.grid_size,extruded:o.extruded,colorRange:a,outline:!1,getElevationValue:g,getColorValue:g,...(0,L.N)(o,n,x)})}const P=(0,S.G)(A,(function(t){return t.map((t=>t.position))}))}}]);
//# sourceMappingURL=90617879ec7fbfbfcab3.chunk.js.map