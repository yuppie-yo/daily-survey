"use strict";(globalThis.webpackChunksuperset=globalThis.webpackChunksuperset||[]).push([[1877,5299],{885299:(t,e,i)=>{i.r(e),i.d(e,{DEFAULT_MAX_ZOOM:()=>g,DEFAULT_POINT_RADIUS:()=>m,default:()=>w});var o=i(667294),r=i(45697),n=i.n(r),s=i(490530),a=i(281458);function u(t,e){let i,o=e;return i=e?Math.round(t*(o=10**o))/o:Math.round(t),i}function h(t,e,i){const o=e*(Math.PI/180);return u(t/(40075.16*Math.cos(o)/2**(i+9)),2)}var p=i(135944);const l={aggregation:n().string,compositeOperation:n().string,dotRadius:n().number,lngLatAccessor:n().func,locations:n().arrayOf(n().object).isRequired,pointRadiusUnit:n().string,renderWhileDragging:n().bool,rgb:n().arrayOf(n().oneOfType([n().string,n().number])),zoom:n().number};class d extends o.PureComponent{constructor(t){super(t),this.redraw=this.redraw.bind(this)}drawText(t,e,i={}){const{fontHeight:o=0,label:r="",radius:n=0,rgb:s=[0,0,0],shadow:a=!1}=i,u=1.8*n,h=.2126*s[1]+.7152*s[2]+.0722*s[3];t.globalCompositeOperation="source-over",t.fillStyle=h<=110?"white":"black",t.font=`${o}px sans-serif`,t.textAlign="center",t.textBaseline="middle",a&&(t.shadowBlur=15,t.shadowColor=h<=110?"black":"");const p=t.measureText(r).width;if(p>u){const e=o/p;t.font=e*u+"px sans-serif"}const{compositeOperation:l}=this.props;t.fillText(r,e[0],e[1]),t.globalCompositeOperation=l,t.shadowBlur=0,t.shadowColor=""}redraw({width:t,height:e,ctx:i,isDragging:o,project:r}){const{aggregation:n,compositeOperation:s,dotRadius:a,lngLatAccessor:p,locations:l,pointRadiusUnit:d,renderWhileDragging:c,rgb:g,zoom:m}=this.props,f=a,v=[];l.forEach(((t,e)=>{t.properties.cluster&&(v[e]=((t,e)=>{const i=t.point_count;if(!e)return i;if("sum"===e||"min"===e||"max"===e)return t[e];const{sum:o}=t,r=o/i;if("mean"===e)return Math.round(100*r)/100;const{squaredSum:n}=t,s=n/i-(o/i)**2;return"var"===e?Math.round(100*s)/100:"stdev"===e?Math.round(100*Math.sqrt(s))/100:i})(t.properties,n))}),this);const b=Math.max(...v.filter((t=>!Number.isNaN(t))));i.clearRect(0,0,t,e),i.globalCompositeOperation=s,!c&&o||!l||l.forEach((function(o,n){const s=r(p(o)),a=[u(s[0],1),u(s[1],1)];if(a[0]+f>=0&&a[0]-f<t&&a[1]+f>=0&&a[1]-f<e)if(i.beginPath(),o.properties.cluster){let t=v[n];const e=u((t/b)**.5*f,1),o=u(.5*e,1),[r,s]=a,h=i.createRadialGradient(r,s,e,r,s,0);h.addColorStop(1,`rgba(${g[1]}, ${g[2]}, ${g[3]}, 0.8)`),h.addColorStop(0,`rgba(${g[1]}, ${g[2]}, ${g[3]}, 0)`),i.arc(a[0],a[1],e,0,2*Math.PI),i.fillStyle=h,i.fill(),Number.isFinite(parseFloat(t))&&(t>=1e4?t=`${Math.round(t/1e3)}k`:t>=1e3&&(t=Math.round(t/100)/10+"k"),this.drawText(i,a,{fontHeight:o,label:t,radius:e,rgb:g,shadow:!0}))}else{const t=f/6,e=o.properties.radius,r=o.properties.metric;let n,s=null===e?t:e;if(null!==e){const t=p(o)[1];"Kilometers"===d?(n=`${u(s,2)}km`,s=h(s,t,m)):"Miles"===d&&(n=`${u(s,2)}mi`,s=h(1.60934*s,t,m))}null!==r&&(n=Number.isFinite(parseFloat(r))?u(r,2):r),s||(s=t),i.arc(a[0],a[1],u(s,1),0,2*Math.PI),i.fillStyle=`rgb(${g[1]}, ${g[2]}, ${g[3]})`,i.fill(),void 0!==n&&this.drawText(i,a,{fontHeight:u(s,1),label:n,radius:s,rgb:g,shadow:!1})}}),this)}render(){return(0,p.tZ)(s.s0,{redraw:this.redraw})}}d.propTypes=l,d.defaultProps={compositeOperation:"source-over",dotRadius:4,lngLatAccessor:t=>[t[0],t[1]],renderWhileDragging:!0};const c=d,g=16,m=60,f={width:n().number,height:n().number,aggregatorName:n().string,clusterer:n().object,globalOpacity:n().number,hasCustomMetric:n().bool,mapStyle:n().string,mapboxApiKey:n().string.isRequired,onViewportChange:n().func,pointRadius:n().number,pointRadiusUnit:n().string,renderWhileDragging:n().bool,rgb:n().array,bounds:n().array},v={width:400,height:400,globalOpacity:1,onViewportChange:()=>{},pointRadius:m,pointRadiusUnit:"Pixels"};class b extends o.Component{constructor(t){super(t);const{width:e,height:i,bounds:o}=this.props,r=new a.Z({width:e,height:i}).fitBounds(o),{latitude:n,longitude:s,zoom:u}=r;this.state={viewport:{longitude:s,latitude:n,zoom:u}},this.handleViewportChange=this.handleViewportChange.bind(this)}handleViewportChange(t){this.setState({viewport:t});const{onViewportChange:e}=this.props;e(t)}render(){const{width:t,height:e,aggregatorName:i,clusterer:o,globalOpacity:r,mapStyle:n,mapboxApiKey:a,pointRadius:u,pointRadiusUnit:h,renderWhileDragging:l,rgb:d,hasCustomMetric:g,bounds:m}=this.props,{viewport:f}=this.state,v=void 0!==f.isDragging&&f.isDragging,b=.5*t/100,w=.5*e/100,x=[m[0][0]-b,m[0][1]-w,m[1][0]+b,m[1][1]+w],M=o.getClusters(x,Math.round(f.zoom));return(0,p.tZ)(s.ZP,{...f,mapStyle:n,width:t,height:e,mapboxApiAccessToken:a,onViewportChange:this.handleViewportChange,preserveDrawingBuffer:!0,children:(0,p.tZ)(c,{...f,isDragging:v,locations:M,dotRadius:u,pointRadiusUnit:h,rgb:d,globalOpacity:r,compositeOperation:"screen",renderWhileDragging:l,aggregation:g?i:null,lngLatAccessor:t=>{const{coordinates:e}=t.geometry;return[e[0],e[1]]}})})}}b.propTypes=f,b.defaultProps=v;const w=b},301877:(t,e,i)=>{function o(t,e,i,n,s,a){if(!(s-n<=i)){var u=Math.floor((n+s)/2);r(t,e,u,n,s,a%2),o(t,e,i,n,u-1,a+1),o(t,e,i,u+1,s,a+1)}}function r(t,e,i,o,s,a){for(;s>o;){if(s-o>600){var u=s-o+1,h=i-o+1,p=Math.log(u),l=.5*Math.exp(2*p/3),d=.5*Math.sqrt(p*l*(u-l)/u)*(h-u/2<0?-1:1);r(t,e,i,Math.max(o,Math.floor(i-h*l/u+d)),Math.min(s,Math.floor(i+(u-h)*l/u+d)),a)}var c=e[2*i+a],g=o,m=s;for(n(t,e,o,i),e[2*s+a]>c&&n(t,e,o,s);g<m;){for(n(t,e,g,m),g++,m--;e[2*g+a]<c;)g++;for(;e[2*m+a]>c;)m--}e[2*o+a]===c?n(t,e,o,m):n(t,e,++m,s),m<=i&&(o=m+1),i<=m&&(s=m-1)}}function n(t,e,i,o){s(t,i,o),s(e,2*i,2*o),s(e,2*i+1,2*o+1)}function s(t,e,i){var o=t[e];t[e]=t[i],t[i]=o}function a(t,e,i,o){var r=t-i,n=e-o;return r*r+n*n}function u(t,e,i,o,r){return new h(t,e,i,o,r)}function h(t,e,i,r,n){e=e||p,i=i||l,n=n||Array,this.nodeSize=r||64,this.points=t,this.ids=new n(t.length),this.coords=new n(2*t.length);for(var s=0;s<t.length;s++)this.ids[s]=s,this.coords[2*s]=e(t[s]),this.coords[2*s+1]=i(t[s]);o(this.ids,this.coords,this.nodeSize,0,this.ids.length-1,0)}function p(t){return t[0]}function l(t){return t[1]}function d(t){this.options=b(Object.create(this.options),t),this.trees=new Array(this.options.maxZoom+1)}function c(t,e,i,o,r){return{x:t,y:e,zoom:1/0,id:i,parentId:-1,numPoints:o,properties:r}}function g(t){return{type:"Feature",id:t.id,properties:m(t),geometry:{type:"Point",coordinates:[(o=t.x,360*(o-.5)),(e=t.y,i=(180-360*e)*Math.PI/180,360*Math.atan(Math.exp(i))/Math.PI-90)]}};var e,i,o}function m(t){var e=t.numPoints,i=e>=1e4?Math.round(e/1e3)+"k":e>=1e3?Math.round(e/100)/10+"k":e;return b(b({},t.properties),{cluster:!0,cluster_id:t.id,point_count:e,point_count_abbreviated:i})}function f(t){return t/360+.5}function v(t){var e=Math.sin(t*Math.PI/180),i=.5-.25*Math.log((1+e)/(1-e))/Math.PI;return i<0?0:i>1?1:i}function b(t,e){for(var i in e)t[i]=e[i];return t}function w(t){return t.x}function x(t){return t.y}i.r(e),i.d(e,{default:()=>C}),h.prototype={range:function(t,e,i,o){return function(t,e,i,o,r,n,s){for(var a,u,h=[0,t.length-1,0],p=[];h.length;){var l=h.pop(),d=h.pop(),c=h.pop();if(d-c<=s)for(var g=c;g<=d;g++)a=e[2*g],u=e[2*g+1],a>=i&&a<=r&&u>=o&&u<=n&&p.push(t[g]);else{var m=Math.floor((c+d)/2);a=e[2*m],u=e[2*m+1],a>=i&&a<=r&&u>=o&&u<=n&&p.push(t[m]);var f=(l+1)%2;(0===l?i<=a:o<=u)&&(h.push(c),h.push(m-1),h.push(f)),(0===l?r>=a:n>=u)&&(h.push(m+1),h.push(d),h.push(f))}}return p}(this.ids,this.coords,t,e,i,o,this.nodeSize)},within:function(t,e,i){return function(t,e,i,o,r,n){for(var s=[0,t.length-1,0],u=[],h=r*r;s.length;){var p=s.pop(),l=s.pop(),d=s.pop();if(l-d<=n)for(var c=d;c<=l;c++)a(e[2*c],e[2*c+1],i,o)<=h&&u.push(t[c]);else{var g=Math.floor((d+l)/2),m=e[2*g],f=e[2*g+1];a(m,f,i,o)<=h&&u.push(t[g]);var v=(p+1)%2;(0===p?i-r<=m:o-r<=f)&&(s.push(d),s.push(g-1),s.push(v)),(0===p?i+r>=m:o+r>=f)&&(s.push(g+1),s.push(l),s.push(v))}}return u}(this.ids,this.coords,t,e,i,this.nodeSize)}},d.prototype={options:{minZoom:0,maxZoom:16,radius:40,extent:512,nodeSize:64,log:!1,reduce:null,initial:function(){return{}},map:function(t){return t}},load:function(t){var e=this.options.log;e&&console.time("total time");var i="prepare "+t.length+" points";e&&console.time(i),this.points=t;for(var o,r,n=[],s=0;s<t.length;s++)t[s].geometry&&n.push((o=s,void 0,{x:f((r=t[s].geometry.coordinates)[0]),y:v(r[1]),zoom:1/0,index:o,parentId:-1}));this.trees[this.options.maxZoom+1]=u(n,w,x,this.options.nodeSize,Float32Array),e&&console.timeEnd(i);for(var a=this.options.maxZoom;a>=this.options.minZoom;a--){var h=+Date.now();n=this._cluster(n,a),this.trees[a]=u(n,w,x,this.options.nodeSize,Float32Array),e&&console.log("z%d: %d clusters in %dms",a,n.length,+Date.now()-h)}return e&&console.timeEnd("total time"),this},getClusters:function(t,e){var i=((t[0]+180)%360+360)%360-180,o=Math.max(-90,Math.min(90,t[1])),r=180===t[2]?180:((t[2]+180)%360+360)%360-180,n=Math.max(-90,Math.min(90,t[3]));if(t[2]-t[0]>=360)i=-180,r=180;else if(i>r){var s=this.getClusters([i,o,180,n],e),a=this.getClusters([-180,o,r,n],e);return s.concat(a)}for(var u=this.trees[this._limitZoom(e)],h=u.range(f(i),v(n),f(r),v(o)),p=[],l=0;l<h.length;l++){var d=u.points[h[l]];p.push(d.numPoints?g(d):this.points[d.index])}return p},getChildren:function(t){var e=t>>5,i=t%32,o="No cluster with the specified id.",r=this.trees[i];if(!r)throw new Error(o);var n=r.points[e];if(!n)throw new Error(o);for(var s=this.options.radius/(this.options.extent*Math.pow(2,i-1)),a=r.within(n.x,n.y,s),u=[],h=0;h<a.length;h++){var p=r.points[a[h]];p.parentId===t&&u.push(p.numPoints?g(p):this.points[p.index])}if(0===u.length)throw new Error(o);return u},getLeaves:function(t,e,i){e=e||10,i=i||0;var o=[];return this._appendLeaves(o,t,e,i,0),o},getTile:function(t,e,i){var o=this.trees[this._limitZoom(t)],r=Math.pow(2,t),n=this.options.extent,s=this.options.radius/n,a=(i-s)/r,u=(i+1+s)/r,h={features:[]};return this._addTileFeatures(o.range((e-s)/r,a,(e+1+s)/r,u),o.points,e,i,r,h),0===e&&this._addTileFeatures(o.range(1-s/r,a,1,u),o.points,r,i,r,h),e===r-1&&this._addTileFeatures(o.range(0,a,s/r,u),o.points,-1,i,r,h),h.features.length?h:null},getClusterExpansionZoom:function(t){for(var e=t%32-1;e<this.options.maxZoom;){var i=this.getChildren(t);if(e++,1!==i.length)break;t=i[0].properties.cluster_id}return e},_appendLeaves:function(t,e,i,o,r){for(var n=this.getChildren(e),s=0;s<n.length;s++){var a=n[s].properties;if(a&&a.cluster?r+a.point_count<=o?r+=a.point_count:r=this._appendLeaves(t,a.cluster_id,i,o,r):r<o?r++:t.push(n[s]),t.length===i)break}return r},_addTileFeatures:function(t,e,i,o,r,n){for(var s=0;s<t.length;s++){var a=e[t[s]],u={type:1,geometry:[[Math.round(this.options.extent*(a.x*r-i)),Math.round(this.options.extent*(a.y*r-o))]],tags:a.numPoints?m(a):this.points[a.index].properties},h=a.numPoints?a.id:this.points[a.index].id;void 0!==h&&(u.id=h),n.features.push(u)}},_limitZoom:function(t){return Math.max(this.options.minZoom,Math.min(t,this.options.maxZoom+1))},_cluster:function(t,e){for(var i=[],o=this.options.radius/(this.options.extent*Math.pow(2,e)),r=0;r<t.length;r++){var n=t[r];if(!(n.zoom<=e)){n.zoom=e;var s=this.trees[e+1],a=s.within(n.x,n.y,o),u=n.numPoints||1,h=n.x*u,p=n.y*u,l=null;this.options.reduce&&(l=this.options.initial(),this._accumulate(l,n));for(var d=(r<<5)+(e+1),g=0;g<a.length;g++){var m=s.points[a[g]];if(!(m.zoom<=e)){m.zoom=e;var f=m.numPoints||1;h+=m.x*f,p+=m.y*f,u+=f,m.parentId=d,this.options.reduce&&this._accumulate(l,m)}}1===u?i.push(n):(n.parentId=d,i.push(c(h/u,p/u,d,u,l)))}}return i},_accumulate:function(t,e){var i=e.numPoints?e.properties:this.options.map(this.points[e.index].properties);this.options.reduce(t,i)}};var M=i(885299);const y=()=>{};function C(t){const{width:e,height:i,formData:o,hooks:r,queriesData:n}=t,{onError:s=y,setControlValue:a=y}=r,{bounds:u,geoJSON:h,hasCustomMetric:p,mapboxApiKey:l}=n[0].data,{clusteringRadius:c,globalOpacity:g,mapboxColor:m,mapboxStyle:f,pandasAggfunc:v,pointRadius:b,pointRadiusUnit:w,renderWhileDragging:x}=o,C=/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/.exec(m);if(null===C)return s("Color field must be of form 'rgb(%d, %d, %d)'"),{};const _={maxZoom:M.DEFAULT_MAX_ZOOM,radius:c};p&&(_.initial=()=>({sum:0,squaredSum:0,min:1/0,max:-1/0}),_.map=t=>({sum:t.metric,squaredSum:t.metric**2,min:t.metric,max:t.metric}),_.reduce=(t,e)=>{t.sum+=e.sum,t.squaredSum+=e.squaredSum,t.min=Math.min(t.min,e.min),t.max=Math.max(t.max,e.max)});const S=new d(_);return S.load(h.features),{width:e,height:i,aggregatorName:v,bounds:u,clusterer:S,globalOpacity:g,hasCustomMetric:p,mapboxApiKey:l,mapStyle:f,onViewportChange({latitude:t,longitude:e,zoom:i}){a("viewport_longitude",e),a("viewport_latitude",t),a("viewport_zoom",i)},pointRadius:"Auto"===b?M.DEFAULT_POINT_RADIUS:b,pointRadiusUnit:w,renderWhileDragging:x,rgb:C}}}}]);
//# sourceMappingURL=edc450424737a7a5c013.chunk.js.map