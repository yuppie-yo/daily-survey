{"version":3,"file":"a2fd68e11e66304dec46.chunk.js","mappings":"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","sources":["webpack://superset/../../../src/lib/composite-layer.ts","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/components/Tooltip.tsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/TooltipRow.tsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/Geojson/Geojson.tsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/layers/common.tsx","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/colors.ts","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/computeBoundsFromPoints.ts","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/fitViewport.ts","webpack://superset/./plugins/legacy-preset-chart-deckgl/src/utils/sandbox.ts"],"sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport Layer, {UpdateParameters} from './layer';\nimport debug from '../debug';\nimport {flatten} from '../utils/flatten';\n\nimport type AttributeManager from './attribute/attribute-manager';\nimport type {PickingInfo, GetPickingInfoParams} from './picking/pick-info';\nimport type {FilterContext} from '../passes/layers-pass';\nimport type {LayersList, LayerContext} from './layer-manager';\nimport type {CompositeLayerProps, Accessor, AccessorContext} from '../types/layer-props';\nimport {ConstructorOf} from '../types/types';\nimport {PROP_TYPES_SYMBOL} from '../lifecycle/constants';\n\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\n\nexport default abstract class CompositeLayer<PropsT extends {} = {}> extends Layer<\n  PropsT & Required<CompositeLayerProps>\n> {\n  static layerName: string = 'CompositeLayer';\n\n  /** `true` if this layer renders other layers */\n  get isComposite(): boolean {\n    return true;\n  }\n\n  /** Returns true if all async resources are loaded */\n  get isLoaded(): boolean {\n    return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n  }\n\n  /** Return last rendered sub layers */\n  getSubLayers(): Layer[] {\n    return (this.internalState && this.internalState.subLayers) || [];\n  }\n\n  // initializeState is usually not needed for composite layers\n  // Provide empty definition to disable check for missing definition\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  initializeState(context: LayerContext): void {}\n\n  /** Updates selected state members and marks the composite layer to need rerender */\n  setState(updateObject: any): void {\n    super.setState(updateObject);\n    // Trigger a layer update\n    // Although conceptually layer.draw and compositeLayer.renderLayers are equivalent,\n    // they are executed during different lifecycles.\n    // draw can be called without calling updateState (e.g. most viewport changes),\n    // while renderLayers can only be called during a recursive layer update.\n    this.setNeedsUpdate();\n  }\n\n  /** called to augment the info object that is bubbled up from a sublayer\n      override Layer.getPickingInfo() because decoding / setting uniform do\n      not apply to a composite layer. */\n  getPickingInfo({info}: GetPickingInfoParams): PickingInfo {\n    const {object} = info;\n    const isDataWrapped =\n      object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    // override object with picked data\n    info.object = object.__source.object;\n    info.index = object.__source.index;\n\n    return info;\n  }\n\n  // Implement to generate subLayers\n  abstract renderLayers(): Layer | null | LayersList;\n\n  /**\n   * Filters sub layers at draw time. Return true if the sub layer should be drawn.\n   */\n  filterSubLayer(context: FilterContext): boolean {\n    return true;\n  }\n\n  /** Returns true if sub layer needs to be rendered */\n  protected shouldRenderSubLayer(subLayerId: string, data: any): boolean {\n    return data && data.length;\n  }\n\n  /** Returns sub layer class for a specific sublayer */\n  protected getSubLayerClass<T extends Layer>(\n    subLayerId: string,\n    DefaultLayerClass: ConstructorOf<T>\n  ): ConstructorOf<T> {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (\n      (overridingProps &&\n        overridingProps[subLayerId] &&\n        (overridingProps[subLayerId].type as ConstructorOf<T>)) ||\n      DefaultLayerClass\n    );\n  }\n\n  /** When casting user data into another format to pass to sublayers,\n      add reference to the original object and object index */\n  protected getSubLayerRow<T>(row: T, sourceObject: any, sourceObjectIndex: number): T {\n    // @ts-ignore (TS2339) adding undefined property\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  /** Some composite layers cast user data into another format before passing to sublayers\n    We need to unwrap them before calling the accessor so that they see the original data\n    objects */\n  protected getSubLayerAccessor<In, Out>(accessor: Accessor<In, Out>): Accessor<In, Out> {\n    if (typeof accessor === 'function') {\n      const objectInfo: AccessorContext<In> = {\n        index: -1,\n        // @ts-ignore accessing resolved data\n        data: this.props.data,\n        target: []\n      };\n      return (x: any, i: AccessorContext<In>) => {\n        if (x && x.__source) {\n          objectInfo.index = x.__source.index;\n          // @ts-ignore (TS2349) Out is never a function\n          return accessor(x.__source.object as In, objectInfo);\n        }\n        // @ts-ignore (TS2349) Out is never a function\n        return accessor(x as In, i);\n      };\n    }\n    return accessor;\n  }\n\n  /** Returns sub layer props for a specific sublayer */\n  // eslint-disable-next-line complexity\n  protected getSubLayerProps(\n    sublayerProps: {\n      id?: string;\n      updateTriggers?: Record<string, any>;\n      [propName: string]: any;\n    } = {}\n  ): any {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      operation,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      id: '',\n      updateTriggers: {},\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      operation\n    };\n\n    const overridingSublayerProps =\n      overridingProps && sublayerProps.id && overridingProps[sublayerProps.id];\n    const overridingSublayerTriggers =\n      overridingSublayerProps && overridingSublayerProps.updateTriggers;\n    const sublayerId = sublayerProps.id || 'sublayer';\n\n    if (overridingSublayerProps) {\n      const propTypes = this.props[PROP_TYPES_SYMBOL];\n      const subLayerPropTypes = sublayerProps.type ? sublayerProps.type._propTypes : {};\n      for (const key in overridingSublayerProps) {\n        const propType = subLayerPropTypes[key] || propTypes[key];\n        // eslint-disable-next-line\n        if (propType && propType.type === 'accessor') {\n          overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n        }\n      }\n    }\n\n    Object.assign(\n      newProps,\n      sublayerProps,\n      // experimental feature that allows users to override sublayer props via parent layer prop\n      overridingSublayerProps\n    );\n    newProps.id = `${this.props.id}-${sublayerId}`;\n    newProps.updateTriggers = {\n      all: this.props.updateTriggers?.all,\n      ...sublayerProps.updateTriggers,\n      ...overridingSublayerTriggers\n    };\n\n    // Pass through extension props\n    // @ts-ignore (TS2532) extensions is always defined after merging with default props\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n      if (passThroughProps) {\n        Object.assign(newProps, passThroughProps, {\n          updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n        });\n      }\n    }\n\n    return newProps;\n  }\n\n  /** Update sub layers to highlight the hovered object */\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    for (const layer of this.getSubLayers()) {\n      layer.updateAutoHighlight(info);\n    }\n  }\n\n  /** Override base Layer method */\n  protected _getAttributeManager(): AttributeManager | null {\n    return null;\n  }\n\n  /** (Internal) Called after an update to rerender sub layers */\n  protected _postUpdate(updateParams: UpdateParameters<this>, forceUpdate: boolean) {\n    // @ts-ignore (TS2531) this method is only called internally when internalState is defined\n    let subLayers = this.internalState.subLayers as Layer[];\n    const shouldUpdate = !subLayers || this.needsUpdate();\n    if (shouldUpdate) {\n      const subLayersList = this.renderLayers();\n      // Flatten the returned array, removing any null, undefined or false\n      // this allows layers to render sublayers conditionally\n      // (see CompositeLayer.renderLayers docs)\n      subLayers = flatten(subLayersList, Boolean) as Layer[];\n      // @ts-ignore (TS2531) this method is only called internally when internalState is defined\n      this.internalState.subLayers = subLayers;\n    }\n    debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n    // populate reference to parent layer (this layer)\n    // NOTE: needs to be done even when reusing layers as the parent may have changed\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled, safeHtmlSpan } from '@superset-ui/core';\nimport { ReactNode } from 'react';\n\nexport type TooltipProps = {\n  tooltip:\n    | {\n        x: number;\n        y: number;\n        content: ReactNode;\n      }\n    | null\n    | undefined;\n};\n\nconst StyledDiv = styled.div<{ top: number; left: number }>`\n  ${({ theme, top, left }) => `\n    position: absolute;\n    top: ${top}px;\n    left: ${left}px;\n    padding: ${theme.gridUnit * 2}px;\n    margin: ${theme.gridUnit * 2}px;\n    background: ${theme.colors.grayscale.dark2};\n    color: ${theme.colors.grayscale.light5};\n    maxWidth: 300px;\n    fontSize: ${theme.typography.sizes.s}px;\n    zIndex: 9;\n    pointerEvents: none;\n  `}\n`;\n\nexport default function Tooltip(props: TooltipProps) {\n  const { tooltip } = props;\n  if (typeof tooltip === 'undefined' || tooltip === null) {\n    return null;\n  }\n\n  const { x, y, content } = tooltip;\n  const safeContent =\n    typeof content === 'string' ? safeHtmlSpan(content) : content;\n\n  return (\n    <StyledDiv top={y} left={x}>\n      {safeContent}\n    </StyledDiv>\n  );\n}\n","/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/forbid-prop-types */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  forwardRef,\n  memo,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport { isEqual } from 'lodash';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL, { Layer } from 'deck.gl/typed';\nimport { JsonObject, JsonValue, styled, usePrevious } from '@superset-ui/core';\nimport Tooltip, { TooltipProps } from './components/Tooltip';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Viewport } from './utils/fitViewport';\n\nconst TICK = 250; // milliseconds\n\nexport type DeckGLContainerProps = {\n  viewport: Viewport;\n  setControlValue?: (control: string, value: JsonValue) => void;\n  mapStyle?: string;\n  mapboxApiAccessToken: string;\n  children?: ReactNode;\n  width: number;\n  height: number;\n  layers: (Layer | (() => Layer))[];\n  onViewportChange?: (viewport: Viewport) => void;\n};\n\nexport const DeckGLContainer = memo(\n  forwardRef((props: DeckGLContainerProps, ref) => {\n    const [tooltip, setTooltip] = useState<TooltipProps['tooltip']>(null);\n    const [lastUpdate, setLastUpdate] = useState<number | null>(null);\n    const [viewState, setViewState] = useState(props.viewport);\n    const prevViewport = usePrevious(props.viewport);\n\n    useImperativeHandle(ref, () => ({ setTooltip }), []);\n\n    const tick = useCallback(() => {\n      // Rate limiting updating viewport controls as it triggers lots of renders\n      if (lastUpdate && Date.now() - lastUpdate > TICK) {\n        const setCV = props.setControlValue;\n        if (setCV) {\n          setCV('viewport', viewState);\n        }\n        setLastUpdate(null);\n      }\n    }, [lastUpdate, props.setControlValue, viewState]);\n\n    useEffect(() => {\n      const timer = setInterval(tick, TICK);\n      return clearInterval(timer);\n    }, [tick]);\n\n    useEffect(() => {\n      if (!isEqual(props.viewport, prevViewport)) {\n        setViewState(props.viewport);\n      }\n    }, [prevViewport, props.viewport]);\n\n    const onViewStateChange = useCallback(\n      ({ viewState }: { viewState: JsonObject }) => {\n        setViewState(viewState as Viewport);\n        setLastUpdate(Date.now());\n      },\n      [],\n    );\n\n    const layers = useCallback(() => {\n      // Support for layer factory\n      if (props.layers.some(l => typeof l === 'function')) {\n        return props.layers.map(l =>\n          typeof l === 'function' ? l() : l,\n        ) as Layer[];\n      }\n\n      return props.layers as Layer[];\n    }, [props.layers]);\n\n    const { children = null, height, width } = props;\n\n    return (\n      <>\n        <div style={{ position: 'relative', width, height }}>\n          <DeckGL\n            controller\n            width={width}\n            height={height}\n            layers={layers()}\n            viewState={viewState}\n            glOptions={{ preserveDrawingBuffer: true }}\n            onViewStateChange={onViewStateChange}\n          >\n            <StaticMap\n              preserveDrawingBuffer\n              mapStyle={props.mapStyle || 'light'}\n              mapboxApiAccessToken={props.mapboxApiAccessToken}\n            />\n          </DeckGL>\n          {children}\n        </div>\n        <Tooltip tooltip={tooltip} />\n      </>\n    );\n  }),\n);\n\nexport const DeckGLContainerStyledWrapper = styled(DeckGLContainer)`\n  .deckgl-tooltip > div {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport type DeckGLContainerHandle = typeof DeckGLContainer & {\n  setTooltip: (tooltip: ReactNode) => void;\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\ntype TooltipRowProps = {\n  label: string;\n  value: string;\n};\n\nconst TooltipRow = ({ label, value }: TooltipRowProps) => (\n  <div>\n    {label}\n    <strong>{value}</strong>\n  </div>\n);\n\nexport default TooltipRow;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { memo, useCallback, useMemo, useRef } from 'react';\nimport { GeoJsonLayer } from 'deck.gl/typed';\nimport geojsonExtent from '@mapbox/geojson-extent';\nimport {\n  HandlerFunction,\n  JsonObject,\n  JsonValue,\n  QueryFormData,\n} from '@superset-ui/core';\n\nimport {\n  DeckGLContainerHandle,\n  DeckGLContainerStyledWrapper,\n} from '../../DeckGLContainer';\nimport { hexToRGB } from '../../utils/colors';\nimport sandboxedEval from '../../utils/sandbox';\nimport { commonLayerProps } from '../common';\nimport TooltipRow from '../../TooltipRow';\nimport fitViewport, { Viewport } from '../../utils/fitViewport';\nimport { TooltipProps } from '../../components/Tooltip';\n\nconst propertyMap = {\n  fillColor: 'fillColor',\n  color: 'fillColor',\n  fill: 'fillColor',\n  'fill-color': 'fillColor',\n  strokeColor: 'strokeColor',\n  'stroke-color': 'strokeColor',\n  'stroke-width': 'strokeWidth',\n};\n\nconst alterProps = (props: JsonObject, propOverrides: JsonObject) => {\n  const newProps: JsonObject = {};\n  Object.keys(props).forEach(k => {\n    if (k in propertyMap) {\n      newProps[propertyMap[k]] = props[k];\n    } else {\n      newProps[k] = props[k];\n    }\n  });\n  if (typeof props.fillColor === 'string') {\n    newProps.fillColor = hexToRGB(props.fillColor);\n  }\n  if (typeof props.strokeColor === 'string') {\n    newProps.strokeColor = hexToRGB(props.strokeColor);\n  }\n\n  return {\n    ...newProps,\n    ...propOverrides,\n  };\n};\nlet features: JsonObject[];\nconst recurseGeoJson = (\n  node: JsonObject,\n  propOverrides: JsonObject,\n  extraProps?: JsonObject,\n) => {\n  if (node?.features) {\n    node.features.forEach((obj: JsonObject) => {\n      recurseGeoJson(obj, propOverrides, node.extraProps || extraProps);\n    });\n  }\n  if (node?.geometry) {\n    const newNode = {\n      ...node,\n      properties: alterProps(node.properties, propOverrides),\n    } as JsonObject;\n    if (!newNode.extraProps) {\n      newNode.extraProps = extraProps;\n    }\n    features.push(newNode);\n  }\n};\n\nfunction setTooltipContent(o: JsonObject) {\n  return (\n    o.object?.extraProps && (\n      <div className=\"deckgl-tooltip\">\n        {Object.keys(o.object.extraProps).map((prop, index) => (\n          <TooltipRow\n            key={`prop-${index}`}\n            label={`${prop}: `}\n            value={`${o.object.extraProps?.[prop]}`}\n          />\n        ))}\n      </div>\n    )\n  );\n}\n\nconst getFillColor = (feature: JsonObject) => feature?.properties?.fillColor;\nconst getLineColor = (feature: JsonObject) => feature?.properties?.strokeColor;\n\nexport function getLayer(\n  formData: QueryFormData,\n  payload: JsonObject,\n  onAddFilter: HandlerFunction,\n  setTooltip: (tooltip: TooltipProps['tooltip']) => void,\n) {\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  const fillColor = [fc.r, fc.g, fc.b, 255 * fc.a];\n  const strokeColor = [sc.r, sc.g, sc.b, 255 * sc.a];\n  const propOverrides: JsonObject = {};\n  if (fillColor[3] > 0) {\n    propOverrides.fillColor = fillColor;\n  }\n  if (strokeColor[3] > 0) {\n    propOverrides.strokeColor = strokeColor;\n  }\n\n  features = [];\n  recurseGeoJson(payload.data, propOverrides);\n\n  let jsFnMutator;\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    features = jsFnMutator(features);\n  }\n\n  return new GeoJsonLayer({\n    id: `geojson-layer-${fd.slice_id}` as const,\n    data: features,\n    extruded: fd.extruded,\n    filled: fd.filled,\n    stroked: fd.stroked,\n    getFillColor,\n    getLineColor,\n    getLineWidth: fd.line_width || 1,\n    pointRadiusScale: fd.point_radius_scale,\n    lineWidthUnits: fd.line_width_unit,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nexport type DeckGLGeoJsonProps = {\n  formData: QueryFormData;\n  payload: JsonObject;\n  setControlValue: (control: string, value: JsonValue) => void;\n  viewport: Viewport;\n  onAddFilter: HandlerFunction;\n  height: number;\n  width: number;\n};\n\nconst DeckGLGeoJson = (props: DeckGLGeoJsonProps) => {\n  const containerRef = useRef<DeckGLContainerHandle>();\n  const setTooltip = useCallback((tooltip: TooltipProps['tooltip']) => {\n    const { current } = containerRef;\n    if (current) {\n      current.setTooltip(tooltip);\n    }\n  }, []);\n\n  const { formData, payload, setControlValue, onAddFilter, height, width } =\n    props;\n\n  const viewport: Viewport = useMemo(() => {\n    if (formData.autozoom) {\n      const points =\n        payload?.data?.features?.reduce?.(\n          (acc: [number, number, number, number][], feature: any) => {\n            const bounds = geojsonExtent(feature);\n            if (bounds) {\n              return [...acc, [bounds[0], bounds[1]], [bounds[2], bounds[3]]];\n            }\n\n            return acc;\n          },\n          [],\n        ) || [];\n\n      if (points.length) {\n        return fitViewport(props.viewport, {\n          width,\n          height,\n          points,\n        });\n      }\n    }\n    return props.viewport;\n  }, [\n    formData.autozoom,\n    height,\n    payload?.data?.features,\n    props.viewport,\n    width,\n  ]);\n\n  const layer = getLayer(formData, payload, onAddFilter, setTooltip);\n\n  return (\n    <DeckGLContainerStyledWrapper\n      ref={containerRef}\n      mapboxApiAccessToken={payload.data.mapboxApiKey}\n      viewport={viewport}\n      layers={[layer]}\n      mapStyle={formData.mapbox_style}\n      setControlValue={setControlValue}\n      height={height}\n      width={width}\n    />\n  );\n};\n\nexport default memo(DeckGLGeoJson);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactNode } from 'react';\nimport * as d3array from 'd3-array';\nimport { JsonObject, JsonValue, QueryFormData } from '@superset-ui/core';\nimport sandboxedEval from '../utils/sandbox';\nimport { TooltipProps } from '../components/Tooltip';\n\nexport function commonLayerProps(\n  formData: QueryFormData,\n  setTooltip: (tooltip: TooltipProps['tooltip']) => void,\n  setTooltipContent: (content: JsonObject) => ReactNode,\n  onSelect?: (value: JsonValue) => void,\n) {\n  const fd = formData;\n  let onHover;\n  let tooltipContentGenerator = setTooltipContent;\n  if (fd.js_tooltip) {\n    tooltipContentGenerator = sandboxedEval(fd.js_tooltip);\n  }\n  if (tooltipContentGenerator) {\n    onHover = (o: JsonObject) => {\n      if (o.picked) {\n        setTooltip({\n          content: tooltipContentGenerator(o),\n          x: o.x,\n          y: o.y,\n        });\n      } else {\n        setTooltip(null);\n      }\n      return true;\n    };\n  }\n  let onClick;\n  if (fd.js_onclick_href) {\n    onClick = (o: any) => {\n      const href = sandboxedEval(fd.js_onclick_href)(o);\n      window.open(href);\n      return true;\n    };\n  } else if (fd.table_filter && onSelect !== undefined) {\n    onClick = (o: any) => {\n      onSelect(o.object[fd.line_column]);\n      return true;\n    };\n  }\n\n  return {\n    onClick,\n    onHover,\n    pickable: Boolean(onHover),\n  };\n}\n\nconst percentiles = {\n  p1: 0.01,\n  p5: 0.05,\n  p95: 0.95,\n  p99: 0.99,\n};\n\n/* Get a stat function that operates on arrays, aligns with control=js_agg_function  */\nexport function getAggFunc(\n  type = 'sum',\n  accessor: ((object: any) => number | undefined) | null = null,\n) {\n  if (type === 'count') {\n    return (arr: number[]) => arr.length;\n  }\n  let d3func: (\n    iterable: Array<unknown>,\n    accessor?: (object: JsonObject) => number | undefined,\n  ) => number[] | number | undefined;\n  if (type in percentiles) {\n    d3func = (arr, acc: (object: JsonObject) => number | undefined) => {\n      let sortedArr;\n      if (accessor) {\n        sortedArr = arr.sort((o1: JsonObject, o2: JsonObject) =>\n          d3array.ascending(accessor(o1), accessor(o2)),\n        );\n      } else {\n        sortedArr = arr.sort(d3array.ascending);\n      }\n\n      return d3array.quantile(sortedArr, percentiles[type], acc);\n    };\n  } else {\n    d3func = d3array[type];\n  }\n  if (!accessor) {\n    return (arr: JsonObject[]) => d3func(arr);\n  }\n\n  return (arr: JsonObject[]) => d3func(arr.map(x => accessor(x)));\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { rgb } from 'd3-color';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function hexToRGB(\n  hex: string | undefined,\n  alpha = 255,\n): [number, number, number, number] {\n  if (!hex) {\n    return [0, 0, 0, alpha];\n  }\n  const { r, g, b } = rgb(hex);\n\n  return [r, g, b, alpha];\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { extent as d3Extent } from 'd3-array';\nimport { Point, Range } from '../types';\n\nconst LAT_LIMIT: Range = [-90, 90];\nconst LNG_LIMIT: Range = [-180, 180];\n\n/**\n * Expand a coordinate range by `padding` and within limits, if needed\n */\nfunction expandIfNeeded(\n  [curMin, curMax]: Range,\n  [minBound, maxBound]: Range,\n  padding = 0.25,\n) {\n  return curMin < curMax\n    ? [curMin, curMax]\n    : [\n        Math.max(minBound, curMin - padding),\n        Math.min(maxBound, curMax + padding),\n      ];\n}\n\nexport default function computeBoundsFromPoints(\n  points: Point[],\n): [Point, Point] {\n  const latBounds = expandIfNeeded(\n    d3Extent(points, (x: Point) => x[1]) as Range,\n    LAT_LIMIT,\n  );\n  const lngBounds = expandIfNeeded(\n    d3Extent(points, (x: Point) => x[0]) as Range,\n    LNG_LIMIT,\n  );\n  return [\n    [lngBounds[0], latBounds[0]],\n    [lngBounds[1], latBounds[1]],\n  ];\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { fitBounds } from '@math.gl/web-mercator';\nimport computeBoundsFromPoints from './computeBoundsFromPoints';\nimport { Point } from '../types';\n\nexport type Viewport = {\n  longitude: number;\n  latitude: number;\n  zoom: number;\n  bearing?: number;\n  pitch?: number;\n};\n\nexport type FitViewportOptions = {\n  points: Point[];\n  width: number;\n  height: number;\n  minExtent?: number;\n  maxZoom?: number;\n  offset?: [number, number];\n  padding?: number;\n};\n\nexport default function fitViewport(\n  originalViewPort: Viewport,\n  {\n    points,\n    width,\n    height,\n    minExtent,\n    maxZoom,\n    offset,\n    padding = 20,\n  }: FitViewportOptions,\n): Viewport {\n  const { bearing, pitch } = originalViewPort;\n  const bounds = computeBoundsFromPoints(points);\n\n  try {\n    return {\n      ...fitBounds({\n        bounds,\n        width,\n        height,\n        minExtent,\n        maxZoom,\n        offset,\n        padding,\n      }),\n      bearing,\n      pitch,\n    };\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Could not fit viewport', error);\n  }\n\n  return originalViewPort;\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// A safe alternative to JS's eval\nimport vm, { Context, RunningScriptOptions } from 'vm';\nimport _ from 'underscore';\nimport * as d3array from 'd3-array';\nimport * as colors from './colors';\n\n// Objects exposed here should be treated like a public API\n// if `underscore` had backwards incompatible changes in a future release, we'd\n// have to be careful about bumping the library as those changes could break user charts\nconst GLOBAL_CONTEXT = {\n  console,\n  _,\n  colors,\n  d3array,\n};\n\n// Copied/modified from https://github.com/hacksparrow/safe-eval/blob/master/index.js\nexport default function sandboxedEval(\n  code: string,\n  context?: Context,\n  opts?: RunningScriptOptions | string,\n) {\n  const sandbox = {};\n  const resultKey = `SAFE_EVAL_${Math.floor(Math.random() * 1000000)}`;\n  sandbox[resultKey] = {};\n  const codeToEval = `${resultKey}=${code}`;\n  const sandboxContext = { ...GLOBAL_CONTEXT, ...context };\n  Object.keys(sandboxContext).forEach(key => {\n    sandbox[key] = sandboxContext[key];\n  });\n  try {\n    vm.runInNewContext(codeToEval, sandbox, opts);\n\n    return sandbox[resultKey];\n  } catch (error) {\n    return () => error;\n  }\n}\n"],"names":["CompositeLayer","Layer","isComposite","isLoaded","super","this","getSubLayers","every","layer","internalState","subLayers","initializeState","context","setState","updateObject","setNeedsUpdate","getPickingInfo","info","object","__source","parent","id","index","filterSubLayer","shouldRenderSubLayer","subLayerId","data","length","getSubLayerClass","DefaultLayerClass","_subLayerProps","overridingProps","props","type","getSubLayerRow","row","sourceObject","sourceObjectIndex","getSubLayerAccessor","accessor","objectInfo","target","x","i","getSubLayerProps","sublayerProps","_this$props$updateTri","opacity","pickable","visible","parameters","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","coordinateSystem","coordinateOrigin","wrapLongitude","positionFormat","modelMatrix","extensions","fetch","operation","newProps","updateTriggers","overridingSublayerProps","overridingSublayerTriggers","sublayerId","propTypes","PROP_TYPES_SYMBOL","subLayerPropTypes","_propTypes","key","propType","Object","assign","concat","all","extension","passThroughProps","call","_updateAutoHighlight","updateAutoHighlight","_getAttributeManager","_postUpdate","updateParams","forceUpdate","shouldUpdate","needsUpdate","subLayersList","renderLayers","flatten","Boolean","debug","StyledDiv","styled","div","theme","top","left","gridUnit","colors","grayscale","dark2","light5","typography","sizes","s","Tooltip","tooltip","y","content","safeContent","safeHtmlSpan","_jsx","children","DeckGLContainer","memo","forwardRef","ref","setTooltip","useState","lastUpdate","setLastUpdate","viewState","setViewState","viewport","prevViewport","usePrevious","useImperativeHandle","tick","useCallback","Date","now","setCV","setControlValue","useEffect","timer","setInterval","clearInterval","_isEqual","onViewStateChange","layers","some","l","map","height","width","_jsxs","_Fragment","style","position","DeckGL","controller","glOptions","preserveDrawingBuffer","StaticMap","mapStyle","mapboxApiAccessToken","DeckGLContainerStyledWrapper","TooltipRow","label","value","propertyMap","fillColor","color","fill","strokeColor","alterProps","propOverrides","keys","forEach","k","hexToRGB","features","recurseGeoJson","node","extraProps","obj","geometry","newNode","properties","push","setTooltipContent","o","_o$object","className","prop","_o$object$extraProps","getFillColor","feature","_feature$properties","getLineColor","_feature$properties2","getLayer","formData","payload","onAddFilter","fd","fc","fill_color_picker","sc","stroke_color_picker","r","g","b","a","jsFnMutator","js_data_mutator","sandboxedEval","GeoJsonLayer","slice_id","extruded","filled","stroked","getLineWidth","line_width","pointRadiusScale","point_radius_scale","lineWidthUnits","line_width_unit","commonLayerProps","DeckGLGeoJson","_payload$data2","containerRef","useRef","current","useMemo","autozoom","_payload$data","_payload$data$feature","points","reduce","acc","bounds","geojsonExtent","fitViewport","mapboxApiKey","mapbox_style","onSelect","onHover","onClick","tooltipContentGenerator","js_tooltip","picked","js_onclick_href","href","window","open","table_filter","undefined","line_column","percentiles","p1","p5","p95","p99","getAggFunc","arr","d3func","sortedArr","sort","o1","o2","d3array","hex","alpha","rgb","LAT_LIMIT","LNG_LIMIT","expandIfNeeded","curMin","curMax","minBound","maxBound","padding","Math","max","min","originalViewPort","minExtent","maxZoom","offset","bearing","pitch","latBounds","d3Extent","lngBounds","computeBoundsFromPoints","fitBounds","error","console","GLOBAL_CONTEXT","_","code","opts","sandbox","resultKey","floor","random","codeToEval","sandboxContext","vm"],"sourceRoot":""}