{"version":3,"file":"e19340cf0c4e661be50c.chunk.js","mappings":"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","sources":["webpack://superset/./src/components/Popover/Popover.tsx","webpack://superset/./src/features/home/commonMenuData.ts","webpack://superset/./src/features/queries/SyntaxHighlighterCopy.tsx","webpack://superset/./src/features/queries/hooks/useQueryPreviewState.ts","webpack://superset/./src/features/queries/QueryPreviewModal.tsx","webpack://superset/./src/pages/QueryHistoryList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Popover as AntdPopover } from 'antd';\nimport type { PopoverProps as AntdPopoverProps } from 'antd/lib/popover';\n\nexport interface PopoverProps extends AntdPopoverProps {\n  forceRender?: boolean;\n}\n\nexport const Popover = (props: PopoverProps) => <AntdPopover {...props} />;\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const commonMenuData = {\n  name: t('SQL'),\n  tabs: [\n    {\n      name: 'Saved queries',\n      label: t('Saved queries'),\n      url: '/savedqueryview/list/',\n      usesRouter: true,\n    },\n    {\n      name: 'Query history',\n      label: t('Query history'),\n      url: '/sqllab/history/',\n      usesRouter: true,\n    },\n  ],\n};\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, t } from '@superset-ui/core';\nimport { SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport sqlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport htmlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/htmlbars';\nimport markdownSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/markdown';\nimport jsonSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/json';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport Icons from 'src/components/Icons';\nimport { ToastProps } from 'src/components/MessageToasts/withToasts';\nimport copyTextToClipboard from 'src/utils/copy';\n\nSyntaxHighlighter.registerLanguage('sql', sqlSyntax);\nSyntaxHighlighter.registerLanguage('markdown', markdownSyntax);\nSyntaxHighlighter.registerLanguage('html', htmlSyntax);\nSyntaxHighlighter.registerLanguage('json', jsonSyntax);\n\nconst SyntaxHighlighterWrapper = styled.div`\n  margin-top: -24px;\n\n  &:hover {\n    svg {\n      visibility: visible;\n    }\n  }\n\n  svg {\n    position: relative;\n    top: 40px;\n    left: 512px;\n    visibility: hidden;\n    margin: -4px;\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n`;\n\nexport default function SyntaxHighlighterCopy({\n  addDangerToast,\n  addSuccessToast,\n  children,\n  ...syntaxHighlighterProps\n}: SyntaxHighlighterProps & {\n  children: string;\n  addDangerToast?: ToastProps['addDangerToast'];\n  addSuccessToast?: ToastProps['addSuccessToast'];\n  language: 'sql' | 'markdown' | 'html' | 'json';\n}) {\n  function copyToClipboard(textToCopy: string) {\n    copyTextToClipboard(() => Promise.resolve(textToCopy))\n      .then(() => {\n        if (addSuccessToast) {\n          addSuccessToast(t('SQL Copied!'));\n        }\n      })\n      .catch(() => {\n        if (addDangerToast) {\n          addDangerToast(t('Sorry, your browser does not support copying.'));\n        }\n      });\n  }\n  return (\n    <SyntaxHighlighterWrapper>\n      <Icons.Copy\n        tabIndex={0}\n        role=\"button\"\n        onClick={e => {\n          e.preventDefault();\n          e.currentTarget.blur();\n          copyToClipboard(children);\n        }}\n      />\n      <SyntaxHighlighter style={github} {...syntaxHighlighterProps}>\n        {children}\n      </SyntaxHighlighter>\n    </SyntaxHighlighterWrapper>\n  );\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\n\ntype BaseQueryObject = {\n  id: number;\n};\n\nexport default function useQueryPreviewState<D extends BaseQueryObject = any>({\n  queries,\n  fetchData,\n  currentQueryId,\n}: {\n  queries: D[];\n  fetchData: (id: number) => any;\n  currentQueryId: number;\n}) {\n  const index = queries.findIndex(query => query.id === currentQueryId);\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const [disablePrevious, setDisablePrevious] = useState(false);\n  const [disableNext, setDisableNext] = useState(false);\n\n  function checkIndex() {\n    setDisablePrevious(currentIndex === 0);\n    setDisableNext(currentIndex === queries.length - 1);\n  }\n\n  function handleDataChange(previous: boolean) {\n    const offset = previous ? -1 : 1;\n    const index = currentIndex + offset;\n    if (index >= 0 && index < queries.length) {\n      fetchData(queries[index].id);\n      setCurrentIndex(index);\n      checkIndex();\n    }\n  }\n\n  function handleKeyPress(ev: any) {\n    if (currentIndex >= 0 && currentIndex < queries.length) {\n      if (ev.key === 'ArrowDown' || ev.key === 'k') {\n        ev.preventDefault();\n        handleDataChange(false);\n      } else if (ev.key === 'ArrowUp' || ev.key === 'j') {\n        ev.preventDefault();\n        handleDataChange(true);\n      }\n    }\n  }\n\n  useEffect(() => {\n    checkIndex();\n  });\n\n  return {\n    handleKeyPress,\n    handleDataChange,\n    disablePrevious,\n    disableNext,\n  };\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport withToasts, {\n  ToastProps,\n} from 'src/components/MessageToasts/withToasts';\nimport SyntaxHighlighterCopy from 'src/features/queries/SyntaxHighlighterCopy';\nimport useQueryPreviewState from 'src/features/queries/hooks/useQueryPreviewState';\nimport { QueryObject } from 'src/views/CRUD/types';\n\nconst QueryTitle = styled.div`\n  color: ${({ theme }) => theme.colors.secondary.light2};\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  margin-bottom: 0;\n  text-transform: uppercase;\n`;\n\nconst QueryLabel = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  padding: 4px 0 24px 0;\n`;\n\nconst QueryViewToggle = styled.div`\n  margin: 0 0 ${({ theme }) => theme.gridUnit * 6}px 0;\n`;\n\nconst TabButton = styled.div`\n  display: inline;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  padding: ${({ theme }) => theme.gridUnit * 2}px\n    ${({ theme }) => theme.gridUnit * 4}px;\n  margin-right: ${({ theme }) => theme.gridUnit * 4}px;\n  color: ${({ theme }) => theme.colors.secondary.dark1};\n\n  &.active,\n  &:focus,\n  &:hover {\n    background: ${({ theme }) => theme.colors.secondary.light4};\n    border-bottom: none;\n    border-radius: ${({ theme }) => theme.borderRadius}px;\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n\n  &:hover:not(.active) {\n    background: ${({ theme }) => theme.colors.secondary.light5};\n  }\n`;\nconst StyledModal = styled(Modal)`\n  .ant-modal-body {\n    padding: ${({ theme }) => theme.gridUnit * 6}px;\n  }\n\n  pre {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n    font-weight: ${({ theme }) => theme.typography.weights.normal};\n    line-height: ${({ theme }) => theme.typography.sizes.l}px;\n    height: 375px;\n    border: none;\n  }\n`;\n\ninterface QueryPreviewModalProps extends ToastProps {\n  onHide: () => void;\n  openInSqlLab: (id: number) => any;\n  queries: QueryObject[];\n  query: QueryObject;\n  fetchData: (id: number) => any;\n  show: boolean;\n}\n\nfunction QueryPreviewModal({\n  onHide,\n  openInSqlLab,\n  queries,\n  query,\n  fetchData,\n  show,\n  addDangerToast,\n  addSuccessToast,\n}: QueryPreviewModalProps) {\n  const { handleKeyPress, handleDataChange, disablePrevious, disableNext } =\n    useQueryPreviewState<QueryObject>({\n      queries,\n      currentQueryId: query.id,\n      fetchData,\n    });\n\n  const [currentTab, setCurrentTab] = useState<'user' | 'executed'>('user');\n\n  const { id, sql, executed_sql } = query;\n  return (\n    <div role=\"none\" onKeyUp={handleKeyPress}>\n      <StyledModal\n        onHide={onHide}\n        show={show}\n        title={t('Query preview')}\n        footer={\n          <>\n            <Button\n              data-test=\"previous-query\"\n              key=\"previous-query\"\n              disabled={disablePrevious}\n              onClick={() => handleDataChange(true)}\n            >\n              {t('Previous')}\n            </Button>\n            <Button\n              data-test=\"next-query\"\n              key=\"next-query\"\n              disabled={disableNext}\n              onClick={() => handleDataChange(false)}\n            >\n              {t('Next')}\n            </Button>\n            <Button\n              data-test=\"open-in-sql-lab\"\n              key=\"open-in-sql-lab\"\n              buttonStyle=\"primary\"\n              onClick={() => openInSqlLab(id)}\n            >\n              {t('Open in SQL Lab')}\n            </Button>\n          </>\n        }\n      >\n        <QueryTitle>{t('Tab name')}</QueryTitle>\n        <QueryLabel>{query.tab_name}</QueryLabel>\n        <QueryViewToggle>\n          <TabButton\n            role=\"button\"\n            data-test=\"toggle-user-sql\"\n            className={cx({ active: currentTab === 'user' })}\n            onClick={() => setCurrentTab('user')}\n          >\n            {t('User query')}\n          </TabButton>\n          <TabButton\n            role=\"button\"\n            data-test=\"toggle-executed-sql\"\n            className={cx({ active: currentTab === 'executed' })}\n            onClick={() => setCurrentTab('executed')}\n          >\n            {t('Executed query')}\n          </TabButton>\n        </QueryViewToggle>\n        <SyntaxHighlighterCopy\n          addDangerToast={addDangerToast}\n          addSuccessToast={addSuccessToast}\n          language=\"sql\"\n        >\n          {(currentTab === 'user' ? sql : executed_sql) || ''}\n        </SyntaxHighlighterCopy>\n      </StyledModal>\n    </div>\n  );\n}\n\nexport default withToasts(QueryPreviewModal);\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, useState, useCallback, ReactElement } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  QueryState,\n  styled,\n  SupersetClient,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport moment from 'moment';\nimport {\n  createFetchRelated,\n  createFetchDistinct,\n  createErrorHandler,\n  shortenSQL,\n} from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport Label from 'src/components/Label';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport Popover from 'src/components/Popover';\nimport { commonMenuData } from 'src/features/home/commonMenuData';\nimport ListView, {\n  Filters,\n  FilterOperator,\n  ListViewProps,\n} from 'src/components/ListView';\nimport { Tooltip } from 'src/components/Tooltip';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { DATETIME_WITH_TIME_ZONE, TIME_WITH_MS } from 'src/constants';\nimport { QueryObject, QueryObjectColumns } from 'src/views/CRUD/types';\n\nimport Icons from 'src/components/Icons';\nimport QueryPreviewModal from 'src/features/queries/QueryPreviewModal';\nimport { addSuccessToast } from 'src/components/MessageToasts/actions';\nimport getOwnerName from 'src/utils/getOwnerName';\n\nconst PAGE_SIZE = 25;\nconst SQL_PREVIEW_MAX_LINES = 4;\n\nconst TopAlignedListView = styled(ListView)<ListViewProps<QueryObject>>`\n  table .table-cell {\n    vertical-align: top;\n  }\n`;\n\nSyntaxHighlighter.registerLanguage('sql', sql);\nconst StyledSyntaxHighlighter = styled(SyntaxHighlighter)`\n  height: ${({ theme }) => theme.gridUnit * 26}px;\n  overflow: hidden !important; /* needed to override inline styles */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\ninterface QueryListProps {\n  addDangerToast: (msg: string, config?: any) => any;\n  addSuccessToast: (msg: string, config?: any) => any;\n}\n\nconst StyledTableLabel = styled.div`\n  .count {\n    margin-left: 5px;\n    color: ${({ theme }) => theme.colors.primary.base};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst StyledPopoverItem = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.dark2};\n`;\n\nconst TimerLabel = styled(Label)`\n  text-align: left;\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n`;\n\nfunction QueryList({ addDangerToast }: QueryListProps) {\n  const {\n    state: { loading, resourceCount: queryCount, resourceCollection: queries },\n    fetchData,\n  } = useListViewResource<QueryObject>(\n    'query',\n    t('Query history'),\n    addDangerToast,\n    false,\n  );\n\n  const [queryCurrentlyPreviewing, setQueryCurrentlyPreviewing] =\n    useState<QueryObject>();\n\n  const theme = useTheme();\n  const history = useHistory();\n\n  const handleQueryPreview = useCallback(\n    (id: number) => {\n      SupersetClient.get({\n        endpoint: `/api/v1/query/${id}`,\n      }).then(\n        ({ json = {} }) => {\n          setQueryCurrentlyPreviewing({ ...json.result });\n        },\n        createErrorHandler(errMsg =>\n          addDangerToast(\n            t('There was an issue previewing the selected query. %s', errMsg),\n          ),\n        ),\n      );\n    },\n    [addDangerToast],\n  );\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Query history',\n    ...commonMenuData,\n  };\n\n  const initialSort = [{ id: QueryObjectColumns.StartTime, desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        Cell: ({\n          row: {\n            original: { status },\n          },\n        }: {\n          row: {\n            original: {\n              status: QueryState;\n            };\n          };\n        }) => {\n          const statusConfig: {\n            name: ReactElement | null;\n            label: string;\n          } = {\n            name: null,\n            label: '',\n          };\n          if (status === QueryState.Success) {\n            statusConfig.name = (\n              <Icons.Check iconColor={theme.colors.success.base} />\n            );\n            statusConfig.label = t('Success');\n          } else if (\n            status === QueryState.Failed ||\n            status === QueryState.Stopped\n          ) {\n            statusConfig.name = (\n              <Icons.XSmall\n                iconColor={\n                  status === QueryState.Failed\n                    ? theme.colors.error.base\n                    : theme.colors.grayscale.base\n                }\n              />\n            );\n            statusConfig.label = t('Failed');\n          } else if (status === QueryState.Running) {\n            statusConfig.name = (\n              <Icons.Running iconColor={theme.colors.primary.base} />\n            );\n            statusConfig.label = t('Running');\n          } else if (status === QueryState.TimedOut) {\n            statusConfig.name = (\n              <Icons.Offline iconColor={theme.colors.grayscale.light1} />\n            );\n            statusConfig.label = t('Offline');\n          } else if (\n            status === QueryState.Scheduled ||\n            status === QueryState.Pending\n          ) {\n            statusConfig.name = (\n              <Icons.Queued iconColor={theme.colors.grayscale.base} />\n            );\n            statusConfig.label = t('Scheduled');\n          }\n          return (\n            <Tooltip title={statusConfig.label} placement=\"bottom\">\n              <span>{statusConfig.name}</span>\n            </Tooltip>\n          );\n        },\n        accessor: QueryObjectColumns.Status,\n        size: 'xs',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.StartTime,\n        Header: t('Time'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { start_time },\n          },\n        }: any) => {\n          const startMoment = moment.utc(start_time).local();\n          const formattedStartTimeData = startMoment\n            .format(DATETIME_WITH_TIME_ZONE)\n            .split(' ');\n\n          const formattedStartTime = (\n            <>\n              {formattedStartTimeData[0]} <br />\n              {formattedStartTimeData[1]}\n            </>\n          );\n          return formattedStartTime;\n        },\n      },\n      {\n        Header: t('Duration'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { status, start_time, end_time },\n          },\n        }: any) => {\n          const timerType = status === QueryState.Failed ? 'danger' : status;\n          const timerTime = end_time\n            ? moment(moment.utc(end_time - start_time)).format(TIME_WITH_MS)\n            : '00:00:00.000';\n          return (\n            <TimerLabel type={timerType} role=\"timer\">\n              {timerTime}\n            </TimerLabel>\n          );\n        },\n      },\n      {\n        accessor: QueryObjectColumns.TabName,\n        Header: t('Tab name'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.DatabaseName,\n        Header: t('Database'),\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.Database,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.Schema,\n        Header: t('Schema'),\n        size: 'xl',\n      },\n      {\n        Cell: ({\n          row: {\n            original: { sql_tables: tables = [] },\n          },\n        }: any) => {\n          const names = tables.map((table: any) => table.table);\n          const main = names.length > 0 ? names.shift() : '';\n\n          if (names.length) {\n            return (\n              <StyledTableLabel>\n                <span>{main}</span>\n                <Popover\n                  placement=\"right\"\n                  title={t('TABLES')}\n                  trigger=\"click\"\n                  content={\n                    <>\n                      {names.map((name: string) => (\n                        <StyledPopoverItem key={name}>{name}</StyledPopoverItem>\n                      ))}\n                    </>\n                  }\n                >\n                  <span className=\"count\">(+{names.length})</span>\n                </Popover>\n              </StyledTableLabel>\n            );\n          }\n\n          return main;\n        },\n        accessor: QueryObjectColumns.SqlTables,\n        Header: t('Tables'),\n        size: 'xl',\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.UserFirstName,\n        Header: t('User'),\n        size: 'xl',\n        Cell: ({\n          row: {\n            original: { user },\n          },\n        }: any) => getOwnerName(user),\n      },\n      {\n        accessor: QueryObjectColumns.User,\n        hidden: true,\n      },\n      {\n        accessor: QueryObjectColumns.Rows,\n        Header: t('Rows'),\n        size: 'md',\n      },\n      {\n        accessor: QueryObjectColumns.Sql,\n        Header: t('SQL'),\n        Cell: ({ row: { original, id } }: any) => (\n          <div\n            tabIndex={0}\n            role=\"button\"\n            data-test={`open-sql-preview-${id}`}\n            onClick={() => setQueryCurrentlyPreviewing(original)}\n          >\n            <StyledSyntaxHighlighter language=\"sql\" style={github}>\n              {shortenSQL(original.sql, SQL_PREVIEW_MAX_LINES)}\n            </StyledSyntaxHighlighter>\n          </div>\n        ),\n      },\n      {\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        Cell: ({\n          row: {\n            original: { id },\n          },\n        }: any) => (\n          <Tooltip title={t('Open query in SQL Lab')} placement=\"bottom\">\n            <Link to={`/sqllab?queryId=${id}`}>\n              <Icons.Full iconColor={theme.colors.grayscale.base} />\n            </Link>\n          </Tooltip>\n        ),\n      },\n    ],\n    [],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Database'),\n        key: 'database',\n        id: 'database',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'query',\n          'database',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching database values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('State'),\n        key: 'state',\n        id: 'status',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchDistinct(\n          'query',\n          'status',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching schema values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('User'),\n        key: 'user',\n        id: 'user',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: 'All',\n        fetchSelects: createFetchRelated(\n          'query',\n          'user',\n          createErrorHandler(errMsg =>\n            addDangerToast(\n              t('An error occurred while fetching user values: %s', errMsg),\n            ),\n          ),\n        ),\n        paginate: true,\n      },\n      {\n        Header: t('Time range'),\n        key: 'start_time',\n        id: 'start_time',\n        input: 'datetime_range',\n        operator: FilterOperator.Between,\n      },\n      {\n        Header: t('Search by query text'),\n        key: 'sql',\n        id: 'sql',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n    ],\n    [addDangerToast],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      {queryCurrentlyPreviewing && (\n        <QueryPreviewModal\n          onHide={() => setQueryCurrentlyPreviewing(undefined)}\n          query={queryCurrentlyPreviewing}\n          queries={queries}\n          fetchData={handleQueryPreview}\n          openInSqlLab={(id: number) => history.push(`/sqllab?queryId=${id}`)}\n          show\n        />\n      )}\n      <TopAlignedListView\n        className=\"query-history-list-view\"\n        columns={columns}\n        count={queryCount}\n        data={queries}\n        fetchData={fetchData}\n        filters={filters}\n        initialSort={initialSort}\n        loading={loading}\n        pageSize={PAGE_SIZE}\n        highlightRowId={queryCurrentlyPreviewing?.id}\n        refreshData={() => {}}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n      />\n    </>\n  );\n}\n\nexport default withToasts(QueryList);\n"],"names":["Popover","props","_jsx","AntdPopover","commonMenuData","name","t","tabs","label","url","usesRouter","SyntaxHighlighter","registerLanguage","sqlSyntax","markdownSyntax","htmlSyntax","jsonSyntax","SyntaxHighlighterWrapper","styled","div","theme","colors","grayscale","base","SyntaxHighlighterCopy","addDangerToast","addSuccessToast","children","syntaxHighlighterProps","_jsxs","Icons","Copy","tabIndex","role","onClick","e","textToCopy","preventDefault","currentTarget","blur","copyTextToClipboard","Promise","resolve","then","catch","style","github","useQueryPreviewState","queries","fetchData","currentQueryId","index","findIndex","query","id","currentIndex","setCurrentIndex","useState","disablePrevious","setDisablePrevious","disableNext","setDisableNext","checkIndex","length","handleDataChange","previous","useEffect","handleKeyPress","ev","key","QueryTitle","secondary","light2","typography","sizes","s","QueryLabel","dark2","m","QueryViewToggle","gridUnit","TabButton","dark1","light4","borderRadius","light5","StyledModal","Modal","xs","weights","normal","l","withToasts","onHide","openInSqlLab","show","currentTab","setCurrentTab","sql","executed_sql","onKeyUp","title","footer","_Fragment","Button","disabled","buttonStyle","tab_name","className","cx","active","language","TopAlignedListView","ListView","StyledSyntaxHighlighter","StyledTableLabel","primary","StyledPopoverItem","TimerLabel","Label","families","monospace","state","loading","resourceCount","queryCount","resourceCollection","useListViewResource","queryCurrentlyPreviewing","setQueryCurrentlyPreviewing","useTheme","history","useHistory","handleQueryPreview","useCallback","SupersetClient","get","endpoint","json","result","createErrorHandler","errMsg","menuData","activeChild","initialSort","QueryObjectColumns","StartTime","desc","columns","useMemo","Cell","row","original","status","statusConfig","QueryState","Success","Check","iconColor","success","Failed","Stopped","XSmall","error","Running","TimedOut","Offline","light1","Scheduled","Pending","Queued","Tooltip","placement","accessor","Status","size","disableSortBy","Header","start_time","formattedStartTimeData","moment","local","format","DATETIME_WITH_TIME_ZONE","split","end_time","timerType","timerTime","TIME_WITH_MS","type","TabName","DatabaseName","Database","hidden","Schema","sql_tables","tables","names","map","table","main","shift","trigger","content","SqlTables","UserFirstName","user","getOwnerName","User","Rows","Sql","shortenSQL","Link","to","Full","filters","input","operator","FilterOperator","RelationOneMany","unfilteredLabel","fetchSelects","createFetchRelated","paginate","Equals","createFetchDistinct","Between","Contains","SubMenu","QueryPreviewModal","undefined","push","count","data","pageSize","highlightRowId","refreshData"],"sourceRoot":""}